class t{constructor(t){this.container=document.getElementById(t),this.canvas=null,this.ctx=null,this.animationFrameId=null,this.width=0,this.height=0}initialize(){this.container&&(this.canvas=document.createElement("canvas"),this.canvas.style.position="absolute",this.canvas.style.top="0",this.canvas.style.left="0",this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.style.zIndex="-1",this.canvas.style.pointerEvents="none",this.container.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas.bind(this)),this.animate())}resizeCanvas(){this.canvas&&(this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.canvas.width=this.width,this.canvas.height=this.height)}animate(){if(!this.ctx)return;const t=()=>{this.ctx.clearRect(0,0,this.width,this.height),this.ctx.fillStyle="rgba(0, 0, 0, 0.1)";for(let t=0;t<this.height;t+=4)this.ctx.fillRect(0,t,this.width,2);const i=this.ctx.getImageData(0,0,this.width,this.height),s=i.data;for(let t=0;t<s.length;t+=4){const i=20*(Math.random()-.5);s[t]=s[t]+i,s[t+1]=s[t+1]+i,s[t+2]=s[t+2]+i}this.ctx.putImageData(i,0,0),this.animationFrameId=requestAnimationFrame(t)};t()}destroy(){cancelAnimationFrame(this.animationFrameId),window.removeEventListener("resize",this.resizeCanvas.bind(this)),this.canvas&&this.container.contains(this.canvas)&&this.container.removeChild(this.canvas)}}export{t as TerminalBackground};
