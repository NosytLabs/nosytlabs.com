/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/**/*.{astro,js,jsx,ts,tsx,mdx}',
    './public/**/*.html'
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: 'hsl(var(--color-primary-50) / <alpha-value>)',
          100: 'hsl(var(--color-primary-100) / <alpha-value>)',
          200: 'hsl(var(--color-primary-200) / <alpha-value>)',
          300: 'hsl(var(--color-primary-300) / <alpha-value>)',
          400: 'hsl(var(--color-primary-400) / <alpha-value>)',
          500: 'hsl(var(--color-primary-500) / <alpha-value>)',
          600: 'hsl(var(--color-primary-600) / <alpha-value>)',
          700: 'hsl(var(--color-primary-700) / <alpha-value>)',
          800: 'hsl(var(--color-primary-800) / <alpha-value>)',
          900: 'hsl(var(--color-primary-900) / <alpha-value>)',
          950: 'hsl(var(--color-primary-950) / <alpha-value>)',
        },
        neutral: {
          0: 'hsl(var(--color-neutral-0) / <alpha-value>)',
          50: 'hsl(var(--color-neutral-50) / <alpha-value>)',
          100: 'hsl(var(--color-neutral-100) / <alpha-value>)',
          200: 'hsl(var(--color-neutral-200) / <alpha-value>)',
          300: 'hsl(var(--color-neutral-300) / <alpha-value>)',
          400: 'hsl(var(--color-neutral-400) / <alpha-value>)',
          500: 'hsl(var(--color-neutral-500) / <alpha-value>)',
          600: 'hsl(var(--color-neutral-600) / <alpha-value>)',
          700: 'hsl(var(--color-neutral-700) / <alpha-value>)',
          800: 'hsl(var(--color-neutral-800) / <alpha-value>)',
          900: 'hsl(var(--color-neutral-900) / <alpha-value>)',
          950: 'hsl(var(--color-neutral-950) / <alpha-value>)',
        },
        surface: {
          primary: 'hsl(var(--surface-primary) / <alpha-value>)',
          secondary: 'hsl(var(--surface-secondary) / <alpha-value>)',
          tertiary: 'hsl(var(--surface-tertiary) / <alpha-value>)',
          quaternary: 'hsl(var(--surface-quaternary) / <alpha-value>)',
          muted: 'hsl(var(--surface-muted) / <alpha-value>)',
          elevated: 'hsl(var(--surface-elevated) / <alpha-value>)',
          overlay: 'hsl(var(--surface-overlay) / <alpha-value>)',
        },
        text: {
          primary: 'hsl(var(--text-primary) / <alpha-value>)',
          secondary: 'hsl(var(--text-secondary) / <alpha-value>)',
          tertiary: 'hsl(var(--text-tertiary) / <alpha-value>)',
          quaternary: 'hsl(var(--text-quaternary) / <alpha-value>)',
          muted: 'hsl(var(--text-muted) / <alpha-value>)',
          inverse: 'hsl(var(--text-inverse) / <alpha-value>)',
          accent: 'hsl(var(--text-accent) / <alpha-value>)',
          'on-brand': 'hsl(var(--text-on-brand) / <alpha-value>)',
        },
        border: {
          DEFAULT: 'hsl(var(--border) / <alpha-value>)',
          primary: 'hsl(var(--border-primary) / <alpha-value>)',
          secondary: 'hsl(var(--border-secondary) / <alpha-value>)',
          accent: 'hsl(var(--border-accent) / <alpha-value>)',
          subtle: 'hsl(var(--border-subtle) / <alpha-value>)',
        },
        brand: {
          primary: 'hsl(var(--brand-primary) / <alpha-value>)',
          'primary-hover': 'hsl(var(--brand-primary-hover) / <alpha-value>)',
          accent: 'hsl(var(--brand-accent) / <alpha-value>)',
        },
        interactive: {
          primary: 'hsl(var(--interactive-primary) / <alpha-value>)',
          'primary-hover': 'hsl(var(--interactive-primary-hover) / <alpha-value>)',
          'primary-active': 'hsl(var(--interactive-primary-active) / <alpha-value>)',
          secondary: 'hsl(var(--interactive-secondary) / <alpha-value>)',
          'secondary-hover': 'hsl(var(--interactive-secondary-hover) / <alpha-value>)',
          'secondary-active': 'hsl(var(--interactive-secondary-active) / <alpha-value>)',
        },
        feedback: {
          success: 'hsl(var(--success) / <alpha-value>)',
          'success-hover': 'hsl(var(--success-hover) / <alpha-value>)',
          'success-light': 'hsl(var(--success-light) / <alpha-value>)',
          warning: 'hsl(var(--warning) / <alpha-value>)',
          'warning-hover': 'hsl(var(--warning-hover) / <alpha-value>)',
          'warning-light': 'hsl(var(--warning-light) / <alpha-value>)',
          error: 'hsl(var(--error) / <alpha-value>)',
          'error-hover': 'hsl(var(--error-hover) / <alpha-value>)',
          'error-light': 'hsl(var(--error-light) / <alpha-value>)',
          info: 'hsl(var(--info) / <alpha-value>)',
        },
      },
      spacing: {
        '0': 'var(--space-0)',
        '0.5': 'var(--space-0-5)',
        '1': 'var(--space-1)',
        '1.5': 'var(--space-1-5)',
        '2': 'var(--space-2)',
        '2.5': 'var(--space-2-5)',
        '3': 'var(--space-3)',
        '3.5': 'var(--space-3-5)',
        '4': 'var(--space-4)',
        '5': 'var(--space-5)',
        '6': 'var(--space-6)',
        '8': 'var(--space-8)',
        '10': 'var(--space-10)',
        '12': 'var(--space-12)',
        '16': 'var(--space-16)',
        '20': 'var(--space-20)',
        '24': 'var(--space-24)',
        '32': 'var(--space-32)',
        '40': 'var(--space-40)',
        '48': 'var(--space-48)',
        '56': 'var(--space-56)',
        '64': 'var(--space-64)',
        '72': 'var(--space-72)',
      },
      fontFamily: {
        primary: 'var(--font-primary)',
        mono: 'var(--font-mono)',
      },
      fontSize: {
        xs: 'var(--text-xs)',
        sm: 'var(--text-sm)',
        base: 'var(--text-base)',
        lg: 'var(--text-lg)',
        xl: 'var(--text-xl)',
        '2xl': 'var(--text-2xl)',
        '3xl': 'var(--text-3xl)',
        '4xl': 'var(--text-4xl)',
        '5xl': 'var(--text-5xl)',
        '6xl': 'var(--text-6xl)',
        '7xl': 'var(--text-7xl)',
      },
      fontWeight: {
        light: 'var(--font-light)',
        normal: 'var(--font-normal)',
        medium: 'var(--font-medium)',
        semibold: 'var(--font-semibold)',
        bold: 'var(--font-bold)',
        extrabold: 'var(--font-extrabold)',
      },
      lineHeight: {
        none: 'var(--line-height-none)',
        tight: 'var(--line-height-tight)',
        snug: 'var(--line-height-snug)',
        normal: 'var(--line-height-normal)',
        relaxed: 'var(--line-height-relaxed)',
        loose: 'var(--line-height-loose)',
      },
      borderRadius: {
        none: 'var(--radius-none)',
        sm: 'var(--radius-sm)',
        DEFAULT: 'var(--radius)',
        md: 'var(--radius-md)',
        lg: 'var(--radius-lg)',
        xl: 'var(--radius-xl)',
        '2xl': 'var(--radius-2xl)',
        '3xl': 'var(--radius-3xl)',
        full: 'var(--radius-full)',
      },
      boxShadow: {
        sm: 'var(--shadow-sm)',
        DEFAULT: 'var(--shadow-base)',
        md: 'var(--shadow-md)',
        lg: 'var(--shadow-lg)',
        xl: 'var(--shadow-xl)',
        '2xl': 'var(--shadow-2xl)',
        inner: 'var(--shadow-inner)',
      },
      transitionProperty: {
        DEFAULT: 'color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter',
      },
      transitionTimingFunction: {
        DEFAULT: 'var(--transition-base)',
      },
      zIndex: {
        hide: 'var(--z-hide)',
        auto: 'var(--z-auto)',
        base: 'var(--z-base)',
        docked: 'var(--z-docked)',
        dropdown: 'var(--z-dropdown)',
        sticky: 'var(--z-sticky)',
        banner: 'var(--z-banner)',
        overlay: 'var(--z-overlay)',
        modal: 'var(--z-modal)',
        popover: 'var(--z-popover)',
        skiplink: 'var(--z-skiplink)',
        toast: 'var(--z-toast)',
        tooltip: 'var(--z-tooltip)',
      },
    },
  },
  plugins: [],
  corePlugins: {
    // accessibility: false, // Re-enable if you have custom sr-only styles
  },
};