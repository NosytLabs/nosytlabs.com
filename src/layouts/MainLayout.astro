---
import { useEffect, useState } from 'react';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FontPreloader from '../components/FontPreloader.astro';
import PerformanceMonitor from '../components/PerformanceMonitor.astro';
import ResponsiveImageOptimizer from '../components/ResponsiveImageOptimizer.astro';
import CriticalResourceLoader from '../components/CriticalResourceLoader.astro';
import AnimationOptimizer from '../components/AnimationOptimizer.astro';
import CSSOptimizer from '../components/CSSOptimizer.astro';
import CSSDebugger from '../components/CSSDebugger.astro';
import CSSValidator from '../components/CSSValidator.astro';
import LayoutFixer from '../components/LayoutFixer.astro';
import DiagnosticsDashboard from '../components/DiagnosticsDashboard.astro';

export interface Props {
  title: string;
  description: string;
  image?: string;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
}

const { title, description = 'Nosyt Labs - Web Development & AI Integration', image = '/placeholder-social-image.jpg', publishedTime, modifiedTime, author } = Astro.props as Props;
const canonicalUrl = `https://nosytlabs.com${Astro.url.pathname}`;
---

<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <!-- Google Fonts for Inter and JetBrains Mono -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=JetBrains+Mono:wght@100..800&display=swap" rel="stylesheet">
    <title>{title}</title>
    <meta name="description" content={description} />
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={`https://nosytlabs.com${image}`} />
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={`https://nosytlabs.com${image}`} />
    <!-- Schema.org structured data -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "Nosyt Labs",
        "url": "https://nosytlabs.com",
        "logo": "https://nosytlabs.com/logo.svg",
        "description": "Nosyt Labs specializes in web development and AI integration, delivering innovative digital solutions.",
        "address": {
          "@type": "PostalAddress",
          "addressCountry": "US"
        },
        "contactPoint": {
          "@type": "ContactPoint",
          "contactType": "customer service",
          "telephone": "+1-555-0123",
          "email": "hello@nosytlabs.com"
        },
        "sameAs": [
          "https://twitter.com/nosytlabs",
          "https://linkedin.com/company/nosytlabs"
        ]
      }
    </script>
    <!-- Preload critical resources -->
    <CriticalResourceLoader client:load />
    <!-- CSS Reset and Base Styles with 8px grid and typography hierarchy -->
    <style>
      /* CSS Reset (Normalize) */
      *, *::before, *::after {
        box-sizing: border-box;
      }
      html {
        line-height: 1.15; /* 1 */
        -webkit-text-size-adjust: 100%; /* 2 */
      }
      body {
        margin: 0;
        font-family: 'Inter', sans-serif;
        font-size: 1rem; /* 16px */
        line-height: 1.5;
        color: #333;
        background-color: #fff;
      }
      main {
        display: block;
      }
      h1 {
        font-size: 3rem; /* 48px */
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 2rem;
      }
      h2 {
        font-size: 2.5rem; /* 40px */
        font-weight: 600;
        line-height: 1.3;
        margin-bottom: 1.5rem;
      }
      h3 {
        font-size: 2rem; /* 32px */
        font-weight: 600;
        line-height: 1.3;
        margin-bottom: 1rem;
      }
      p {
        margin-bottom: 1rem;
      }
      a {
        color: #0066cc;
        text-decoration-skip-ink: auto;
        text-decoration: underline;
      }
      a:hover {
        color: #0052a3;
      }
      button, [role="button"] {
        cursor: pointer;
        border: none;
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        border-radius: 0.375rem;
        transition: all 0.2s ease;
        background-color: #0066cc;
        color: white;
        min-height: 48px; /* Touch target */
      }
      button:hover, button:focus {
        background-color: #0052a3;
        transform: scale(1.05);
        outline: 2px solid #0066cc;
        outline-offset: 2px;
      }
      button:active {
        transform: scale(0.98);
      }
      /* 8px baseline grid */
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem; /* 8px multiples */
      }
      .spacing-1 { margin-bottom: 0.5rem; } /* 8px */
      .spacing-2 { margin-bottom: 1rem; } /* 16px */
      .spacing-3 { margin-bottom: 1.5rem; } /* 24px */
      .spacing-4 { margin-bottom: 2rem; } /* 32px */
      .pad-1 { padding: 0.5rem; }
      .pad-2 { padding: 1rem; }
      .pad-3 { padding: 1.5rem; }
      .pad-4 { padding: 2rem; }
      /* Responsive */
      @media (min-width: 640px) { .container { padding: 0 2rem; } }
      @media (min-width: 768px) { .container { padding: 0 3rem; } }
      /* Accessibility: High contrast */
      :focus-visible {
        outline: 2px solid #0066cc;
        outline-offset: 2px;
      }
      /* Code font */
      code {
        font-family: 'JetBrains Mono', monospace;
      }
    </style>
    <!-- Tailwind CSS if used -->
    <link rel="stylesheet" href="/styles/global.css" />
    <!-- Component-specific styles moved to classes -->
    <style>
      /* Critical inline CSS for above-the-fold with accessibility */
      :root {
        --primary: #0066cc;
        --primary-dark: #0052a3;
        --bg-light: #ffffff;
        --bg-dark: #0f172a;
        --text-light: #1e293b;
        --text-dark: #e2e8f0;
        --border-light: #e2e8f0;
        --border-dark: #334155;
      }
      [data-theme="dark"] {
        --bg-light: var(--bg-dark);
        --text-light: var(--text-dark);
        --border-light: var(--border-dark);
        background-color: var(--bg-dark);
        color: var(--text-dark);
      }
      body {
        background-color: var(--bg-light);
        color: var(--text-light);
      }
      /* Ensure high contrast */
      a, button {
        color: #0066cc;
        background-color: transparent;
      }
      a:focus, button:focus {
        outline-color: var(--primary);
      }
      /* Smooth transitions */
      *, *::before, *::after {
        transition: background-color 0.2s ease, color 0.2s ease, transform 0.2s ease;
      }
    </style>
  </head>
  <body>
    <PerformanceMonitor client:load />
    <ResponsiveImageOptimizer client:load />
    <AnimationOptimizer client:load />
    <CSSOptimizer client:load />
    <CSSDebugger client:load />
    <CSSValidator client:load />
    <LayoutFixer client:load />
    <DiagnosticsDashboard client:load />
    <Header client:load />
    <main id="main-content" tabindex="-1">
      <slot />
    </main>
    <Footer />
    <!-- Back to Top Button with ARIA -->
    <button
      id="backToTop"
      aria-label="Back to top"
      title="Back to top"
      class="fixed bottom-4 right-4 hidden p-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 z-50 md:block"
      style="display: none;"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
      </svg>
    </button>
    <!-- Theme Toggle Button with ARIA -->
    <button
      id="themeToggle"
      aria-label="Toggle dark mode"
      title="Toggle dark mode"
      class="fixed top-4 right-4 p-2 bg-gray-200 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full shadow-lg hover:bg-gray-300 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 z-50"
    >
      <svg id="sunIcon" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
      </svg>
      <svg id="moonIcon" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
        <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
      </svg>
    </button>
  </body>
</html>

<!-- Inline JavaScript with error handling -->
<script define:vars={{ threshold: 100 }}>
  // Back to Top
  const backToTop = document.getElementById('backToTop');
  if (backToTop) {
    window.addEventListener('scroll', () => {
      if (window.scrollY > threshold) {
        backToTop.style.display = 'block';
      } else {
        backToTop.style.display = 'none';
      }
    });
    backToTop.addEventListener('click', () => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    });
  }

  // Header scroll effect
  const header = document.querySelector('header');
  if (header) {
    window.addEventListener('scroll', () => {
      if (window.scrollY > 50) {
        header.classList.add('shadow-md', 'bg-white/80', 'backdrop-blur-sm');
      } else {
        header.classList.remove('shadow-md', 'bg-white/80', 'backdrop-blur-sm');
      }
    });
  }

  // Performance Monitor
  if (typeof PerformanceObserver !== 'undefined') {
    const observer = new PerformanceObserver((list) => {
      list.getEntries().forEach((entry) => {
        console.log(`${entry.name}: ${entry.duration}ms`);
      });
    });
    observer.observe({ entryTypes: ['paint', 'navigation'] });
  }

  // Service Worker Registration
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/sw.js').then((registration) => {
      console.log('SW registered:', registration);
    }).catch((error) => {
      console.log('SW registration failed:', error);
    });
  }

  // Theme Detection and Toggle
  const themeToggle = document.getElementById('themeToggle');
  const sunIcon = document.getElementById('sunIcon');
  const moonIcon = document.getElementById('moonIcon');
  if (themeToggle && sunIcon && moonIcon) {
    const currentTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    document.documentElement.setAttribute('data-theme', currentTheme);
    moonIcon.classList.toggle('hidden', currentTheme === 'dark');
    sunIcon.classList.toggle('hidden', currentTheme !== 'dark');

    themeToggle.addEventListener('click', () => {
      const newTheme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      moonIcon.classList.toggle('hidden', newTheme === 'dark');
      sunIcon.classList.toggle('hidden', newTheme !== 'dark');
    });

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        const theme = e.matches ? 'dark' : 'light';
        document.documentElement.setAttribute('data-theme', theme);
        moonIcon.classList.toggle('hidden', theme === 'dark');
        sunIcon.classList.toggle('hidden', theme !== 'dark');
      }
    });
  }
</script>

<!-- Remove FontPreloader since using Google Fonts -->
<!-- <FontPreloader client:load /> ---