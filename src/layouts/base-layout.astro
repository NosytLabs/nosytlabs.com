---
import { SITE, TWITTER_USER_NAME } from '../config';
import { generateSEOTags, generateWebSiteStructuredData, generateOrganizationStructuredData } from '../utils/seo';
import { ViewTransitions } from 'astro:transitions';
import { Toaster } from 'sonner';
import SpeedInsights from "@vercel/speed-insights/astro";
import { Analytics } from "@vercel/analytics/react"
import { getNonce } from '../utils/nonce-helpers';
import '../styles/main.css';


import Navigation from '../components/navigation/Navigation.astro';
import Footer from '../components/layout/footer.astro';

// Define the props that the layout can accept
export interface Props {
    title?: string;
    description?: string;
    url?: string;
    image?: string;
    author?: string;
    keywords?: string | string[];
    type?: 'website' | 'article';
    publishedTime?: string;
    modifiedTime?: string;
    tags?: string[];
    noindex?: boolean;
    nofollow?: boolean;
    ogImage?: string;
    twitterImage?: string;
    twitterUser?: string;
    twitterCard?: 'summary' | 'summary_large_image' | 'app' | 'player';
    canonicalUrl?: string;
    structuredData?: Record<string, any>;
    aiPowered?: boolean;
    preloadImages?: string[];
}

// Set default props
const {
    title = SITE.name,
    description = SITE.description,
    image = SITE.image,
    author = SITE.author,
    keywords,
    type = 'website',
    publishedTime,
    modifiedTime,
    tags,
    noindex = false,
    nofollow = false,
    ogImage,
    twitterImage,
    twitterUser = TWITTER_USER_NAME,
    twitterCard = 'summary_large_image',
    canonicalUrl,
    structuredData,
    aiPowered = false,
    preloadImages = [],
} = Astro.props as Props;

// Generate SEO tags
const seoTags = generateSEOTags({
    title,
    description,
    keywords: Array.isArray(keywords) ? keywords : (typeof keywords === 'string' ? [keywords] : undefined),
    image: ogImage || twitterImage || image,
    type,
    author,
    publishedTime,
    modifiedTime,
    tags,
    canonicalUrl: canonicalUrl || Astro.url.href,
    noindex,
    nofollow,
}, Astro.url.href);

const currentUrl = Astro.url?.pathname || '/';

// Generate structured data
const finalStructuredData = structuredData || [generateOrganizationStructuredData().data, generateWebSiteStructuredData().data];





const nonce = getNonce(Astro);
---

<!DOCTYPE html>
<html lang={SITE.lang}>
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <meta name="generator" content={Astro.generator} />

    <!-- Basic SEO Meta Tags -->
    <title>{seoTags.title}</title>
    <meta name="description" content={seoTags.description} />
    <meta name="keywords" content={seoTags.keywords} />
    <meta name="author" content={seoTags.author} />
    <meta name="robots" content={seoTags.robots} />

    <!-- Search Engine Specific -->
    <meta name="googlebot" content="index, follow" />
    <meta name="bingbot" content="index, follow" />

    <!-- Open Graph Meta Tags -->
    <meta property="og:type" content={seoTags.type} />
    <meta property="og:url" content={seoTags.canonicalUrl} />
    <meta property="og:title" content={seoTags.title} />
    <meta property="og:description" content={seoTags.description} />
    <meta property="og:image" content={seoTags.ogImage} />
    <meta property="og:image:alt" content={seoTags.imageAlt} />
    <meta property="og:site_name" content={SITE.name} />
    <meta property="og:locale" content={SITE.locale} />

    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={seoTags.title} />
    <meta name="twitter:description" content={seoTags.description} />
    <meta name="twitter:image" content={seoTags.ogImage} />
    <meta name="twitter:image:alt" content={seoTags.imageAlt} />
    <meta name="twitter:site" content={`@${TWITTER_USER_NAME}`} />
    <meta name="twitter:creator" content={`@${TWITTER_USER_NAME}`} />

    <!-- Canonical URL -->
    <link rel="canonical" href={seoTags.canonicalUrl} />

    {preloadImages.map((src) => (
        <link rel="preload" as="image" href={src} />
    ))}

    <style>
      /* Minimal critical CSS for hero/header to reduce render-blocking */
      :root { --critical-container-max: 72rem; }
      .section-xl { padding-block: clamp(3rem, 5vw, 6rem); }
      .container { margin-inline: auto; max-width: var(--critical-container-max); padding-inline: 1rem; }
      h1 { line-height: 1.1; letter-spacing: -0.01em; }
    </style>

    <!-- AI-Powered Meta Tags (Conditional) -->
    {aiPowered && (
        <Fragment>
            <meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
            <meta name="ia_archiver" content="noindex, nofollow" />
        </Fragment>
    )}

    <!-- Article/Content Specific Meta Tags -->
    {type === 'article' && (
        <Fragment>
            <meta property="article:published_time" content={publishedTime} />
            <meta property="article:modified_time" content={modifiedTime} />
            <meta property="article:section" content={tags && tags.length > 0 ? tags[0] : ''} />
            {tags && tags.map(tag => <meta property="article:tag" content={tag} />)}
        </Fragment>
    )}

    <!-- Theme, Manifest and Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="theme-color" content="var(--color-primary-500)" />

    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(finalStructuredData)} nonce={nonce}></script>

    <ViewTransitions />
    <SpeedInsights />
    {import.meta.env.PUBLIC_GA_ID && (
      <script async src={`https://www.googletagmanager.com/gtag/js?id=${import.meta.env.PUBLIC_GA_ID}`}></script>
    )}
    {import.meta.env.PUBLIC_GA_ID && (
      <script is:inline>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', import.meta.env.PUBLIC_GA_ID, { anonymize_ip: true });
      </script>
    )}

    {import.meta.env.PUBLIC_SENTRY_DSN && (
      <script src="https://js.sentry-cdn.com/7.111.0/bundle.min.js" crossorigin="anonymous"></script>
    )}
    {import.meta.env.PUBLIC_SENTRY_DSN && (
      <script is:inline>
        if (window.Sentry) {
          window.Sentry.init({
            dsn: import.meta.env.PUBLIC_SENTRY_DSN,
            integrations: [],
            tracesSampleRate: 0.1,
          });
        }
      </script>
    )}

    <Analytics />
</head>
<body class="bg-background text-foreground antialiased">
    <!-- Skip Links for Screen Readers -->
    <a href="#main-content" class="skip-link">Skip to main content</a>
    <a href="#navigation" class="skip-link">Skip to navigation</a>
        <Navigation currentPath={currentUrl} id="navigation" />
        <main id="main-content" class="main-content">
            <slot />
        </main>
        <Toaster />
        <Footer />
</body>
</html>
