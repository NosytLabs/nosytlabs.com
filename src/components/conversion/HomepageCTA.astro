---
/**
 * Homepage Conversion-Optimized CTA Component
 * 
 * Features:
 * - Urgency messaging with dynamic content
 * - Social proof statistics and client logos
 * - Multiple CTA options with A/B testing support
 * - Trust signals and testimonials
 * - Conversion tracking integration
 */

import { Button } from "@/components/ui/button.tsx";
import { Icon } from "@/components/ui/icon.tsx";
import { getUrgencyMessage, getCTAVariant, conversionConfig } from "@/config/conversion-config.ts";

// Get dynamic conversion elements
const urgencyMessage = getUrgencyMessage('consultation');
const primaryCTA = getCTAVariant('primary');
const secondaryCTA = getCTAVariant('secondary');
const stats = conversionConfig.socialProof.stats;
const testimonials = conversionConfig.socialProof.testimonials.filter(t => t.featured);
const clientLogos = conversionConfig.socialProof.clientLogos;

// Generate unique form ID
const formId = `homepage-cta-${Date.now()}`;
---

<section class="homepage-cta-section">
  <!-- Urgency Banner -->
  <div class="urgency-banner">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="urgency-content">
        <Icon name="clock" className="urgency-icon" />
        <span class="urgency-text">{urgencyMessage}</span>
      </div>
    </div>
  </div>

  <!-- Main CTA Section -->
  <div class="cta-main">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="cta-grid">
        <!-- Left Side - Content -->
        <div class="cta-content">
          <h2 class="cta-title">
            Transform Your Business with
            <span class="cta-highlight">Expert Development</span>
          </h2>
          <p class="cta-description">
            Join 200+ successful businesses that have scaled with our proven web development and AI integration services. Get your free consultation today.
          </p>
          
          <!-- Social Proof Stats -->
          <div class="social-proof-stats">
            {stats.map(stat => (
              <div class="stat-item">
                <div class="stat-number">{stat.value}</div>
                <div class="stat-label">{stat.label}</div>
              </div>
            ))}
          </div>

          <!-- Trust Signals -->
          <div class="trust-signals">
            <div class="trust-item">
              <Icon name="shield" className="trust-icon" />
              <span>100% Satisfaction Guaranteed</span>
            </div>
            <div class="trust-item">
              <Icon name="clock" className="trust-icon" />
              <span>Free 30-Day Support</span>
            </div>
            <div class="trust-item">
              <Icon name="award" className="trust-icon" />
              <span>Industry-Leading Expertise</span>
            </div>
          </div>

          <!-- CTA Buttons -->
          <div class="cta-actions">
            <Button
              href="/contact"
              size="lg"
              variant="primary"
              className="cta-primary"
            >
              {primaryCTA.text}
              <Icon name="arrowRight" className="ml-2 w-5 h-5" />
            </Button>
            <Button
              href="/services"
              size="lg"
              variant="outline"
              className="cta-secondary"
            >
              {secondaryCTA.text}
            </Button>
          </div>
        </div>

        <!-- Right Side - Quick Inquiry Form -->
        <div class="quick-inquiry-form">
          <div class="form-header">
            <h3 class="form-title">Get Your Free Consultation</h3>
            <p class="form-subtitle">Tell us about your project and we'll get back to you within 24 hours</p>
          </div>

          <form id={formId} class="inquiry-form" novalidate>
            <div class="form-group">
              <label for={`${formId}-name`} class="form-label">Your Name *</label>
              <input 
                type="text" 
                id={`${formId}-name`}
                name="name" 
                class="form-input" 
                required
                placeholder="John Doe"
              />
              <div class="form-error" id={`${formId}-name-error`}></div>
            </div>

            <div class="form-group">
              <label for={`${formId}-email`} class="form-label">Email Address *</label>
              <input 
                type="email" 
                id={`${formId}-email`}
                name="email" 
                class="form-input" 
                required
                placeholder="john@example.com"
              />
              <div class="form-error" id={`${formId}-email-error`}></div>
            </div>

            <div class="form-group">
              <label for={`${formId}-service`} class="form-label">Service Interest *</label>
              <select 
                id={`${formId}-service`}
                name="service" 
                class="form-select" 
                required
              >
                <option value="">Select a service...</option>
                <option value="web-development">Web Development</option>
                <option value="ai-integration">AI Integration</option>
                <option value="e-commerce">E-Commerce Solutions</option>
                <option value="mobile-apps">Mobile Apps</option>
                <option value="consulting">Technical Consulting</option>
              </select>
              <div class="form-error" id={`${formId}-service-error`}></div>
            </div>

            <div class="form-group">
              <label for={`${formId}-message`} class="form-label">Project Details</label>
              <textarea 
                id={`${formId}-message`}
                name="message" 
                class="form-textarea" 
                rows="3"
                placeholder="Tell us about your project goals and requirements..."
              ></textarea>
            </div>

            <button type="submit" class="form-submit">
              <span class="submit-text">Get Free Consultation</span>
              <Icon name="send" className="submit-icon" />
            </button>

            <div class="form-message" id={`${formId}-message-display`}></div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Client Logos Section -->
  <div class="client-logos-section">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <p class="logos-title">Trusted by industry leaders</p>
      <div class="logos-grid">
        {clientLogos.map(logo => (
          <div class="logo-item">
            <img src={logo.logo} alt={logo.alt} class="logo-image" />
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Featured Testimonial -->
  {testimonials.length > 0 && testimonials[0] && (
    <div class="featured-testimonial">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="testimonial-content">
          <div class="testimonial-stars">
            {Array.from({ length: 5 }).map(() => (
              <Icon name="star" className="star-icon" />
            ))}
          </div>
          <blockquote class="testimonial-quote">
            "{testimonials[0]?.quote || ''}"
          </blockquote>
          <div class="testimonial-author">
            <img
              src={testimonials[0]?.avatar || ''}
              alt={testimonials[0]?.author || 'Client testimonial'}
              class="author-avatar"
            />
            <div class="author-info">
              <div class="author-name">{testimonials[0]?.author || 'Anonymous'}</div>
              <div class="author-title">{testimonials[0]?.company || 'Client'}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )}
</section>

<style>
  .homepage-cta-section {
    position: relative;
    overflow: hidden;
  }

  /* Urgency Banner */
  .urgency-banner {
    background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
    color: white;
    padding: 0.75rem 0;
    text-align: center;
  }

  .urgency-content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    font-weight: 600;
  }

  .urgency-icon {
    width: 1rem;
    height: 1rem;
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  /* Main CTA Section */
  .cta-main {
    background: linear-gradient(135deg, #2D1B69 0%, #6B46C1 100%);
    color: white;
    padding: 4rem 0;
    position: relative;
  }

  .cta-main::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    pointer-events: none;
  }

  .cta-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
    align-items: center;
  }

  @media (min-width: 1024px) {
    .cta-grid {
      grid-template-columns: 1fr 1fr;
      gap: 4rem;
    }
  }

  .cta-content {
    position: relative;
    z-index: 1;
  }

  .cta-title {
    font-size: 2.5rem;
    font-weight: 800;
    line-height: 1.2;
    margin-bottom: 1.5rem;
  }

  .cta-highlight {
    background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .cta-description {
    font-size: 1.125rem;
    line-height: 1.7;
    margin-bottom: 2rem;
    opacity: 0.9;
  }

  /* Social Proof Stats */
  .social-proof-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    font-size: 2rem;
    font-weight: 800;
    color: #fbbf24;
    margin-bottom: 0.25rem;
  }

  .stat-label {
    font-size: 0.875rem;
    opacity: 0.8;
    line-height: 1.4;
  }

  /* Trust Signals */
  .trust-signals {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .trust-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .trust-icon {
    width: 1rem;
    height: 1rem;
    color: #22c55e;
  }

  /* CTA Actions */
  .cta-actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  /* Quick Inquiry Form */
  .quick-inquiry-form {
    background: white;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    position: relative;
    z-index: 1;
  }

  .form-header {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .form-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1f2937;
    margin-bottom: 0.5rem;
  }

  .form-subtitle {
    font-size: 0.875rem;
    color: #6b7280;
    line-height: 1.5;
  }

  .inquiry-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-label {
    font-size: 0.875rem;
    font-weight: 600;
    color: #374151;
    margin-bottom: 0.25rem;
  }

  .form-input,
  .form-select,
  .form-textarea {
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    transition: border-color 0.2s, box-shadow 0.2s;
  }

  .form-input:focus,
  .form-select:focus,
  .form-textarea:focus {
    outline: none;
    border-color: #6366f1;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
  }

  .form-textarea {
    resize: vertical;
    min-height: 80px;
  }

  .form-submit {
    background: linear-gradient(135deg, #6366f1 0%, #4f46e5 100%);
    color: white;
    padding: 1rem 2rem;
    border: none;
    border-radius: 0.5rem;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  .form-submit:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(99, 102, 241, 0.4);
  }

  .form-submit:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  .submit-icon {
    width: 1rem;
    height: 1rem;
  }

  .form-error {
    color: #dc2626;
    font-size: 0.75rem;
    margin-top: 0.25rem;
    min-height: 1rem;
  }

  .form-message {
    margin-top: 1rem;
    padding: 0.75rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    text-align: center;
    min-height: 1rem;
  }

  .form-message.success {
    background: #dcfce7;
    color: #166534;
    border: 1px solid #bbf7d0;
  }

  .form-message.error {
    background: #fee2e2;
    color: #dc2626;
    border: 1px solid #fecaca;
  }

  /* Client Logos */
  .client-logos-section {
    background: #f9fafb;
    padding: 3rem 0;
    border-top: 1px solid #e5e7eb;
  }

  .logos-title {
    text-align: center;
    font-size: 0.875rem;
    font-weight: 600;
    color: #6b7280;
    margin-bottom: 2rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }

  .logos-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 2rem;
    align-items: center;
  }

  .logo-item {
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0.6;
    transition: opacity 0.2s;
  }

  .logo-item:hover {
    opacity: 1;
  }

  .logo-image {
    max-width: 100px;
    max-height: 60px;
    object-fit: contain;
    filter: grayscale(100%);
    transition: filter 0.2s;
  }

  .logo-item:hover .logo-image {
    filter: grayscale(0%);
  }

  /* Featured Testimonial */
  .featured-testimonial {
    background: white;
    padding: 3rem 0;
  }

  .testimonial-content {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }

  .testimonial-stars {
    display: flex;
    justify-content: center;
    gap: 0.25rem;
    margin-bottom: 1.5rem;
  }

  .star-icon {
    width: 1.25rem;
    height: 1.25rem;
    color: #fbbf24;
    fill: currentColor;
  }

  .testimonial-quote {
    font-size: 1.5rem;
    font-weight: 500;
    color: #1f2937;
    line-height: 1.6;
    margin-bottom: 2rem;
    font-style: italic;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }

  .author-avatar {
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    object-fit: cover;
  }

  .author-info {
    text-align: left;
  }

  .author-name {
    font-weight: 600;
    color: #1f2937;
    margin-bottom: 0.125rem;
  }

  .author-title {
    font-size: 0.875rem;
    color: #6b7280;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .cta-main {
      padding: 2rem 0;
    }

    .cta-title {
      font-size: 2rem;
    }

    .cta-description {
      font-size: 1rem;
    }

    .social-proof-stats {
      grid-template-columns: repeat(2, 1fr);
    }

    .trust-signals {
      flex-direction: column;
      gap: 1rem;
    }

    .cta-actions {
      flex-direction: column;
    }

    .quick-inquiry-form {
      padding: 1.5rem;
    }

    .testimonial-author {
      flex-direction: column;
      text-align: center;
    }

    .author-info {
      text-align: center;
    }
  }

  /* Animations */
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
</style>

<script define:vars={{ formId }}>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById(formId);
    const messageDisplay = document.getElementById(`${formId}-message-display`);
    const submitButton = form?.querySelector('.form-submit');
    const submitText = submitButton?.querySelector('.submit-text');

    if (!form || !messageDisplay || !submitButton || !submitText) return;

    // Form validation
    const validateField = (field, errorId) => {
      const errorElement = document.getElementById(errorId);
      if (!errorElement) return true;

      let isValid = true;
      let errorMessage = '';

      if (field.hasAttribute('required') && !field.value.trim()) {
        isValid = false;
        errorMessage = 'This field is required';
      } else if (field.type === 'email' && field.value.trim()) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(field.value.trim())) {
          isValid = false;
          errorMessage = 'Please enter a valid email address';
        }
      }

      errorElement.textContent = errorMessage;
      field.classList.toggle('error', !isValid);

      return isValid;
    };

    // Real-time validation
    form.querySelectorAll('input, select, textarea').forEach(field => {
      field.addEventListener('blur', () => {
        validateField(field, `${field.id}-error`);
      });

      field.addEventListener('input', () => {
        if (field.classList.contains('error')) {
          validateField(field, `${field.id}-error`);
        }
      });
    });

    // Form submission
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Validate all fields
      const fields = form.querySelectorAll('input, select, textarea');
      let isFormValid = true;

      fields.forEach(field => {
        if (!validateField(field, `${field.id}-error`)) {
          isFormValid = false;
        }
      });

      if (!isFormValid) {
        messageDisplay.textContent = 'Please fix the errors above and try again.';
        messageDisplay.className = 'form-message error';
        return;
      }

      // Disable submit button
      submitButton.disabled = true;
      submitText.textContent = 'Sending...';
      messageDisplay.textContent = '';
      messageDisplay.className = 'form-message';

      try {
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        // Add tracking data
        data.utm_source = new URLSearchParams(window.location.search).get('utm_source') || 'direct';
        data.utm_medium = new URLSearchParams(window.location.search).get('utm_medium') || 'homepage';
        data.utm_campaign = new URLSearchParams(window.location.search).get('utm_campaign') || 'homepage-cta';
        data.form_type = 'homepage_inquiry';

        const response = await fetch('/api/service-inquiry', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();

        if (result.success) {
          messageDisplay.textContent = result.message;
          messageDisplay.className = 'form-message success';
          form.reset();

          // Track conversion
          if (typeof gtag !== 'undefined') {
            gtag('event', 'conversion', {
              event_category: 'Form Submission',
              event_label: 'Homepage Inquiry',
              value: 1
            });
          }
        } else {
          messageDisplay.textContent = result.message || 'Something went wrong. Please try again.';
          messageDisplay.className = 'form-message error';
        }
      } catch (error) {
        console.error('Form submission error:', error);
        messageDisplay.textContent = 'Network error. Please check your connection and try again.';
        messageDisplay.className = 'form-message error';
      } finally {
        submitButton.disabled = false;
        submitText.textContent = 'Get Free Consultation';
      }
    });
  });
</script>