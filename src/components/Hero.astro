---
/**
 * Modern Hero Component - NosytLabs
 * Animated hero section with gradient background and interactive elements
 */
import AnimatedText from './animations/AnimatedText.astro';
import ParticleBackground from './effects/ParticleBackground.astro';
import FloatingElements from './effects/FloatingElements.astro';
import type { HeroProps } from '../types/component-props.d.ts';

interface Props extends HeroProps {
  title?: string;
  subtitle?: string;
  description?: string;
  ctaText?: string;
  ctaLink?: string;
  backgroundImage?: string;
  animated?: boolean;
}

const {
  title = "NosytLabs - Modern Web Development Solutions",
  subtitle = "Notable Opportunities Shape Your Tomorrow",
  description = "Professional web development and technology solutions for businesses in New Mexico and beyond. We create modern, responsive websites and help you leverage AI tools to grow your business.",
  ctaText = "Get Started Today",
  ctaLink = "/contact",
  backgroundImage,
  animated = true,
  class: className,
  ...rest
} = Astro.props;
---

<section 
  class={`hero-section ${className || ''}`}
  data-hero="main"
  data-testid="hero-section"
  {...rest}
>
  <!-- Background Elements -->
  <div class="hero-background">
    {backgroundImage && (
      <img
        src={backgroundImage}
        alt=""
        class="hero-bg-image"
        loading="lazy"
      />
    )}
    <div class="hero-gradient-overlay"></div>
    <div class="hero-particles" aria-hidden="true"></div>

    <!-- Modern Particle Effects -->
    <ParticleBackground particleCount={30} color="#ffffff" size="small" speed="slow" />
    <FloatingElements elementCount={8} theme="mixed" intensity="subtle" />
  </div>

  <!-- Main Content -->
  <div class="hero-content">
    <div class="container">
      <div class="hero-inner">
        
        <!-- Badge -->
        <div class="hero-badge" data-animate="fade-up">
          <span class="badge-icon">ðŸš€</span>
          <span class="badge-text">Welcome to NosytLabs</span>
        </div>

        <!-- Title -->
        {animated ? (
          <AnimatedText
            texts={[title]}
            variant="hero"
            class="hero-title"
            data-animate="fade-up"
            delay="0.1s"
          />
        ) : (
          <h1 class="hero-title" data-animate="fade-up">{title}</h1>
        )}

        <!-- Subtitle -->
        <h2 class="hero-subtitle" data-animate="fade-up" data-delay="0.2s">
          {subtitle}
        </h2>

        <!-- Description -->
        <p class="hero-description" data-animate="fade-up" data-delay="0.3s">
          {description}
        </p>

        <!-- CTA Buttons -->
        <div class="hero-actions" data-animate="fade-up" data-delay="0.4s">
          <a href={ctaLink} class="btn-hero-primary">
            <span class="btn-text">{ctaText}</span>
            <svg class="btn-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
          </a>
          
          <a href="/services" class="btn-hero-secondary">
            <span class="btn-text">Explore Services</span>
          </a>
        </div>

        <!-- Stats -->
        <div class="hero-stats" data-animate="fade-up" data-delay="0.5s">
          <div class="stat-item">
            <span class="stat-number">5+</span>
            <span class="stat-label">Projects Completed</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">2+</span>
            <span class="stat-label">Years Experience</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">24hr</span>
            <span class="stat-label">Response Time</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scroll Indicator -->
  <div class="scroll-indicator" aria-label="Scroll down to see more">
    <div class="scroll-arrow">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M7 13l3 3 7-7M7 6l3 3 7-7"/>
      </svg>
    </div>
  </div>
</section>

<style>
  .hero-section {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    background: linear-gradient(135deg, var(--nosyt-purple-darkest) 0%, var(--nosyt-purple) 50%, var(--nosyt-orange) 100%);
  }

  /* Background */
  .hero-background {
    position: absolute;
    inset: 0;
    z-index: 1;
  }

  .hero-bg-image {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0.3;
  }

  .hero-gradient-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, 
      rgba(45, 27, 105, 0.9) 0%, 
      rgba(124, 58, 237, 0.8) 50%, 
      rgba(255, 107, 53, 0.9) 100%
    );
  }

  .hero-particles {
    position: absolute;
    inset: 0;
    background-image: 
      radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 2px, transparent 2px),
      radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
      radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
    background-size: 100px 100px, 80px 80px, 120px 120px;
    animation: particlesFloat 20s linear infinite;
  }

  @keyframes particlesFloat {
    0% { transform: translateY(0) translateX(0); }
    33% { transform: translateY(-10px) translateX(10px); }
    66% { transform: translateY(5px) translateX(-5px); }
    100% { transform: translateY(0) translateX(0); }
  }

  /* Content */
  .hero-content {
    position: relative;
    z-index: 2;
    width: 100%;
    text-align: center;
    color: white;
  }

  .hero-inner {
    max-width: 800px;
    margin: 0 auto;
  }

  /* Badge */
  .hero-badge {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-2);
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: var(--radius-full);
    padding: var(--spacing-2) var(--spacing-4);
    font-size: 0.875rem;
    font-weight: 600;
    margin-bottom: var(--spacing-6);
    transition: all 0.3s ease;
  }

  .hero-badge:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: translateY(-1px);
  }

  /* Typography */
  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4.5rem);
    font-weight: 800;
    line-height: 1.1;
    margin-bottom: var(--spacing-4);
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .hero-subtitle {
    font-size: clamp(1.25rem, 3vw, 2rem);
    font-weight: 600;
    line-height: 1.3;
    margin-bottom: var(--spacing-6);
    color: rgba(255, 255, 255, 0.9);
  }

  .hero-description {
    font-size: clamp(1rem, 2.5vw, 1.25rem);
    line-height: 1.7;
    margin-bottom: var(--spacing-8);
    color: rgba(255, 255, 255, 0.8);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  /* Actions */
  .hero-actions {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-4);
    margin-bottom: var(--spacing-12);
  }

  @media (min-width: 640px) {
    .hero-actions {
      flex-direction: row;
      justify-content: center;
    }
  }

  .btn-hero-primary,
  .btn-hero-secondary {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-2);
    padding: var(--spacing-4) var(--spacing-8);
    border-radius: var(--radius-full);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .btn-hero-primary {
    background: rgba(255, 255, 255, 0.15);
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
  }

  .btn-hero-primary:hover {
    background: rgba(255, 255, 255, 0.25);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  }

  .btn-hero-secondary {
    background: transparent;
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
  }

  .btn-hero-secondary:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
  }

  .btn-icon {
    transition: transform 0.3s ease;
  }

  .btn-hero-primary:hover .btn-icon,
  .btn-hero-secondary:hover .btn-icon {
    transform: translateX(2px);
  }

  /* Stats */
  .hero-stats {
    display: flex;
    justify-content: center;
    gap: var(--spacing-8);
    flex-wrap: wrap;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    display: block;
    font-size: clamp(1.5rem, 3vw, 2.5rem);
    font-weight: 800;
    color: white;
    line-height: 1;
  }

  .stat-label {
    display: block;
    font-size: 0.875rem;
    color: rgba(255, 255, 255, 0.7);
    margin-top: var(--spacing-1);
  }

  /* Scroll Indicator */
  .scroll-indicator {
    position: absolute;
    bottom: var(--spacing-8);
    left: 50%;
    transform: translateX(-50%);
    z-index: 3;
    animation: bounce 2s infinite;
  }

  .scroll-arrow {
    color: rgba(255, 255, 255, 0.7);
    transition: color 0.3s ease;
  }

  .scroll-indicator:hover .scroll-arrow {
    color: white;
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateX(-50%) translateY(0);
    }
    40% {
      transform: translateX(-50%) translateY(-5px);
    }
    60% {
      transform: translateX(-50%) translateY(-3px);
    }
  }

  /* Animations */
  [data-animate="fade-up"] {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeUp 0.8s ease-out forwards;
  }

  [data-delay="0.1s"] { animation-delay: 0.1s; }
  [data-delay="0.2s"] { animation-delay: 0.2s; }
  [data-delay="0.3s"] { animation-delay: 0.3s; }
  [data-delay="0.4s"] { animation-delay: 0.4s; }
  [data-delay="0.5s"] { animation-delay: 0.5s; }

  @keyframes fadeUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero-section {
      min-height: 90vh;
    }

    .hero-stats {
      gap: var(--spacing-6);
    }

    .stat-item {
      flex: 1;
      min-width: 80px;
    }
  }

  /* Dark mode adjustments */
  [data-theme="dark"] .hero-badge {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.1);
  }

  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .hero-particles,
    .scroll-indicator,
    [data-animate] {
      animation: none;
    }
    
    [data-animate] {
      opacity: 1;
      transform: none;
    }
  }
</style>

<script>
  // Initialize hero animations on page load
  document.addEventListener('DOMContentLoaded', () => {
    const hero = document.querySelector('[data-hero="main"]');
    if (!hero) return;

    // Add loaded class for any additional animations
    hero.classList.add('hero-loaded');

    // Smooth scroll for scroll indicator
    const scrollIndicator = hero.querySelector('.scroll-indicator');
    if (scrollIndicator) {
      scrollIndicator.addEventListener('click', () => {
        const nextSection = hero.nextElementSibling;
        if (nextSection) {
          nextSection.scrollIntoView({ behavior: 'smooth' });
        }
      });
    }

    // Parallax effect for particles (optional)
    if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
      const particles = hero.querySelector('.hero-particles');
      if (particles) {
        window.addEventListener('scroll', () => {
          const scrolled = window.pageYOffset;
          const rate = scrolled * -0.5;
          particles.style.transform = `translateY(${rate}px)`;
        });
      }
    }
  });
</script>
