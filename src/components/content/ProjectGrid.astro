---
/**
 * ProjectGrid Component
 * 
 * A responsive grid layout for displaying project cards
 * with filtering and animation capabilities.
 */

import Card from '../core/Card.astro';
import { Icon } from '@/components/ui/icon';

interface Project {
  title: string;
  description: string;
  image?: string;
  technologies?: string[];
  link?: string;
  category?: string;
  featured?: boolean;
  metrics?: string[];
}

interface Props {
  /**
   * Array of project objects to display
   */
  projects: Project[];
  
  /**
   * Title for the projects section
   * @default "Projects"
   */
  title?: string;
  
  /**
   * Subtitle for the projects section
   */
  subtitle?: string;
  
  /**
   * Whether to show filters for the projects
   * @default false
   */
  showFilters?: boolean;
  
  /**
   * Maximum number of projects to display
   * @default undefined (show all)
   */
  limit?: number;
  
  /**
   * Whether to show a "View All" button when limit is set
   * @default true
   */
  showViewAll?: boolean;
  
  /**
   * URL for the "View All" button
   * @default "/projects"
   */
  viewAllUrl?: string;
  
  /**
   * Additional CSS classes
   */
  class?: string;
}

const {
  projects,
  title = "Projects",
  subtitle,
  showFilters = false,
  limit,
  showViewAll = true,
  viewAllUrl = "/projects",
  class: className = '',
} = Astro.props;

// Safety check for projects array
const safeProjects = Array.isArray(projects) ? projects : [];

// DEBUG: Log ProjectGrid rendering
console.log('DEBUG: ProjectGrid received projects:', projects?.length || 0);
console.log('DEBUG: Safe projects:', safeProjects?.length || 0);

// Limit projects if specified
const displayedProjects = limit ? safeProjects.slice(0, limit) : safeProjects;

console.log('DEBUG: Displayed projects:', displayedProjects?.length || 0);

// Extract unique categories for filters
const allCategories = [...new Set(safeProjects.map(project => project?.category).filter(Boolean))];
---

<section
  class:list={['projects-section section-standard relative z-10', className]}
>
  <div class="projects-section__header">
    <h2 class="projects-section__title">{title}</h2>
    {subtitle && <p class="projects-section__subtitle">{subtitle}</p>}
    
    {showFilters && allCategories.length > 0 && (
      <ul class="projects-section__filters" role="list">
        <li><button class="projects-section__filter-btn active" data-filter="all">All</button></li>
        {allCategories.map(category => (
          <li><button class="projects-section__filter-btn" data-filter={category}>{category}</button></li>
        ))}
      </ul>
    )}
  </div>
    <div class="projects-section__grid grid-responsive" data-stagger data-stagger-delay="150">
    {displayedProjects && displayedProjects.length > 0 ? displayedProjects.map((project) => (
      project && (
        <Card
          title={project.title || ''}
          description={project.description || ''}
          image={project.image}
          technologies={project.technologies || []}
          link={project.link}
          category={project.category}
          featured={project.featured}
          metrics={project.metrics || []}
          contentType="project"
          class="stagger-item"
        />
      )
    )) : (
      <div class="no-projects">
        <p>No projects to display</p>
      </div>
    )}
  </div>
  
  {limit && projects.length > limit && showViewAll && (
    <div class="projects-section__view-all">
      <a href={viewAllUrl} class="projects-section__view-all-btn">
        View All Projects
        <Icon name="arrowRight" size={20} />
      </a>
    </div>
  )}
</section>

<script>
  // Initialize project filtering
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.projects-section__filter-btn');
    const projectCards = document.querySelectorAll('.project-card');
    
    if (filterButtons.length > 0) {
      filterButtons.forEach(button => {
        button.addEventListener('click', () => {
          // Update active button
          filterButtons.forEach(btn => btn.classList.remove('active'));
          button.classList.add('active');
          
          const filter = button.getAttribute('data-filter');
          
          // Filter projects
          projectCards.forEach(card => {
            if (filter === 'all') {
              card.style.display = 'flex';
              setTimeout(() => {
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
              }, 50);
            } else {
              const tags = Array.from(card.querySelectorAll('.project-card__tag'))
                .map(tag => tag.textContent);
              
              if (tags.includes(filter)) {
                card.style.display = 'flex';
                setTimeout(() => {
                  card.style.opacity = '1';
                  card.style.transform = 'translateY(0)';
                }, 50);
              } else {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                  card.style.display = 'none';
                }, 300);
              }
            }
          });
        });
      });
    }
  });
</script>

<style>
  /* Use global brand colors - no local overrides */

  .projects-section {
    padding: 2rem 0;
  }

  @media (min-width: 640px) {
    .projects-section {
      padding: 3rem 0;
    }
  }

  @media (min-width: 1024px) {
    .projects-section {
      padding: 4rem 0;
    }
  }

  .projects-section__header {
    text-align: left;
    margin-bottom: 1.5rem;
    min-height: auto;
    height: auto;
  }

  @media (min-width: 640px) {
    .projects-section__header {
      margin-bottom: 2rem;
    }
  }

  .projects-section__title {
    font-size: clamp(1.75rem, 4vw, 2.25rem);
    font-weight: 700;
    margin: 0 0 0.75rem 0;
    color: var(--primary);
  }

  @media (min-width: 640px) {
    .projects-section__title {
      margin: 0 0 1rem 0;
    }
  }

  :global(.dark) .projects-section__title {
    color: var(--primary-light);
  }

  .projects-section__subtitle {
    font-size: 1.125rem;
    color: var(--text-light);
    max-width: 700px;
    margin: 0 auto 2rem auto;
    line-height: 1.6;
  }

  :global(.dark) .projects-section__subtitle {
    color: var(--text-light);
  }

  .projects-section__filters {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  @media (min-width: 640px) {
    .projects-section__filters {
      gap: 0.75rem;
      margin-bottom: 2rem;
    }
  }

  .projects-section__filter-btn {
    background: none;
    border: 1px solid var(--border-light);
    border-radius: 9999px;
    padding: 0.5rem 1rem;
    min-height: 44px;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-light);
    cursor: pointer;
    transition: all 0.2s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  @media (min-width: 640px) {
    .projects-section__filter-btn {
      padding: 0.5rem 1.25rem;
    }
  }

  :global(.dark) .projects-section__filter-btn {
    border-color: var(--border);
    color: var(--text-light);
  }

  .projects-section__filter-btn:hover {
    border-color: var(--primary);
    color: var(--primary);
  }

  .projects-section__filter-btn.active {
    background-color: var(--primary);
    border-color: var(--primary);
    color: white;
  }

  .projects-section__grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  @media (min-width: 640px) {
    .projects-section__grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.25rem;
    }
  }

  @media (min-width: 1024px) {
    .projects-section__grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 1.5rem;
    }
  }

  @media (min-width: 1280px) {
    .projects-section__grid {
      gap: 2rem;
    }
  }

  .projects-section__view-all {
    margin-top: 2rem;
    text-align: center;
  }

  @media (min-width: 640px) {
    .projects-section__view-all {
      margin-top: 2.5rem;
    }
  }

  @media (min-width: 1024px) {
    .projects-section__view-all {
      margin-top: 3rem;
    }
  }

  .projects-section__view-all-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    min-height: 48px;
    background-color: var(--primary);
    color: white;
    border-radius: 0.5rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
    font-size: 0.875rem;
  }

  @media (min-width: 640px) {
    .projects-section__view-all-btn {
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
    }
  }

  .projects-section__view-all-btn:hover {
    background-color: var(--primary-light);
    transform: translateY(-2px);
  }

  .projects-section__view-all-btn svg {
    transition: transform 0.2s ease;
  }

  .projects-section__view-all-btn:hover svg {
    transform: translateX(3px);
  }
</style>
