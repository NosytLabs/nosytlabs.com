---
/**
 * FeatureCard Component
 * 
 * A card component for displaying features or services
 * with icons and hover effects.
 */

interface Props {
  /**
   * Title of the feature
   */
  title: string;
  
  /**
   * Description of the feature
   */
  description: string;
  
  /**
   * URL to the icon image
   */
  iconUrl?: string;
  
  /**
   * SVG icon code (alternative to iconUrl)
   */
  svgIcon?: string;
  
  /**
   * URL to link to when the card is clicked
   */
  linkUrl?: string;
  
  /**
   * Whether to highlight this feature
   */
  highlighted?: boolean;
  
  /**
   * Additional CSS classes
   */
  class?: string;
}

const {
  title,
  description,
  iconUrl,
  svgIcon,
  linkUrl,
  highlighted = false,
  class: className = '',
} = Astro.props;

// Determine if the card should be a link
const isLink = !!linkUrl;
const Element = isLink ? 'a' : 'div';
const elementProps = isLink ? { href: linkUrl } : {};
---

<Element
  class:list={[
    'feature-card',
    { 'feature-card--highlighted': highlighted },
    { 'feature-card--link': isLink },
    className
  ]}
  {...elementProps}
>
  <div class="feature-card__icon">
    {iconUrl && <img src={iconUrl} alt={`${title} icon`} width="48" height="48" />}
    {svgIcon && <Fragment set:html={svgIcon} />}
    {!iconUrl && !svgIcon && (
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
      </svg>
    )}
  </div>
  
  <h3 class="feature-card__title">{title}</h3>
  <p class="feature-card__description">{description}</p>
  
  {isLink && (
    <div class="feature-card__arrow">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M5 12h14"></path>
        <path d="M12 5l7 7-7 7"></path>
      </svg>
    </div>
  )}
</Element>

<style>
  /* Variables for consistent styling */
  :root {
    --card-border-radius: 1rem;
    --card-padding: 2rem;
    --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    --card-shadow-hover: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    --card-transition: all 0.3s ease;
    --nosyt-purple: #4C1D95;
    --nosyt-purple-light: #7C3AED;
    --nosyt-orange: #FF6B00;
    --nosyt-orange-light: #FF9E44;
  }

  .feature-card {
    display: flex;
    flex-direction: column;
    background-color: white;
    border-radius: var(--card-border-radius);
    padding: var(--card-padding);
    box-shadow: var(--card-shadow);
    transition: var(--card-transition);
    position: relative;
    overflow: hidden;
    height: 100%;
  }

  :global(.dark) .feature-card {
    background-color: #1F2937;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2), 0 2px 4px -1px rgba(0, 0, 0, 0.1);
  }

  .feature-card--link {
    cursor: pointer;
    text-decoration: none;
    color: inherit;
  }

  .feature-card--link:hover {
    transform: translateY(-5px);
    box-shadow: var(--card-shadow-hover);
  }

  .feature-card--highlighted {
    border: 2px solid var(--nosyt-purple);
  }

  .feature-card--highlighted::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(to right, var(--nosyt-purple), var(--nosyt-orange));
  }

  .feature-card__icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 64px;
    height: 64px;
    background-color: rgba(124, 58, 237, 0.1);
    border-radius: 12px;
    margin-bottom: 1.5rem;
    color: var(--nosyt-purple);
    transition: all 0.3s ease;
  }

  :global(.dark) .feature-card__icon {
    background-color: rgba(124, 58, 237, 0.2);
    color: var(--nosyt-purple-light);
  }

  .feature-card:hover .feature-card__icon {
    background-color: var(--nosyt-purple);
    color: white;
  }

  .feature-card__icon img,
  .feature-card__icon svg {
    width: 32px;
    height: 32px;
    object-fit: contain;
  }

  .feature-card:hover .feature-card__icon svg {
    stroke: white;
  }

  .feature-card__title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 1rem 0;
    color: #111827;
    transition: color 0.2s ease;
  }

  :global(.dark) .feature-card__title {
    color: white;
  }

  .feature-card:hover .feature-card__title {
    color: var(--nosyt-purple);
  }

  .feature-card__description {
    color: #4B5563;
    font-size: 0.875rem;
    line-height: 1.6;
    margin: 0;
    flex-grow: 1;
  }

  :global(.dark) .feature-card__description {
    color: #D1D5DB;
  }

  .feature-card__arrow {
    margin-top: 1.5rem;
    align-self: flex-end;
    color: var(--nosyt-purple);
    transition: transform 0.2s ease;
  }

  .feature-card:hover .feature-card__arrow {
    transform: translateX(5px);
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .feature-card {
      padding: 1.5rem;
    }
  }
</style>
