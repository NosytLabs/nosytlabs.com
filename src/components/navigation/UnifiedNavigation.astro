---
/**
 * Unified Navigation Component for NosytLabs
 * Consolidates UltraEnhancedNavigation, Header, and MobileNavigation
 * Features: Responsive design, glassmorphism, accessibility, touch gestures
 */

interface Props {
  currentPath?: string;
  variant?: 'modern' | 'retro' | 'minimal';
  isRetroMode?: boolean;
  className?: string;
}

const { 
  currentPath = '/',
  variant = 'modern',
  isRetroMode = false,
  className = ''
} = Astro.props;

// Professional navigation items - consistent across all components
const navItems = [
  { name: 'Home', href: '/', icon: 'home' },
  { name: 'Services', href: '/services', icon: 'briefcase' },
  { name: 'Projects', href: '/projects', icon: 'folder' },
  { name: 'Contact', href: '/contact', icon: 'mail' }
];

// Check if current path matches
const isActive = (href: string) => {
  if (href === '/') {
    return currentPath === '/';
  }
  return currentPath.startsWith(href);
};
---

<nav class={`unified-navigation ${variant} ${className}`} data-variant={variant} data-retro={isRetroMode} aria-label="Main navigation">
  <!-- Desktop Navigation Header -->
  <div class="nav-header">
    <div class="nav-container">
      <!-- Logo -->
      <div class="nav-logo">
        <a href="/" class="logo-link" aria-label="NosytLabs Home">
          <div class="logo-container">
            <img src="/images/logo-icon.svg" alt="NosytLabs Official Logo" class="logo-image" />
            <span class="logo-text">NosytLabs</span>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation Items -->
      <div class="nav-items desktop-nav">
        {navItems.map(item => (
          <a 
            href={item.href}
            class={`nav-item ${isActive(item.href) ? 'nav-item--active' : ''}`}
            data-icon={item.icon}
            aria-current={isActive(item.href) ? 'page' : undefined}
          >
            <span class="nav-item__text">{item.name}</span>
            <div class="nav-item__indicator"></div>
          </a>
        ))}
      </div>

      <!-- Mobile Menu Toggle -->
      <button 
        class="mobile-menu-toggle"
        aria-label="Toggle mobile menu"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <div class="hamburger">
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
        </div>
      </button>
    </div>
  </div>

  <!-- Mobile Menu Overlay -->
  <div class="mobile-menu-overlay" aria-hidden="true"></div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="mobile-menu" role="dialog" aria-modal="true" aria-labelledby="mobile-menu-title">
    <div class="mobile-menu-header">
      <h2 id="mobile-menu-title" class="sr-only">Navigation Menu</h2>
      <button class="mobile-menu-close" aria-label="Close mobile menu">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>

    <div class="mobile-menu-content">
      <!-- Navigation Items -->
      <ul class="mobile-nav-list" role="list">
        {navItems.map((item, index) => (
          <li class="mobile-nav-item" style={`animation-delay: ${index * 0.1}s`}>
            <a 
              href={item.href}
              class={`mobile-nav-link ${isActive(item.href) ? 'active' : ''}`}
              aria-current={isActive(item.href) ? 'page' : undefined}
            >
              <div class="nav-link-content">
                <div class="nav-icon">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    {item.icon === 'home' && (
                      <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
                    )}
                    {item.icon === 'user' && (
                      <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                    )}
                    {item.icon === 'briefcase' && (
                      <rect x="2" y="7" width="20" height="14" rx="2" ry="2"/>
                    )}
                    {item.icon === 'folder' && (
                      <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"/>
                    )}
                    {item.icon === 'mail' && (
                      <path d="m4 4 16 0 0 16-16 0z"/>
                    )}
                    {item.icon === 'monitor' && (
                      <rect x="2" y="3" width="20" height="14" rx="2" ry="2"/>
                    )}
                  </svg>
                </div>
                <span class="nav-text">{item.name}</span>
              </div>
            </a>
          </li>
        ))}
      </ul>

      <!-- Mobile CTA Section -->
      <div class="mobile-cta-section">
        <a href="/contact" class="mobile-cta-button">
          <span>Get Started</span>
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="7" y1="17" x2="17" y2="7"></line>
            <polyline points="7,7 17,7 17,17"></polyline>
          </svg>
        </a>
      </div>
    </div>
  </div>
</nav>

<style>
  /* Base Navigation Styles */
  .unified-navigation {
    position: relative;
    z-index: var(--z-fixed, 1030);
  }

  /* Desktop Navigation Header */
  .nav-header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s ease;
    z-index: var(--z-fixed, 1030);
  }

  .nav-header.scrolled {
    background: rgba(255, 255, 255, 0.98);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem 2rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  /* Logo Styles */
  .nav-logo {
    display: flex;
    align-items: center;
  }

  .logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    color: var(--nosyt-purple-main, #4C1D95);
    font-weight: 700;
    font-size: 1.25rem;
    transition: all 0.3s ease;
  }

  .logo-link:hover {
    transform: scale(1.05);
  }

  .logo-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .logo-image {
    width: 32px;
    height: 32px;
    transition: transform 0.3s ease;
  }

  /* Desktop Navigation Items */
  .desktop-nav {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .nav-item {
    position: relative;
    padding: 0.5rem 1rem;
    text-decoration: none;
    color: var(--text-secondary, #6B7280);
    font-weight: 500;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .nav-item:hover {
    color: var(--nosyt-purple-main, #4C1D95);
    background: rgba(76, 29, 149, 0.1);
    transform: translateY(-1px);
  }

  .nav-item--active {
    color: var(--nosyt-purple-main, #4C1D95);
    background: rgba(76, 29, 149, 0.15);
  }

  .nav-item__indicator {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--nosyt-purple-main, #4C1D95);
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .nav-item--active .nav-item__indicator {
    transform: scaleX(1);
  }

  /* Mobile Menu Toggle */
  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    transition: all 0.3s ease;
  }

  .mobile-menu-toggle:hover {
    background: rgba(76, 29, 149, 0.1);
  }

  .hamburger-line {
    width: 24px;
    height: 2px;
    background: var(--nosyt-purple-main, #4C1D95);
    transition: all 0.3s ease;
    transform-origin: center;
  }

  .mobile-menu-toggle.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .mobile-menu-toggle.active .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-toggle.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .desktop-nav {
      display: none;
    }
    
    .mobile-menu-toggle {
      display: flex;
    }
  }

  /* Retro Mode Styles */
  .unified-navigation[data-retro="true"] .nav-header {
    background: #c0c0c0;
    border-bottom: 2px solid #808080;
    backdrop-filter: none;
  }

  .unified-navigation[data-retro="true"] .nav-item {
    background: #c0c0c0;
    border: 1px solid #808080;
    color: #000;
  }

  .unified-navigation[data-retro="true"] .nav-item:hover {
    background: #e0e0e0;
  }

  /* Mobile Menu Overlay */
  .mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: var(--z-modal-backdrop, 1040);
  }

  .mobile-menu-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  /* Mobile Menu */
  .mobile-menu {
    position: fixed;
    top: 0;
    right: -100%;
    width: 320px;
    max-width: 90vw;
    height: 100vh;
    background: var(--background-primary, #ffffff);
    box-shadow: -4px 0 20px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    z-index: var(--z-modal, 1050);
    overflow-y: auto;
  }

  .mobile-menu.active {
    right: 0;
  }

  .mobile-menu-header {
    display: flex;
    justify-content: flex-end;
    padding: 1rem;
    border-bottom: 1px solid var(--border-light, #E5E7EB);
  }

  .mobile-menu-close {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    color: var(--text-secondary, #6B7280);
    transition: all 0.3s ease;
  }

  .mobile-menu-close:hover {
    background: var(--background-secondary, #F9FAFB);
    color: var(--text-primary, #111827);
  }

  .mobile-menu-content {
    padding: 1rem;
  }

  /* Mobile Navigation List */
  .mobile-nav-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .mobile-nav-item {
    opacity: 0;
    transform: translateX(20px);
    animation: slideInRight 0.3s ease forwards;
  }

  @keyframes slideInRight {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .mobile-nav-link {
    display: flex;
    align-items: center;
    padding: 1rem;
    text-decoration: none;
    color: var(--text-secondary, #6B7280);
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .mobile-nav-link:hover,
  .mobile-nav-link.active {
    background: var(--background-secondary, #F9FAFB);
    color: var(--nosyt-purple-main, #4C1D95);
    transform: translateX(4px);
  }

  .mobile-nav-link.active::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 3px;
    background: var(--nosyt-purple-main, #4C1D95);
  }

  .nav-link-content {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .nav-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    color: currentColor;
  }

  .nav-text {
    font-weight: 500;
    font-size: 1rem;
  }

  /* Mobile CTA Section */
  .mobile-cta-section {
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-light, #E5E7EB);
  }

  .mobile-cta-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
    padding: 1rem;
    background: linear-gradient(135deg, var(--nosyt-purple-main, #4C1D95), var(--nosyt-orange-main, #FF6B00));
    color: white;
    text-decoration: none;
    border-radius: 0.5rem;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .mobile-cta-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 15px -3px rgba(0, 0, 0, 0.1);
  }

  /* Screen Reader Only */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Mobile Responsive Adjustments */
  @media (max-width: 480px) {
    .nav-container {
      padding: 1rem;
    }

    .mobile-menu {
      width: 100%;
      max-width: 100vw;
    }
  }
</style>

<script>
  // Unified Navigation Functionality
  class UnifiedNavigation {
    constructor() {
      this.menuToggle = document.querySelector('.mobile-menu-toggle');
      this.menuClose = document.querySelector('.mobile-menu-close');
      this.menu = document.querySelector('.mobile-menu');
      this.overlay = document.querySelector('.mobile-menu-overlay');
      this.navHeader = document.querySelector('.nav-header');
      this.body = document.body;

      this.isOpen = false;
      this.scrollThreshold = 50;

      this.init();
    }

    init() {
      this.setupEventListeners();
      this.setupScrollHandler();
      this.setupKeyboardNavigation();
      this.setupAccessibility();
    }

    setupEventListeners() {
      // Mobile menu toggle
      this.menuToggle?.addEventListener('click', () => this.toggleMenu());
      this.menuClose?.addEventListener('click', () => this.closeMenu());
      this.overlay?.addEventListener('click', () => this.closeMenu());

      // Close menu on navigation
      const navLinks = document.querySelectorAll('.mobile-nav-link');
      navLinks.forEach(link => {
        link.addEventListener('click', () => this.closeMenu());
      });

      // Handle resize
      window.addEventListener('resize', () => {
        if (window.innerWidth > 768 && this.isOpen) {
          this.closeMenu();
        }
      });
    }

    setupScrollHandler() {
      let ticking = false;

      window.addEventListener('scroll', () => {
        if (!ticking) {
          requestAnimationFrame(() => {
            const scrollY = window.scrollY;

            if (scrollY > this.scrollThreshold) {
              this.navHeader?.classList.add('scrolled');
            } else {
              this.navHeader?.classList.remove('scrolled');
            }

            ticking = false;
          });
          ticking = true;
        }
      });
    }

    setupKeyboardNavigation() {
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.isOpen) {
          this.closeMenu();
        }
      });
    }

    setupAccessibility() {
      // Trap focus in mobile menu when open
      this.menu?.addEventListener('keydown', (e) => {
        if (e.key === 'Tab' && this.isOpen) {
          this.trapFocus(e);
        }
      });
    }

    toggleMenu() {
      if (this.isOpen) {
        this.closeMenu();
      } else {
        this.openMenu();
      }
    }

    openMenu() {
      this.isOpen = true;
      this.menu?.classList.add('active');
      this.overlay?.classList.add('active');
      this.menuToggle?.classList.add('active');
      this.menuToggle?.setAttribute('aria-expanded', 'true');
      this.body.style.overflow = 'hidden';

      // Focus first menu item
      const firstMenuItem = this.menu?.querySelector('.mobile-nav-link');
      firstMenuItem?.focus();
    }

    closeMenu() {
      this.isOpen = false;
      this.menu?.classList.remove('active');
      this.overlay?.classList.remove('active');
      this.menuToggle?.classList.remove('active');
      this.menuToggle?.setAttribute('aria-expanded', 'false');
      this.body.style.overflow = '';

      // Return focus to toggle button
      this.menuToggle?.focus();
    }

    trapFocus(e) {
      const focusableElements = this.menu?.querySelectorAll(
        'a[href], button, textarea, input[type="text"], input[type="radio"], input[type="checkbox"], select'
      );

      if (!focusableElements || focusableElements.length === 0) return;

      const firstElement = focusableElements[0];
      const lastElement = focusableElements[focusableElements.length - 1];

      if (e.shiftKey && document.activeElement === firstElement) {
        lastElement.focus();
        e.preventDefault();
      } else if (!e.shiftKey && document.activeElement === lastElement) {
        firstElement.focus();
        e.preventDefault();
      }
    }
  }

  // Initialize when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    new UnifiedNavigation();
  });
</script>
