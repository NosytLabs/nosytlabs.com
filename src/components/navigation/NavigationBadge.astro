---
/**
 * NavigationBadge Component
 *
 * Displays visual indicators for navigation items that are new or AI-powered.
 * Uses modern design patterns and animations for enhanced user experience.
 */

import AstroIcon from '../ui/AstroIcon.astro';

export interface Props {
  /**
   * The type of badge to display
   */
  type: 'new' | 'ai' | 'beta' | 'hot';

  /**
   * Optional additional CSS classes
   */
  className?: string;

  /**
   * Whether to show pulse animation
   */
  pulse?: boolean;

  /**
   * Size variant
   */
  size?: 'sm' | 'md' | 'lg';
}

const { type, className = '', pulse = false, size = 'md' } = Astro.props;

const badgeClasses = {
  new: 'bg-gradient-to-r from-emerald-500 to-teal-500 shadow-emerald-500/25',
  ai: 'bg-gradient-to-r from-purple-500 to-pink-500 shadow-purple-500/25',
  beta: 'bg-gradient-to-r from-orange-500 to-red-500 shadow-orange-500/25',
  hot: 'bg-gradient-to-r from-red-500 to-pink-500 shadow-red-500/25',
};

const textContent = {
  new: 'NEW',
  ai: 'AI',
  beta: 'BETA',
  hot: 'HOT',
};

const sizeClasses = {
  sm: 'px-1.5 py-0.5 text-xs',
  md: 'px-2 py-0.5 text-xs',
  lg: 'px-2.5 py-1 text-sm',
};
---

<span
  class:list={[
    'inline-flex items-center rounded-full font-semibold text-white',
    'transform-gpu will-change-transform',
    'transition-all duration-300 ease-out',
    'hover:scale-110 hover:shadow-lg',
    'animate-fadeIn',
    sizeClasses[size],
    badgeClasses[type],
    pulse && 'animate-pulse-subtle',
    className,
  ]}
>
  <span class="relative z-10">{textContent[type]}</span>
  {
    type === 'ai' && (
      <AstroIcon name="tabler:sparkles" class="ml-1 w-3 h-3 animate-spin-slow" />
    )
  }
  {
    type === 'hot' && (
      <AstroIcon name="tabler:flame" class="ml-1 w-3 h-3 animate-bounce" />
    )
  }
  {
    type === 'new' && (
      <AstroIcon name="tabler:star-filled" class="ml-1 w-3 h-3 animate-twinkle" />
    )
  }
  {
    type === 'beta' && (
      <AstroIcon name="tabler:flask" class="ml-1 w-3 h-3" />
    )
  }
</span>

<style>
  @keyframes pulse-subtle {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.9;
      transform: scale(1.05);
    }
  }

  @keyframes spin-slow {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes twinkle {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    25% {
      opacity: 0.7;
      transform: scale(0.8);
    }
    50% {
      opacity: 1;
      transform: scale(1.2);
    }
    75% {
      opacity: 0.8;
      transform: scale(0.9);
    }
  }

  .animate-pulse-subtle {
    animation: pulse-subtle 2s ease-in-out infinite;
  }

  .animate-spin-slow {
    animation: spin-slow 3s linear infinite;
  }

  .animate-twinkle {
    animation: twinkle 2s ease-in-out infinite;
  }

  /* Enhanced gradient overlay for depth */
  span::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: linear-gradient(135deg, rgba(255,255,255,0.2) 0%, transparent 50%, rgba(0,0,0,0.1) 100%);
    pointer-events: none;
  }
</style>
