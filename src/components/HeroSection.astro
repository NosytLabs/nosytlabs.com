---
/**
 * HeroSection Component
 *
 * A modern, animated hero section with particle background
 * and call-to-action buttons.
 */

import ParticleBackground from './ParticleBackground.astro';

interface Props {
  /**
   * Main heading text
   */
  title: string;

  /**
   * Subheading text
   */
  subtitle?: string;

  /**
   * Text for the primary CTA button
   */
  primaryButtonText?: string;

  /**
   * URL for the primary CTA button
   */
  primaryButtonUrl?: string;

  /**
   * Text for the secondary CTA button
   */
  secondaryButtonText?: string;

  /**
   * URL for the secondary CTA button
   */
  secondaryButtonUrl?: string;

  /**
   * Whether to show a scroll indicator
   * @default true
   */
  showScrollIndicator?: boolean;

  /**
   * Whether to use a particle background
   * @default true
   */
  useParticles?: boolean;

  /**
   * Height of the hero section
   * @default "100vh"
   */
  height?: string;

  /**
   * Additional CSS classes
   */
  class?: string;
}

const {
  title,
  subtitle,
  primaryButtonText = "Get Started",
  primaryButtonUrl = "/services",
  secondaryButtonText = "Learn More",
  secondaryButtonUrl = "/about",
  showScrollIndicator = true,
  useParticles = true,
  height = "100vh",
  class: className = '',
} = Astro.props;
---

<section
  class:list={['hero-section', className]}
  style={`min-height: ${height};`}
>
  {useParticles && (
    <ParticleBackground
      id="hero-particles"
      color="rgba(124, 58, 237, 0.5)"
      secondaryColor="rgba(255, 107, 0, 0.5)"
      particleCount={100}
      particleSize={3}
      particleSpeed={1}
      interactive={true}
      connectParticles={true}
      gradient={true}
      zIndex={0}
    />
  )}

  <!-- Enhanced Background Elements -->
  <div class="hero-background-elements">
    <div class="floating-shape shape-1"></div>
    <div class="floating-shape shape-2"></div>
    <div class="floating-shape shape-3"></div>
    <div class="floating-shape shape-4"></div>
    <div class="grid-overlay"></div>
    <div class="gradient-orb orb-1"></div>
    <div class="gradient-orb orb-2"></div>
  </div>

  <div class="hero-section__content">
    <!-- Badge -->
    <div class="hero-badge">
      <div class="badge-icon">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        </svg>
      </div>
      <span class="badge-text">NosytLabs</span>
    </div>

    <!-- Enhanced Title with Gradient -->
    <h1 class="hero-section__title">
      <span class="title-line title-line-1">
        {title.split(' ').slice(0, 2).map((word, i) => (
          <span class="hero-section__title-word" style={`animation-delay: ${i * 0.1}s;`}>{word}</span>
        ))}
      </span>
      <span class="title-line title-line-2">
        {title.split(' ').slice(2).map((word, i) => (
          <span class="hero-section__title-word gradient-text" style={`animation-delay: ${(i + 2) * 0.1}s;`}>{word}</span>
        ))}
      </span>
    </h1>

    <!-- Rotating Text -->
    <div class="rotating-text-container">
      <span class="static-text">Specializing in </span>
      <span class="rotating-text" id="rotatingText">Web Development</span>
    </div>

    {subtitle && (
      <p class="hero-section__subtitle">{subtitle}</p>
    )}

    <!-- Enhanced Buttons -->
    <div class="hero-section__buttons">
      <a href={primaryButtonUrl} class="hero-section__button hero-section__button--primary">
        <span class="button-content">
          <span class="button-text">{primaryButtonText}</span>
          <svg class="button-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M5 12h14"></path>
            <path d="M12 5l7 7-7 7"></path>
          </svg>
        </span>
        <div class="button-ripple"></div>
      </a>

      <a href={secondaryButtonUrl} class="hero-section__button hero-section__button--secondary">
        <span class="button-content">
          <span class="button-text">{secondaryButtonText}</span>
        </span>
      </a>
    </div>

    <!-- Stats -->
    <div class="hero-stats">
      <div class="stat-item">
        <span class="stat-number" data-count="50">0+</span>
        <span class="stat-label">Projects</span>
      </div>
      <div class="stat-item">
        <span class="stat-number" data-count="100">0%</span>
        <span class="stat-label">Satisfaction</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">24/7</span>
        <span class="stat-label">Support</span>
      </div>
    </div>
  </div>

  {showScrollIndicator && (
    <div class="hero-section__scroll-indicator">
      <div class="hero-section__scroll-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 5v14"></path>
          <path d="M19 12l-7 7-7-7"></path>
        </svg>
      </div>
      <span class="hero-section__scroll-text">Scroll Down</span>
    </div>
  )}
</section>

<style>
  /* Variables for consistent styling */
  :root {
    --nosyt-purple: #4C1D95;
    --nosyt-purple-light: #7C3AED;
    --nosyt-orange: #FF6B00;
    --nosyt-orange-light: #FF9E44;
  }

  .hero-section {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    padding: 2rem;
    overflow: hidden;
    background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
  }

  :global(.dark) .hero-section {
    background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
  }

  /* Enhanced Background Elements */
  .hero-background-elements {
    position: absolute;
    inset: 0;
    z-index: 1;
    pointer-events: none;
  }

  .floating-shape {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(45deg, rgba(124, 58, 237, 0.1), rgba(255, 107, 0, 0.1));
    backdrop-filter: blur(2px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    animation: float 6s ease-in-out infinite;
  }

  .shape-1 {
    width: 300px;
    height: 120px;
    top: 15%;
    left: -5%;
    animation-delay: 0s;
    border-radius: 60px;
    transform: rotate(12deg);
  }

  .shape-2 {
    width: 200px;
    height: 80px;
    top: 70%;
    right: -3%;
    animation-delay: 2s;
    border-radius: 40px;
    transform: rotate(-15deg);
  }

  .shape-3 {
    width: 150px;
    height: 60px;
    bottom: 10%;
    left: 10%;
    animation-delay: 4s;
    border-radius: 30px;
    transform: rotate(-8deg);
  }

  .shape-4 {
    width: 100px;
    height: 40px;
    top: 10%;
    right: 20%;
    animation-delay: 1s;
    border-radius: 20px;
    transform: rotate(20deg);
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(var(--rotation, 0deg)); }
    50% { transform: translateY(-20px) rotate(var(--rotation, 0deg)); }
  }

  .grid-overlay {
    position: absolute;
    inset: 0;
    background-image:
      radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px),
      radial-gradient(circle, rgba(255,255,255,0.05) 1px, transparent 1px);
    background-size: 30px 30px, 60px 60px;
    background-position: 0 0, 15px 15px;
    opacity: 0.3;
  }

  .gradient-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(40px);
    animation: pulse 4s ease-in-out infinite;
  }

  .orb-1 {
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, rgba(124, 58, 237, 0.3), transparent);
    top: 20%;
    right: 10%;
    animation-delay: 0s;
  }

  .orb-2 {
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, rgba(255, 107, 0, 0.2), transparent);
    bottom: 20%;
    left: 10%;
    animation-delay: 2s;
  }

  @keyframes pulse {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 0.5; transform: scale(1.1); }
  }

  .hero-section__content {
    position: relative;
    z-index: 10;
    text-align: center;
    max-width: 900px;
    padding: 2rem;
    animation: fadeIn 1s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Hero Badge */
  .hero-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50px;
    margin-bottom: 2rem;
    animation: fadeIn 1s ease-out 0.2s both;
  }

  .badge-icon {
    color: var(--nosyt-orange);
    display: flex;
    align-items: center;
  }

  .badge-text {
    color: white;
    font-weight: 600;
    font-size: 0.875rem;
  }

  .hero-section__title {
    font-size: clamp(2.5rem, 5vw, 4.5rem);
    font-weight: 800;
    margin: 0 0 1rem 0;
    line-height: 1.1;
    color: white;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .title-line {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
  }

  .gradient-text {
    background: linear-gradient(135deg, var(--nosyt-purple-light), var(--nosyt-orange));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Rotating Text */
  .rotating-text-container {
    font-size: clamp(1.25rem, 2.5vw, 1.75rem);
    font-weight: 600;
    color: #D1D5DB;
    margin-bottom: 1.5rem;
    animation: fadeIn 1s ease-out 0.4s both;
  }

  .static-text {
    color: #9CA3AF;
  }

  .rotating-text {
    color: var(--nosyt-orange);
    position: relative;
    display: inline-block;
    min-width: 200px;
    text-align: left;
  }

  .rotating-text::after {
    content: '';
    position: absolute;
    right: -2px;
    top: 0;
    height: 100%;
    width: 2px;
    background: var(--nosyt-orange);
    animation: blink 1s infinite;
  }

  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  .hero-section__title-word {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
    animation: wordFadeIn 0.5s ease-out forwards;
  }

  @keyframes wordFadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hero-section__subtitle {
    font-size: clamp(1.125rem, 2vw, 1.5rem);
    color: #4B5563;
    margin: 0 0 2.5rem 0;
    line-height: 1.6;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    animation: fadeIn 1s ease-out 0.3s both;
  }

  :global(.dark) .hero-section__subtitle {
    color: #D1D5DB;
  }

  .hero-section__buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    animation: fadeIn 1s ease-out 0.5s both;
  }

  /* Enhanced Buttons */
  .hero-section__button {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 2rem;
    border-radius: 12px;
    font-weight: 600;
    font-size: 1rem;
    text-decoration: none;
    transition: all 0.3s ease;
    overflow: hidden;
    border: none;
    cursor: pointer;
  }

  .button-content {
    position: relative;
    z-index: 2;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .button-icon {
    transition: transform 0.3s ease;
  }

  .hero-section__button--primary {
    background: linear-gradient(135deg, var(--nosyt-purple), var(--nosyt-purple-light));
    color: white;
    box-shadow:
      0 4px 15px rgba(124, 58, 237, 0.3),
      0 0 0 1px rgba(255, 255, 255, 0.1) inset;
  }

  .hero-section__button--primary:hover {
    transform: translateY(-2px);
    box-shadow:
      0 8px 25px rgba(124, 58, 237, 0.4),
      0 0 0 1px rgba(255, 255, 255, 0.2) inset;
  }

  .hero-section__button--primary:hover .button-icon {
    transform: translateX(3px);
  }

  .button-ripple {
    position: absolute;
    inset: 0;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
    opacity: 0;
    transform: scale(0);
    transition: all 0.3s ease;
  }

  .hero-section__button--primary:hover .button-ripple {
    opacity: 1;
    transform: scale(1);
  }

  .hero-section__button--secondary {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
  }

  .hero-section__button--secondary:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  /* Hero Stats */
  .hero-stats {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 3rem;
    animation: fadeIn 1s ease-out 0.8s both;
  }

  .stat-item {
    text-align: center;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    min-width: 100px;
  }

  .stat-number {
    display: block;
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--nosyt-orange);
    margin-bottom: 0.25rem;
  }

  .stat-label {
    font-size: 0.875rem;
    color: #9CA3AF;
    font-weight: 500;
  }

  .hero-section__scroll-indicator {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    z-index: 10;
    animation: fadeIn 1s ease-out 1s both;
  }

  .hero-section__scroll-icon {
    animation: bounce 2s infinite;
    color: var(--nosyt-purple);
  }

  :global(.dark) .hero-section__scroll-icon {
    color: white;
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .hero-section__scroll-text {
    font-size: 0.875rem;
    font-weight: 500;
    color: #6B7280;
  }

  :global(.dark) .hero-section__scroll-text {
    color: #9CA3AF;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .hero-section {
      padding: 1rem;
    }

    .hero-section__content {
      padding: 1rem;
    }

    .hero-section__buttons {
      flex-direction: column;
      width: 100%;
      max-width: 300px;
      margin: 0 auto;
    }

    .hero-section__button {
      width: 100%;
      justify-content: center;
    }
  }
</style>
