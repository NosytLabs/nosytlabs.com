---
/**
 * HeroSection Component
 * 
 * A modern, animated hero section with particle background
 * and call-to-action buttons.
 */

import ParticleBackground from './ParticleBackground.astro';

interface Props {
  /**
   * Main heading text
   */
  title: string;
  
  /**
   * Subheading text
   */
  subtitle?: string;
  
  /**
   * Text for the primary CTA button
   */
  primaryButtonText?: string;
  
  /**
   * URL for the primary CTA button
   */
  primaryButtonUrl?: string;
  
  /**
   * Text for the secondary CTA button
   */
  secondaryButtonText?: string;
  
  /**
   * URL for the secondary CTA button
   */
  secondaryButtonUrl?: string;
  
  /**
   * Whether to show a scroll indicator
   * @default true
   */
  showScrollIndicator?: boolean;
  
  /**
   * Whether to use a particle background
   * @default true
   */
  useParticles?: boolean;
  
  /**
   * Height of the hero section
   * @default "100vh"
   */
  height?: string;
  
  /**
   * Additional CSS classes
   */
  class?: string;
}

const {
  title,
  subtitle,
  primaryButtonText = "Get Started",
  primaryButtonUrl = "/services",
  secondaryButtonText = "Learn More",
  secondaryButtonUrl = "/about",
  showScrollIndicator = true,
  useParticles = true,
  height = "100vh",
  class: className = '',
} = Astro.props;
---

<section 
  class:list={['hero-section', className]} 
  style={`min-height: ${height};`}
>
  {useParticles && (
    <ParticleBackground
      id="hero-particles"
      color="rgba(124, 58, 237, 0.5)"
      secondaryColor="rgba(255, 107, 0, 0.5)"
      particleCount={100}
      particleSize={3}
      particleSpeed={1}
      interactive={true}
      connectParticles={true}
      gradient={true}
      zIndex={0}
    />
  )}
  
  <div class="hero-section__content">
    <h1 class="hero-section__title">
      {title.split(' ').map((word, i) => (
        <span class="hero-section__title-word" style={`animation-delay: ${i * 0.1}s;`}>{word}</span>
      ))}
    </h1>
    
    {subtitle && (
      <p class="hero-section__subtitle">{subtitle}</p>
    )}
    
    <div class="hero-section__buttons">
      <a href={primaryButtonUrl} class="hero-section__button hero-section__button--primary">
        {primaryButtonText}
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M5 12h14"></path>
          <path d="M12 5l7 7-7 7"></path>
        </svg>
      </a>
      
      <a href={secondaryButtonUrl} class="hero-section__button hero-section__button--secondary">
        {secondaryButtonText}
      </a>
    </div>
  </div>
  
  {showScrollIndicator && (
    <div class="hero-section__scroll-indicator">
      <div class="hero-section__scroll-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 5v14"></path>
          <path d="M19 12l-7 7-7-7"></path>
        </svg>
      </div>
      <span class="hero-section__scroll-text">Scroll Down</span>
    </div>
  )}
</section>

<style>
  /* Variables for consistent styling */
  :root {
    --nosyt-purple: #4C1D95;
    --nosyt-purple-light: #7C3AED;
    --nosyt-orange: #FF6B00;
    --nosyt-orange-light: #FF9E44;
  }

  .hero-section {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    padding: 2rem;
    overflow: hidden;
  }

  .hero-section__content {
    position: relative;
    z-index: 10;
    text-align: center;
    max-width: 900px;
    padding: 2rem;
    animation: fadeIn 1s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hero-section__title {
    font-size: clamp(2.5rem, 5vw, 4.5rem);
    font-weight: 800;
    margin: 0 0 1.5rem 0;
    line-height: 1.1;
    color: var(--nosyt-purple);
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
  }

  :global(.dark) .hero-section__title {
    color: white;
  }

  .hero-section__title-word {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
    animation: wordFadeIn 0.5s ease-out forwards;
  }

  @keyframes wordFadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hero-section__subtitle {
    font-size: clamp(1.125rem, 2vw, 1.5rem);
    color: #4B5563;
    margin: 0 0 2.5rem 0;
    line-height: 1.6;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    animation: fadeIn 1s ease-out 0.3s both;
  }

  :global(.dark) .hero-section__subtitle {
    color: #D1D5DB;
  }

  .hero-section__buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
    animation: fadeIn 1s ease-out 0.5s both;
  }

  .hero-section__button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.875rem 1.75rem;
    border-radius: 0.5rem;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .hero-section__button--primary {
    background-color: var(--nosyt-purple);
    color: white;
    box-shadow: 0 4px 6px -1px rgba(76, 29, 149, 0.2), 0 2px 4px -1px rgba(76, 29, 149, 0.1);
  }

  .hero-section__button--primary:hover {
    background-color: var(--nosyt-purple-light);
    transform: translateY(-2px);
    box-shadow: 0 10px 15px -3px rgba(76, 29, 149, 0.2), 0 4px 6px -2px rgba(76, 29, 149, 0.1);
  }

  .hero-section__button--primary svg {
    transition: transform 0.2s ease;
  }

  .hero-section__button--primary:hover svg {
    transform: translateX(3px);
  }

  .hero-section__button--secondary {
    background-color: transparent;
    color: var(--nosyt-purple);
    border: 2px solid var(--nosyt-purple);
  }

  .hero-section__button--secondary:hover {
    background-color: rgba(124, 58, 237, 0.1);
    transform: translateY(-2px);
  }

  :global(.dark) .hero-section__button--secondary {
    color: white;
    border-color: white;
  }

  :global(.dark) .hero-section__button--secondary:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }

  .hero-section__scroll-indicator {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    z-index: 10;
    animation: fadeIn 1s ease-out 1s both;
  }

  .hero-section__scroll-icon {
    animation: bounce 2s infinite;
    color: var(--nosyt-purple);
  }

  :global(.dark) .hero-section__scroll-icon {
    color: white;
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .hero-section__scroll-text {
    font-size: 0.875rem;
    font-weight: 500;
    color: #6B7280;
  }

  :global(.dark) .hero-section__scroll-text {
    color: #9CA3AF;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .hero-section {
      padding: 1rem;
    }
    
    .hero-section__content {
      padding: 1rem;
    }
    
    .hero-section__buttons {
      flex-direction: column;
      width: 100%;
      max-width: 300px;
      margin: 0 auto;
    }
    
    .hero-section__button {
      width: 100%;
      justify-content: center;
    }
  }
</style>
