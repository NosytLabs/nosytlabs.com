---
import LogoPrimary from './LogoPrimary.astro';
const links = [
  { href: '/', label: 'Home' },
  { href: '/about', label: 'About' },
  { href: '/team', label: 'Team' },
  { 
    href: '/services', 
    label: 'Services', 
    hasDropdown: true,
    dropdownItems: [
      { href: '/services', label: 'All Services' },
      { href: '/services/web-development', label: 'Web Development' },
      { href: '/services/ai-integration', label: 'AI Integration' },
      { href: '/services/ecommerce-solutions', label: 'E-commerce Solutions' },
      { href: '/services/mobile-development', label: 'Mobile Development' },
      { href: '/services/ui-ux-design', label: 'UI/UX Design' },
      { href: '/services/consulting', label: 'Consulting' },
      { href: '/services/cloud-solutions', label: 'Cloud Solutions' }
    ]
  },
  { href: '/projects', label: 'Projects' },
  { href: '/blog', label: 'Blog' },
  { href: '/book-a-consultation', label: 'Book a Consultation' },
  { href: '/contact', label: 'Contact' },
];
---

<header class="sticky top-0 z-50 border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 glass hover-lift" role="banner">
  <div class="container mx-auto px-6">
    <nav class="flex items-center justify-between py-4" role="navigation" aria-label="Main navigation">
      <!-- Branded Logo Section -->
      <a href="/" class="flex items-center group" aria-label="Nosyt Labs - Home">
        <LogoPrimary size="md" class="transition-all duration-300 group-hover:scale-105 glow-accent" />
      </a>

      <!-- Desktop Navigation Menu -->
      <ul class="hidden md:flex items-center space-x-2" role="menubar">
        {links.map((link, index) => (
          <li class="relative group" role="none">
            {link.hasDropdown ? (
              <div class="relative">
                <button 
                  class="brand-body font-medium text-muted-foreground hover:text-foreground transition-all duration-300 relative px-4 py-2 rounded-lg hover:bg-accent flex items-center gap-1 touch-target hover-lift"
                  role="menuitem"
                  aria-haspopup="true"
                  aria-expanded="false"
                  aria-controls={`dropdown-${index}`}
                  id={`dropdown-button-${index}`}
                >
                  {link.label}
                  <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </button>
                <!-- Dropdown Menu -->
                <div 
                  class="absolute top-full left-0 mt-2 w-56 bg-background/95 backdrop-blur-lg border border-border rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50 animate-fade-in-up"
                  role="menu"
                  aria-labelledby={`dropdown-button-${index}`}
                  id={`dropdown-${index}`}
                >
                  <div class="py-2">
                    {link.dropdownItems.map(item => (
                      <a 
                        href={item.href} 
                        class="block px-4 py-2 text-sm text-muted-foreground hover:text-foreground hover:bg-accent transition-colors touch-target hover-lift"
                        role="menuitem"
                        tabindex="-1"
                      >
                        {item.label}
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            ) : (
              <a 
                href={link.href} 
                class="brand-body font-medium text-muted-foreground hover:text-foreground transition-all duration-300 relative px-4 py-2 rounded-lg hover:bg-accent flex items-center touch-target hover-lift"
                role="menuitem"
              >
                {link.label}
              </a>
            )}
          </li>
        ))}
      </ul>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden flex flex-col items-center justify-center w-10 h-10 space-y-1.5 group ml-auto touch-target hover-lift"
        aria-label="Toggle mobile menu"
        aria-expanded="false"
        aria-controls="mobile-menu"
        type="button"
      >
        <span class="w-6 h-0.5 bg-primary transition-all duration-300 group-hover:bg-foreground transform group-hover:rotate-45 group-hover:translate-y-2" aria-hidden="true"></span>
        <span class="w-6 h-0.5 bg-primary transition-all duration-300 group-hover:bg-foreground opacity-100 group-hover:opacity-0" aria-hidden="true"></span>
        <span class="w-6 h-0.5 bg-primary transition-all duration-300 group-hover:bg-foreground transform group-hover:-rotate-45 group-hover:-translate-y-2" aria-hidden="true"></span>
      </button>
    </nav>

    <!-- Mobile Navigation Menu -->
    <div 
      id="mobile-menu" 
      class="md:hidden hidden bg-background/98 backdrop-blur-lg border-t border-border absolute left-0 right-0 top-full z-40 w-full"
      role="navigation"
      aria-label="Mobile navigation"
      aria-hidden="true"
    >
      <div class="container mx-auto px-6 py-6">
        <ul class="space-y-2" role="menu">
          {links.map((link, index) => (
            <li role="none">
              {link.hasDropdown ? (
                <div>
                  <button 
                    class="w-full text-left block brand-body font-medium text-muted-foreground hover:text-foreground transition-all duration-300 py-3 px-4 rounded-lg hover:bg-accent relative group flex items-center justify-between mobile-dropdown-toggle text-base touch-target hover-lift"
                    aria-expanded="false"
                    aria-controls={`mobile-dropdown-${index}`}
                    id={`mobile-dropdown-button-${index}`}
                    role="menuitem"
                    aria-haspopup="true"
                  >
                    {link.label}
                    <svg class="w-4 h-4 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </button>
                  <div 
                    class="mobile-dropdown-content hidden pl-4 mt-2 space-y-2"
                    id={`mobile-dropdown-${index}`}
                    role="menu"
                    aria-labelledby={`mobile-dropdown-button-${index}`}
                  >
                    {link.dropdownItems.map(item => (
                      <a 
                        href={item.href} 
                        class="block text-sm text-muted-foreground hover:text-foreground transition-colors py-2 px-4 rounded hover:bg-accent/50 touch-target hover-lift"
                        role="menuitem"
                        tabindex="-1"
                      >
                        {item.label}
                      </a>
                    ))}
                  </div>
                </div>
              ) : (
                <a 
                  href={link.href} 
                  class="block brand-body font-medium text-muted-foreground hover:text-foreground transition-all duration-300 py-3 px-4 rounded-lg hover:bg-accent text-base touch-target hover-lift"
                  role="menuitem"
                >
                  {link.label}
                </a>
              )}
            </li>
          ))}
        </ul>
      </div>
    </div>
  </div>
</header>

<!-- Mobile Menu Toggle Script -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    let isMenuOpen = false;

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        isMenuOpen = !isMenuOpen;
        
        if (isMenuOpen) {
          mobileMenu.classList.remove('hidden');
          mobileMenu.classList.add('animate-fade-in');
          mobileMenuButton.classList.add('menu-open');
        } else {
          mobileMenu.classList.add('hidden');
          mobileMenu.classList.remove('animate-fade-in');
          mobileMenuButton.classList.remove('menu-open');
        }
      });

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!mobileMenuButton.contains(e.target) && !mobileMenu.contains(e.target) && isMenuOpen) {
          isMenuOpen = false;
          mobileMenu.classList.add('hidden');
          mobileMenu.classList.remove('animate-fade-in');
          mobileMenuButton.classList.remove('menu-open');
        }
      });

      // Close menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && isMenuOpen) {
          isMenuOpen = false;
          mobileMenu.classList.add('hidden');
          mobileMenu.classList.remove('animate-fade-in');
          mobileMenuButton.classList.remove('menu-open');
        }
      });
    }

    // Mobile dropdown functionality
    const mobileDropdownToggles = document.querySelectorAll('.mobile-dropdown-toggle');
    mobileDropdownToggles.forEach(toggle => {
      toggle.addEventListener('click', (e) => {
        e.preventDefault();
        const dropdownContent = toggle.nextElementSibling;
        const arrow = toggle.querySelector('svg');
        
        if (dropdownContent.classList.contains('hidden')) {
          dropdownContent.classList.remove('hidden');
          arrow.style.transform = 'rotate(180deg)';
        } else {
          dropdownContent.classList.add('hidden');
          arrow.style.transform = 'rotate(0deg)';
        }
      });
    });
    
    // Add event listener to the mobile CTA button
    const mobileCTAButton = mobileMenu?.querySelector('button');
    if (mobileCTAButton) {
      mobileCTAButton.addEventListener('click', () => {
        window.location.href = '/contact';
      });
    }
  });
</script>

<style>
  /* Mobile menu animations */
  .animate-fade-in {
    animation: fadeIn 0.3s ease-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Mobile menu button states */
  .menu-open span:nth-child(1) {
    transform: rotate(45deg) translateY(8px);
  }
  
  .menu-open span:nth-child(2) {
    opacity: 0;
  }
  
  .menu-open span:nth-child(3) {
    transform: rotate(-45deg) translateY(-8px);
  }
  
  /* Enhanced responsive behavior */
  @media (max-width: 768px) {
    .brand-spacing-logo {
      gap: var(--spacing-sm);
    }
    
    .brand-spacing-logo svg {
      width: 40px;
      height: 40px;
    }
  }
  
  /* Smooth scroll behavior for navigation */
  html {
    scroll-behavior: smooth;
  }
</style>