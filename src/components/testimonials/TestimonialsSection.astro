---
/**
 * Testimonials Section Component
 * 
 * A comprehensive testimonials section with multiple layout options,
 * filtering capabilities, and responsive design.
 */

import TestimonialCard from './TestimonialCard.astro';
import AstroIcon from '../ui/AstroIcon.astro';
import Button from '../ui/Button.astro';

interface Testimonial {
  id?: string;
  name: string;
  role: string;
  company?: string;
  content: string;
  rating: number;
  avatar?: string;
  image?: string;
  category?: string;
  featured?: boolean;
}

interface Props {
  testimonials: Testimonial[];
  title?: string;
  subtitle?: string;
  description?: string;
  layout?: 'grid' | 'carousel' | 'masonry' | 'featured';
  columns?: 2 | 3 | 4;
  showAll?: boolean;
  maxItems?: number;
  variant?: 'default' | 'featured' | 'compact' | 'card';
  background?: 'default' | 'muted' | 'gradient' | 'primary';
  showCTA?: boolean;
  ctaText?: string;
  ctaLink?: string;
  class?: string;
}

const {
  testimonials,
  title = "What Our Clients Say",
  subtitle = "Client Success Stories",
  description = "Don't just take our word for it. Here's what our clients have to say about working with us.",
  layout = 'grid',
  columns = 3,
  showAll = false,
  maxItems = 6,
  variant = 'default',
  background = 'default',
  showCTA = false,
  ctaText = "View All Testimonials",
  ctaLink = "/testimonials",
  class: className = ''
} = Astro.props;

// Filter and limit testimonials
const displayTestimonials = showAll 
  ? testimonials 
  : testimonials.slice(0, maxItems);

// Featured testimonials (if using featured layout)
const featuredTestimonials = testimonials.filter(t => t.featured);
const regularTestimonials = testimonials.filter(t => !t.featured);

// Background classes
const backgroundClasses = {
  default: 'bg-background',
  muted: 'bg-background-muted/50',
  gradient: 'bg-gradient-to-br from-primary/5 via-background to-secondary/5',
  primary: 'bg-primary text-white'
};

// Layout classes
const layoutClasses = {
  grid: `grid gap-8 ${columns === 2 ? 'md:grid-cols-2' : columns === 3 ? 'md:grid-cols-2 lg:grid-cols-3' : 'md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4'}`,
  carousel: 'flex gap-8 overflow-x-auto pb-4 snap-x snap-mandatory',
  masonry: 'columns-1 md:columns-2 lg:columns-3 gap-8 space-y-8',
  featured: 'space-y-12'
};

const sectionClass = `section-xl ${backgroundClasses[background]} ${className}`;
---

<section class={sectionClass}>
  <div class="container mx-auto">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <div class="inline-flex items-center gap-2 bg-accent/10 px-4 py-2 rounded-full mb-6">
        <AstroIcon name="tabler:heart" class="w-4 h-4 text-accent" />
        <span class="text-accent font-semibold text-sm">{subtitle}</span>
      </div>
      <h2 class="text-4xl md:text-5xl font-bold text-text mb-6">
        {title}
      </h2>
      <p class="text-xl text-text-muted max-w-3xl mx-auto">
        {description}
      </p>
    </div>

    <!-- Testimonials Display -->
    {
      layout === 'featured' ? (
      <div class="space-y-12">
        <!-- Featured Testimonials -->
        {featuredTestimonials.length > 0 && (
          <div class="grid md:grid-cols-2 gap-8 mb-12">
            {featuredTestimonials.slice(0, 2).map(testimonial => (
              <TestimonialCard 
                testimonial={testimonial} 
                variant="featured"
              />
            ))}
          </div>
        )}
        
        <!-- Regular Testimonials Grid -->
        <div class="grid md:grid-cols-3 gap-8">
          {regularTestimonials.slice(0, 6).map(testimonial => (
            <TestimonialCard 
              testimonial={testimonial} 
              variant={variant}
            />
          ))}
        </div>
      </div>
    ) : layout === 'carousel' ? (
      <div class="overflow-hidden">
        <div class={layoutClasses[layout]}>
          {displayTestimonials.map(testimonial => (
            <div class="flex-none w-80 snap-start">
              <TestimonialCard 
                testimonial={testimonial} 
                variant={variant}
              />
            </div>
          ))}
        </div>
      </div>
    ) : layout === 'masonry' ? (
      <div class={layoutClasses[layout]}>
        {displayTestimonials.map(testimonial => (
          <div class="break-inside-avoid mb-8">
            <TestimonialCard 
              testimonial={testimonial} 
              variant={variant}
            />
          </div>
        ))}
      </div>
    ) : (
      <div class={layoutClasses[layout]}>
        {displayTestimonials.map(testimonial => (
          <TestimonialCard 
            testimonial={testimonial} 
            variant={variant}
          />
        ))}
      </div>
    )
    }

    <!-- Statistics Section -->
    <div class="mt-20 grid grid-cols-2 md:grid-cols-4 gap-8 text-center">
      <div>
        <div class="text-3xl font-bold text-primary mb-2">500+</div>
        <div class="text-sm text-text-muted uppercase tracking-wide">Happy Clients</div>
      </div>
      <div>
        <div class="text-3xl font-bold text-primary mb-2">98%</div>
        <div class="text-sm text-text-muted uppercase tracking-wide">Satisfaction Rate</div>
      </div>
      <div>
        <div class="text-3xl font-bold text-primary mb-2">5.0</div>
        <div class="text-sm text-text-muted uppercase tracking-wide">Average Rating</div>
      </div>
      <div>
        <div class="text-3xl font-bold text-primary mb-2">24/7</div>
        <div class="text-sm text-text-muted uppercase tracking-wide">Support</div>
      </div>
    </div>

    <!-- Call to Action -->
    {showCTA && (
      <div class="text-center mt-12">
        <Button 
          href={ctaLink} 
          variant="primary" 
          size="lg"
          class="px-8 py-4"
        >
          {ctaText}
          <AstroIcon name="tabler:arrow-right" class="w-4 h-4 ml-2" />
        </Button>
      </div>
    )}
  </div>
</section>

<style>
  /* Smooth scrolling for carousel */
  .overflow-x-auto {
    scrollbar-width: thin;
    scrollbar-color: theme('colors.primary.500') theme('colors.gray.200');
  }
  
  .overflow-x-auto::-webkit-scrollbar {
    height: 8px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-track {
    background: theme('colors.gray.200');
    border-radius: 4px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-thumb {
    background: theme('colors.primary.500');
    border-radius: 4px;
  }
  
  .overflow-x-auto::-webkit-scrollbar-thumb:hover {
    background: theme('colors.primary.600');
  }
</style>