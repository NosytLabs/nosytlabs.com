---
import type { CollectionEntry } from 'astro:content';
import AstroIcon from './ui/AstroIcon.astro';
import Button from './ui/Button.astro';

interface Props {
  project: CollectionEntry<'projects'>;
  featured?: boolean;
  showStats?: boolean;
}

const { project, featured = false, showStats = true } = Astro.props;
const { data } = project;

// Category colors for visual distinction
const categoryColors: Record<string, { bg: string; text: string; border: string }> = {
  'web-development': {
    bg: 'from-blue-500/10 to-cyan-500/10',
    text: 'text-blue-600 dark:text-blue-400',
    border: 'border-blue-500/30'
  },
  'ai-integration': {
    bg: 'from-purple-500/10 to-pink-500/10',
    text: 'text-purple-600 dark:text-purple-400',
    border: 'border-purple-500/30'
  },
  'consulting': {
    bg: 'from-green-500/10 to-emerald-500/10',
    text: 'text-green-600 dark:text-green-400',
    border: 'border-green-500/30'
  },
  'mobile-development': {
    bg: 'from-orange-500/10 to-red-500/10',
    text: 'text-orange-600 dark:text-orange-400',
    border: 'border-orange-500/30'
  },
  'automation': {
    bg: 'from-teal-500/10 to-cyan-500/10',
    text: 'text-teal-600 dark:text-teal-400',
    border: 'border-teal-500/30'
  }
};

const colorScheme = categoryColors[data.category] || categoryColors['web-development'];

// Format budget range for display
const formatBudget = (range: string) => {
  const budgetMap: Record<string, string> = {
    'under-10k': 'Under $10K',
    '10k-25k': '$10K - $25K',
    '25k-50k': '$25K - $50K',
    '50k-100k': '$50K - $100K',
    '100k-250k': '$100K - $250K',
    'over-100k': '$100K+'
  };
  return budgetMap[range] || range;
};

// Get category display name
const getCategoryName = (category: string) => {
  const categoryNames: Record<string, string> = {
    'web-development': 'Web Development',
    'ai-integration': 'AI Integration',
    'consulting': 'Technical Consulting',
    'mobile-development': 'Mobile Development',
    'automation': 'Automation'
  };
  return categoryNames[category] || category;
};
---

<article 
  class={`group relative overflow-hidden rounded-2xl bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border border-gray-200/50 dark:border-gray-700/50 transition-all duration-500 hover:shadow-2xl hover:shadow-gray-900/10 dark:hover:shadow-black/20 hover:scale-[1.02] hover:-translate-y-2 entrance-slide-up ${
    featured ? 'ring-2 ring-primary-500/30 shadow-xl' : ''
  }`}
  data-category={data.category}
  data-status={data.status}
>
  <!-- Background Gradient Animation -->
  <div class={`absolute inset-0 bg-gradient-to-br ${colorScheme.bg} opacity-0 group-hover:opacity-100 transition-opacity duration-500`}></div>
  
  <!-- Featured Badge -->
  {featured && (
    <div class="absolute top-4 left-4 z-20">
      <div class="flex items-center gap-2 bg-gradient-to-r from-yellow-400 to-orange-500 text-white text-xs font-bold px-3 py-1.5 rounded-full shadow-lg animate-pulse">
        <AstroIcon name="tabler:star-filled" class="w-3 h-3" />
        <span>Featured</span>
      </div>
    </div>
  )}

  <!-- Status Badge -->
  <div class="absolute top-4 right-4 z-20">
    <div class={`px-3 py-1 rounded-full text-xs font-medium backdrop-blur-sm ${
      data.status === 'completed' ? 'bg-green-100/80 text-green-700 dark:bg-green-900/50 dark:text-green-300' :
      data.status === 'in-progress' ? 'bg-blue-100/80 text-blue-700 dark:bg-blue-900/50 dark:text-blue-300' :
      data.status === 'featured' ? 'bg-purple-100/80 text-purple-700 dark:bg-purple-900/50 dark:text-purple-300' :
      'bg-gray-100/80 text-gray-700 dark:bg-gray-800/50 dark:text-gray-300'
    }`}>
      {data.status === 'completed' ? 'Completed' :
       data.status === 'in-progress' ? 'In Progress' :
       data.status === 'featured' ? 'Featured' : 'Archived'}
    </div>
  </div>

  <!-- Project Image -->
  <div class="relative h-48 overflow-hidden">
    <img 
      src={data.media.heroImage} 
      alt={data.title}
      class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
      loading="lazy"
      decoding="async"
      fetchpriority="low"
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
    
    <!-- Category Badge on Image -->
    <div class="absolute bottom-4 left-4">
      <div class={`inline-flex items-center gap-2 bg-gradient-to-r ${colorScheme.bg} backdrop-blur-sm px-3 py-1.5 rounded-full border ${colorScheme.border}`}>
        <AstroIcon name="tabler:briefcase" class={`w-4 h-4 ${colorScheme.text}`} />
        <span class={`text-sm font-medium ${colorScheme.text}`}>
          {getCategoryName(data.category)}
        </span>
      </div>
    </div>
  </div>

  <!-- Content -->
  <div class="relative p-6 space-y-4">
    <!-- Client Info -->
    <div class="flex items-center gap-3 text-sm text-gray-600 dark:text-gray-400">
      <AstroIcon name="tabler:building" class="w-4 h-4" />
      <span class="font-medium">{data.client.name}</span>
      <span class="text-gray-400 dark:text-gray-500">â€¢</span>
      <span class="capitalize">{data.client.industry}</span>
    </div>

    <!-- Title & Description -->
    <div class="space-y-2">
      <h3 class="text-xl font-bold text-gray-900 dark:text-white group-hover:text-primary transition-colors duration-300">
        {data.title}
      </h3>
      <p class="text-gray-600 dark:text-gray-300 text-sm leading-relaxed line-clamp-3">
        {data.excerpt}
      </p>
    </div>

    <!-- Technologies -->
    <div class="flex flex-wrap gap-2">
      {data.scope.technologies.slice(0, 4).map((tech) => (
        <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-xs rounded-md font-medium">
          {tech}
        </span>
      ))}
      {data.scope.technologies.length > 4 && (
        <span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-500 dark:text-gray-400 text-xs rounded-md">
          +{data.scope.technologies.length - 4} more
        </span>
      )}
    </div>

    <!-- Project Stats -->
    {showStats && (
      <div class="grid grid-cols-2 gap-4 pt-4 border-t border-gray-200/50 dark:border-gray-700/50">
        <div class="text-center">
          <div class="text-lg font-bold text-gray-900 dark:text-white">
            {data.timeline.duration}
          </div>
          <div class="text-xs text-gray-500 dark:text-gray-400">Duration</div>
        </div>
        <div class="text-center">
          <div class="text-lg font-bold text-gray-900 dark:text-white">
            {formatBudget(data.scope.budgetRange)}
          </div>
          <div class="text-xs text-gray-500 dark:text-gray-400">Investment</div>
        </div>
      </div>
    )}

    <!-- Results Preview -->
    {data.results.metrics.length > 0 && (
      <div class="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 rounded-lg p-3 border border-green-200/50 dark:border-green-700/50">
        <div class="flex items-center gap-2 mb-2">
          <AstroIcon name="tabler:trending-up" class="w-4 h-4 text-green-600 dark:text-green-400" />
          <span class="text-sm font-medium text-green-700 dark:text-green-300">Key Results</span>
        </div>
        <div class="grid grid-cols-2 gap-2">
          {data.results.metrics.slice(0, 2).map((metric) => (
            <div class="text-center">
              <div class="text-sm font-bold text-green-800 dark:text-green-200">
                {metric.value}
              </div>
              <div class="text-xs text-green-600 dark:text-green-400">
                {metric.label}
              </div>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- CTA Button -->
    <div class="pt-4">
      <Button
        href={`/projects/${project.slug}`}
        variant="gradient"
        class="w-full transform hover:scale-105"
        aria-label={`View case study for ${data.title}`}
      >
        <span>View Case Study</span>
        <AstroIcon name="tabler:arrow-right" class="w-4 h-4 transition-transform group-hover:translate-x-1" />
      </Button>
    </div>
  </div>

  <!-- Hover Overlay -->
  <div class="absolute inset-0 bg-gradient-to-br from-primary/5 to-secondary/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"></div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
