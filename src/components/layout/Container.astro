---
export interface Props {
  /** Container size variant */
  size?: 'standard' | 'wide' | 'narrow' | 'full';
  /** Additional CSS classes */
  className?: string;
  /** HTML element type */
  as?: 'div' | 'main' | 'article' | 'section';
}

const {
  size = 'standard',
  className = '',
  as: Element = 'div',
  ...rest
} = Astro.props;

// Container size classes - Using CSS custom properties for consistent spacing
const sizeClasses = {
  full: 'w-full px-[var(--space-4)] sm:px-[var(--space-6)] md:px-[var(--space-8)] lg:px-[var(--space-12)]',
  narrow: 'max-w-4xl mx-auto px-[var(--space-4)] sm:px-[var(--space-6)] md:px-[var(--space-8)] lg:px-[var(--space-12)]',
  standard: 'container-fixed', // Use the CSS utility class
  wide: 'max-w-[1536px] mx-auto px-[var(--space-4)] sm:px-[var(--space-6)] md:px-[var(--space-8)] lg:px-[var(--space-12)]'
};

const containerClasses = [
  sizeClasses[size as keyof typeof sizeClasses],
  className
].filter(Boolean).join(' ');
---

<Element class={containerClasses} {...rest}>
  <slot />
</Element>