---
import Button from "../ui/Button.astro";

interface CTA {
  text: string;
  href: string;
  price?: string;
}

interface Benefit {
  metric: string;
  description: string;
}

interface Feature {
  icon?: string; // raw SVG string
  title: string;
  description: string;
}

const {
  title = "Service",
  subtitle = "",
  description = "",
  primaryCTA,
  secondaryCTA,
  benefits = [],
  features = [],
  // New optional props
  accentClass = "text-accent",
  heroBadgeLabel = "Professional Service",
  showBadge = true,
  showCTAs = true,
  showBenefits = true,
  showFeatures = true,
} = Astro.props as {
  title?: string;
  subtitle?: string;
  description?: string;
  primaryCTA?: CTA;
  secondaryCTA?: CTA;
  benefits?: Benefit[];
  features?: Feature[];
  accentClass?: string;
  heroBadgeLabel?: string;
  showBadge?: boolean;
  showCTAs?: boolean;
  showBenefits?: boolean;
  showFeatures?: boolean;
};
---

<main class="relative py-20 md:py-28 bg-background focus:outline-none focus:ring-2 focus:ring-accent" role="main">
  <div class="container mx-auto px-6">
    <!-- Optional background slot for decorative components -->
    <slot name="background" />

    <!-- Hero -->
    <div class="max-w-5xl mx-auto text-center mb-14 md:mb-20">
      {showBadge && (
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 border border-primary/20 mb-6">
          <div class="w-2 h-2 bg-primary rounded-full animate-pulse"></div>
          <span class="text-xs md:text-sm leading-relaxed leading-relaxed leading-relaxed font-medium text-primary uppercase tracking-wider">{heroBadgeLabel}</span>
        </div>
      )}

      <h1 class="text-4xl md:text-6xl font-bold text-foreground font-heading tracking-tight">
        {title}
        {subtitle ? (
          <span class={`block mt-2 ${accentClass}`}>{subtitle}</span>
        ) : null}
      </h1>
      {description && (
        <p class="mt-6 text-lg leading-relaxed leading-relaxed leading-relaxed md:text-xl leading-snug leading-snug leading-snug text-muted-foreground leading-relaxed max-w-3xl mx-auto">{description}</p>
      )}

      {(showCTAs && (primaryCTA || secondaryCTA)) && (
        <div class="mt-10 flex flex-col sm:flex-row items-center justify-center gap-4">
          {primaryCTA && (
            <div class="flex items-center gap-3">
              <a href={primaryCTA.href} class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm leading-relaxed leading-relaxed leading-relaxed font-semibold ring-offset-background transition-colors bg-accent text-primary border-2 border-accent hover:bg-transparent hover:text-accent hover:shadow-glow px-6 py-3">
                {primaryCTA.text}
              </a>
              {primaryCTA.price && (
                <span class="inline-flex items-center rounded-md border border-border bg-card/70 px-3 py-2 text-sm leading-relaxed leading-relaxed leading-relaxed text-muted-foreground">
                  <span class="mr-1">Starting at</span>
                  <span class="font-semibold text-foreground">{primaryCTA.price}</span>
                </span>
              )}
            </div>
          )}
          {secondaryCTA && (
            <a href={secondaryCTA.href} class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm leading-relaxed leading-relaxed leading-relaxed font-semibold ring-offset-background transition-colors border border-input bg-transparent hover:bg-surface-secondary px-6 py-3">
              {secondaryCTA.text}
            </a>
          )}
        </div>
      )}
    </div>

    <!-- Optional callout slot for custom notices or promo banners -->
    <slot name="callout" />

    {/* Benefits */}
    {showBenefits && Array.isArray(benefits) && benefits.length > 0 && (
      <div class="max-w-6xl mx-auto mb-16 md:mb-20">
        <div class="grid grid-cols-2 md:grid-cols-3 gap-4 md:gap-6">
          {benefits.map((b) => (
            <div class="text-center p-6 bg-card/50 rounded-xl border border-border/50">
              <div class={`text-2xl md:text-3xl font-bold mb-1 ${accentClass}`}>{b.metric}</div>
              <div class="text-sm leading-relaxed leading-relaxed leading-relaxed md:text-base leading-normal leading-normal leading-normal text-muted-foreground">{b.description}</div>
            </div>
          ))}
        </div>
      </div>
    )}

    {/* Features */}
    {showFeatures && Array.isArray(features) && features.length > 0 && (
      <div class="max-w-6xl mx-auto mb-16 md:mb-24">
        <div class="text-center mb-10">
          <h2 class="text-3xl md:text-4xl font-bold text-foreground font-heading">What You Get</h2>
          <p class="mt-3 text-muted-foreground">A comprehensive set of capabilities to deliver real outcomes</p>
        </div>
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {features.map((f) => (
            <div class="bg-card p-6 rounded-xl border border-border hover:border-primary/40 transition-colors">
              {f.icon && (
                <div class="w-14 h-14 rounded-lg bg-primary/10 flex items-center justify-center mb-4">
                  <div class="text-primary" set:html={f.icon}></div>
                </div>
              )}
              <h3 class="text-xl leading-relaxed leading-relaxed leading-relaxed font-bold text-foreground mb-2">{f.title}</h3>
              <p class="text-muted-foreground leading-relaxed">{f.description}</p>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Custom content from page -->
    <slot />
  </div>
</main>
