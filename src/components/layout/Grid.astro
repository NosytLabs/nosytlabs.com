---
/**
 * Grid Component
 * A consistent grid layout component with proper spacing and alignment
 */

export interface Props {
  columns?: {
    default?: number;
    sm?: number;
    md?: number;
    lg?: number;
    xl?: number;
  };
  gap?: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  align?: 'start' | 'center' | 'end' | 'stretch';
  justify?: 'start' | 'center' | 'end' | 'between' | 'around';
  class?: string;
}

const {
  columns = { default: 1, sm: 1, md: 2, lg: 3, xl: 4 },
  gap = 'md',
  align = 'stretch',
  justify = 'start',
  class: className = '',
} = Astro.props;

// Gap classes
const gapClasses = {
  none: 'gap-0',
  sm: 'gap-2',
  md: 'gap-4',
  lg: 'gap-8',
  xl: 'gap-12',
};

// Alignment classes
const alignClasses = {
  start: 'items-start',
  center: 'items-center',
  end: 'items-end',
  stretch: 'items-stretch',
};

// Justify classes
const justifyClasses = {
  start: 'justify-start',
  center: 'justify-center',
  end: 'justify-end',
  between: 'justify-between',
  around: 'justify-around',
};

// Column classes
const getColumnClass = (cols: number) => {
  return `grid-cols-${cols}`;
};

// Responsive column classes
const columnClasses = [
  getColumnClass(columns.default || 1),
  columns.sm ? `sm:${getColumnClass(columns.sm)}` : '',
  columns.md ? `md:${getColumnClass(columns.md)}` : '',
  columns.lg ? `lg:${getColumnClass(columns.lg)}` : '',
  columns.xl ? `xl:${getColumnClass(columns.xl)}` : '',
].filter(Boolean);

// Combine all classes
const gridClasses = [
  'grid',
  ...columnClasses,
  gapClasses[gap],
  alignClasses[align],
  justifyClasses[justify],
  className,
].filter(Boolean).join(' ');
---

<div class={gridClasses}>
  <slot />
</div>

<style>
  .grid {
    display: grid;
    width: 100%;
  }
  
  .grid-cols-1 {
    grid-template-columns: 1fr;
  }
  
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  
  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
  
  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }
  
  .grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
  
  @media (min-width: 640px) {
    .sm\:grid-cols-1 {
      grid-template-columns: 1fr;
    }
    
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    
    .sm\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    
    .sm\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  
  @media (min-width: 768px) {
    .md\:grid-cols-1 {
      grid-template-columns: 1fr;
    }
    
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  
  @media (min-width: 1024px) {
    .lg\:grid-cols-1 {
      grid-template-columns: 1fr;
    }
    
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    
    .lg\:grid-cols-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
    
    .lg\:grid-cols-6 {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
  
  @media (min-width: 1280px) {
    .xl\:grid-cols-1 {
      grid-template-columns: 1fr;
    }
    
    .xl\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    
    .xl\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    
    .xl\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    
    .xl\:grid-cols-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
    
    .xl\:grid-cols-6 {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
</style>
