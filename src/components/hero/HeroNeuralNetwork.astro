---
// Neural Network SVG Component
// Handles the animated neural network pathways and nodes
---

<!-- Advanced AI Connection Network -->
<svg
  class="absolute inset-0 w-full h-full opacity-15 md:opacity-20 max-w-4xl max-h-2xl mx-auto"
  viewBox="0 0 600 400"
>
  <defs>
    <linearGradient id="neuralGradient1" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:hsl(var(--primary-500));stop-opacity:0.8"></stop>
      <stop offset="50%" style="stop-color:hsl(var(--secondary-500));stop-opacity:0.6"></stop>
      <stop offset="100%" style="stop-color:hsl(var(--accent-500));stop-opacity:0.4"></stop>
    </linearGradient>
    <linearGradient id="neuralGradient2" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:hsl(var(--primary-400));stop-opacity:0.7"></stop>
      <stop offset="50%" style="stop-color:hsl(var(--secondary-400));stop-opacity:0.5"></stop>
      <stop offset="100%" style="stop-color:hsl(var(--accent-400));stop-opacity:0.3"></stop>
    </linearGradient>
    <radialGradient id="nodeGradient" cx="50%" cy="50%" r="50%">
      <stop offset="0%" style="stop-color:hsl(var(--text-inverted));stop-opacity:0.9"></stop>
      <stop offset="100%" style="stop-color:hsl(var(--primary-500));stop-opacity:0.3"></stop>
    </radialGradient>
  </defs>

  <!-- Neural pathways -->
  <path
    d="M40,60 Q125,40 210,80 Q300,120 390,70 Q475,30 560,60"
    stroke="url(#neuralGradient1)"
    stroke-width="1.5"
    fill="none"
    class="animate-neural-flow"
    stroke-dasharray="4,2"></path>
  <path
    d="M60,175 Q150,140 240,190 Q330,240 420,180 Q500,130 590,170"
    stroke="url(#neuralGradient2)"
    stroke-width="1.2"
    fill="none"
    class="animate-neural-flow-delayed"
    stroke-dasharray="3,2"></path>
  <path
    d="M30,300 Q100,260 180,290 Q260,320 340,280 Q420,240 500,270"
    stroke="url(#neuralGradient1)"
    stroke-width="1"
    fill="none"
    class="animate-neural-pulse-flow"
    stroke-dasharray="5,3"></path>

  <!-- Interconnected nodes -->
  <circle cx="90" cy="70" r="2" fill="url(#nodeGradient)" class="animate-neural-node"></circle>
  <circle cx="210" cy="80" r="1.5" fill="url(#nodeGradient)" class="animate-neural-node-delayed"
  ></circle>
  <circle cx="390" cy="70" r="1.75" fill="url(#nodeGradient)" class="animate-neural-node"></circle>
  <circle cx="240" cy="190" r="1.25" fill="url(#nodeGradient)" class="animate-neural-node-delayed"
  ></circle>
  <circle cx="420" cy="180" r="2" fill="url(#nodeGradient)" class="animate-neural-node"></circle>
  <circle cx="180" cy="290" r="1.5" fill="url(#nodeGradient)" class="animate-neural-node-delayed"
  ></circle>
  <circle cx="340" cy="280" r="1.75" fill="url(#nodeGradient)" class="animate-neural-node"></circle>

  <!-- Data packets -->
  <circle cx="0" cy="0" r="1" fill="hsl(var(--primary-500))" class="animate-data-packet-1"></circle>
  <circle cx="0" cy="0" r="0.75" fill="hsl(var(--secondary-500))" class="animate-data-packet-2"></circle>
  <circle cx="0" cy="0" r="1.25" fill="hsl(var(--accent-500))" class="animate-data-packet-3"></circle>

  <!-- Additional gradients for glow effects -->
  <defs>
    <radialGradient
      id="g-node-glow-1"
      cx="50%"
      cy="50%"
      r="50%"
      fx="50%"
      fy="50%">
      <stop offset="0%" stop-color="hsl(var(--primary-hue) var(--primary-saturation) var(--primary-lightness) / 0)" />
      <stop offset="50%" stop-color="hsl(var(--primary-hue) var(--primary-saturation) var(--primary-lightness) / 0.1)" />
      <stop offset="100%" stop-color="hsl(var(--primary-hue) var(--primary-saturation) var(--primary-lightness) / 0)" />
    </radialGradient>
    <radialGradient
      id="g-node-glow-2"
      cx="50%"
      cy="50%"
      r="50%"
      fx="50%"
      fy="50%">
      <stop offset="0%" stop-color="hsl(var(--secondary-hue) var(--secondary-saturation) var(--secondary-lightness) / 0)" />
      <stop offset="50%" stop-color="hsl(var(--secondary-hue) var(--secondary-saturation) var(--secondary-lightness) / 0.1)" />
      <stop offset="100%" stop-color="hsl(var(--secondary-hue) var(--secondary-saturation) var(--secondary-lightness) / 0)" />
    </radialGradient>
    <radialGradient
      id="g-node-glow-3"
      cx="50%"
      cy="50%"
      r="50%"
      fx="50%"
      fy="50%">
      <stop offset="0%" stop-color="hsl(var(--accent-hue) var(--accent-saturation) var(--accent-lightness) / 0)" />
      <stop offset="50%" stop-color="hsl(var(--accent-hue) var(--accent-saturation) var(--accent-lightness) / 0.1)" />
      <stop offset="100%" stop-color="hsl(var(--accent-hue) var(--accent-saturation) var(--accent-lightness) / 0)" />
    </radialGradient>
  </defs>
</svg>

<style>
  .path-glow {
    filter: drop-shadow(0 0 3px hsl(var(--primary-hue) var(--primary-saturation) var(--primary-lightness) / 0.5));
  }
  .node-pulse-1 {
    fill: url(#g-node-glow-1);
    animation: node-pulse 4s ease-in-out infinite;
  }
  .node-pulse-2 {
    fill: url(#g-node-glow-2);
    animation: node-pulse 5s ease-in-out infinite;
  }
  .node-pulse-3 {
    fill: url(#g-node-glow-3);
    animation: node-pulse 6s ease-in-out infinite;
  }
  .data-packet {
    filter: drop-shadow(0 0 2px hsl(var(--secondary-hue) var(--secondary-saturation) var(--secondary-lightness) / 0.5));
    animation: data-flow 10s linear infinite;
  }

  /* Neural Network Animations */
  @keyframes neural-flow {
    0% {
      stroke-dashoffset: 100;
      opacity: 0.3;
    }
    50% {
      stroke-dashoffset: 0;
      opacity: 1;
    }
    100% {
      stroke-dashoffset: -100;
      opacity: 0.3;
    }
  }

  @keyframes neural-flow-delayed {
    0% {
      stroke-dashoffset: 80;
      opacity: 0.2;
    }
    60% {
      stroke-dashoffset: 0;
      opacity: 0.9;
    }
    100% {
      stroke-dashoffset: -80;
      opacity: 0.2;
    }
  }

  @keyframes neural-pulse-flow {
    0% {
      stroke-dashoffset: 120;
      opacity: 0.4;
      stroke-width: 1.8;
    }
    40% {
      stroke-dashoffset: 20;
      opacity: 1;
      stroke-width: 2.5;
    }
    100% {
      stroke-dashoffset: -120;
      opacity: 0.4;
      stroke-width: 1.8;
    }
  }

  @keyframes neural-node {
    0%,
    100% {
      opacity: 0.6;
      transform: scale(1);
      filter: brightness(1);
    }
    50% {
      opacity: 1;
      transform: scale(1.4);
      filter: brightness(1.5);
    }
  }

  @keyframes neural-node-delayed {
    0%,
    100% {
      opacity: 0.4;
      transform: scale(1);
      filter: brightness(0.8);
    }
    60% {
      opacity: 0.9;
      transform: scale(1.6);
      filter: brightness(1.3);
    }
  }

  @keyframes data-packet-1 {
    0% {
      transform: translate(40px, 60px);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translate(560px, 60px);
      opacity: 0;
    }
  }

  @keyframes data-packet-2 {
    0% {
      transform: translate(60px, 175px);
      opacity: 0;
    }
    15% {
      opacity: 1;
    }
    85% {
      opacity: 1;
    }
    100% {
      transform: translate(590px, 170px);
      opacity: 0;
    }
  }

  @keyframes data-packet-3 {
    0% {
      transform: translate(30px, 300px);
      opacity: 0;
    }
    20% {
      opacity: 1;
    }
    80% {
      opacity: 1;
    }
    100% {
      transform: translate(500px, 270px);
      opacity: 0;
    }
  }

  /* Animation Assignments */
  .animate-neural-flow {
    animation: neural-flow 4s ease-in-out infinite;
  }

  .animate-neural-flow-delayed {
    animation: neural-flow-delayed 5s ease-in-out infinite 1s;
  }

  .animate-neural-pulse-flow {
    animation: neural-pulse-flow 6s ease-in-out infinite 2s;
  }

  .animate-neural-node {
    animation: neural-node 3s ease-in-out infinite;
  }

  .animate-neural-node-delayed {
    animation: neural-node-delayed 4s ease-in-out infinite 1.5s;
  }

  .animate-data-packet-1 {
    animation: data-packet-1 8s linear infinite;
  }

  .animate-data-packet-2 {
    animation: data-packet-2 10s linear infinite 2s;
  }

  .animate-data-packet-3 {
    animation: data-packet-3 12s linear infinite 4s;
  }
</style>
