---
/**
 * Responsive Card Component with Container Queries
 * Adapts layout and styling based on container size, not viewport
 */

import ContainerQueryLayout from '../layout/ContainerQueryLayout.astro';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  imageAlt?: string;
  href?: string;
  buttonText?: string;
  variant?: 'default' | 'featured' | 'compact';
  className?: string;
  'data-testid'?: string;
}

const {
  title,
  description,
  image,
  imageAlt = '',
  href,
  buttonText = 'Learn More',
  variant = 'default',
  className = '',
  'data-testid': testId,
  ...rest
} = Astro.props;

const cardClass = `responsive-card responsive-card--${variant} ${className}`.trim();
---

<ContainerQueryLayout
  containerType="card"
  className={cardClass}
  data-testid={testId}
  {...rest}
>
  {image && (
    <div class="card-image">
      <img
        src={image}
        alt={imageAlt}
        loading="lazy"
        decoding="async"
      />
    </div>
  )}
  
  <div class="card-content">
    {title && (
      <h3 class="card-title">{title}</h3>
    )}
    
    {description && (
      <p class="card-text">{description}</p>
    )}
    
    <slot />
  </div>
  
  {(href || buttonText) && (
    <div class="card-actions">
      {href ? (
        <a href={href} class="card-button btn btn-primary">
          {buttonText}
        </a>
      ) : (
        <button class="card-button btn btn-primary">
          {buttonText}
        </button>
      )}
      
      <slot name="actions" />
    </div>
  )}
</ContainerQueryLayout>

<style>
  /* Base Card Styles */
  .responsive-card {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .card-image {
    width: 100%;
    overflow: hidden;
    background: var(--color-surface, #f8fafc);
  }
  
  .card-image img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .card-content {
    padding: 1rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--color-text, #1f2937);
    line-height: 1.3;
  }
  
  .card-text {
    color: var(--color-text-secondary, #6b7280);
    line-height: 1.5;
    margin-bottom: 1rem;
    flex: 1;
  }
  
  .card-actions {
    padding: 1rem;
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    display: flex;
    gap: 0.75rem;
    align-items: center;
  }
  
  .card-button {
    flex: 1;
    min-height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  /* Container Query Responsive Styles */
  
  /* Small card (< 300px) */
  @container card (max-width: 299px) {
    .responsive-card {
      font-size: 0.875rem;
    }
    
    .card-image img {
      height: 150px;
    }
    
    .card-content {
      padding: 0.75rem;
    }
    
    .card-title {
      font-size: 1rem;
      margin-bottom: 0.5rem;
    }
    
    .card-text {
      font-size: 0.875rem;
      margin-bottom: 0.75rem;
    }
    
    .card-actions {
      padding: 0.75rem;
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .card-button {
      width: 100%;
      font-size: 0.875rem;
      padding: 0.5rem;
    }
  }
  
  /* Medium card (300px - 499px) */
  @container card (min-width: 300px) and (max-width: 499px) {
    .card-image img {
      height: 180px;
    }
    
    .card-content {
      padding: 1.25rem;
    }
    
    .card-title {
      font-size: 1.25rem;
      margin-bottom: 0.75rem;
    }
    
    .card-text {
      margin-bottom: 1rem;
    }
    
    .card-actions {
      padding: 1.25rem;
      flex-wrap: wrap;
    }
    
    .card-button {
      flex: 1;
      min-width: 120px;
    }
  }
  
  /* Large card (500px - 699px) */
  @container card (min-width: 500px) and (max-width: 699px) {
    .responsive-card {
      display: grid;
      grid-template-columns: 200px 1fr;
      grid-template-rows: auto 1fr auto;
      grid-template-areas:
        "image content"
        "image content"
        "actions actions";
      height: auto;
    }
    
    .card-image {
      grid-area: image;
      height: 100%;
    }
    
    .card-image img {
      height: 100%;
      min-height: 200px;
    }
    
    .card-content {
      grid-area: content;
      padding: 1.5rem;
    }
    
    .card-title {
      font-size: 1.375rem;
      margin-bottom: 1rem;
    }
    
    .card-text {
      font-size: 1rem;
      margin-bottom: 1.5rem;
    }
    
    .card-actions {
      grid-area: actions;
      padding: 1.5rem;
      border-top: 1px solid rgba(0, 0, 0, 0.1);
    }
  }
  
  /* Extra large card (â‰¥ 700px) */
  @container card (min-width: 700px) {
    .responsive-card {
      display: grid;
      grid-template-columns: 250px 1fr auto;
      grid-template-areas: "image content actions";
      align-items: start;
      height: auto;
    }
    
    .card-image {
      grid-area: image;
    }
    
    .card-image img {
      height: 200px;
    }
    
    .card-content {
      grid-area: content;
      padding: 2rem;
    }
    
    .card-title {
      font-size: 1.5rem;
      margin-bottom: 1rem;
    }
    
    .card-text {
      font-size: 1.125rem;
      line-height: 1.6;
      margin-bottom: 1.5rem;
    }
    
    .card-actions {
      grid-area: actions;
      padding: 2rem;
      border-top: none;
      border-left: 1px solid rgba(0, 0, 0, 0.1);
      flex-direction: column;
      min-width: 150px;
      height: 100%;
      justify-content: center;
    }
    
    .card-button {
      width: 100%;
      margin-bottom: 0.75rem;
    }
  }
  
  /* Variant Styles */
  .responsive-card--featured {
    border: 2px solid var(--color-primary, #7c3aed);
    box-shadow: 0 8px 25px rgba(124, 58, 237, 0.15);
  }
  
  .responsive-card--featured .card-title {
    color: var(--color-primary, #7c3aed);
  }
  
  .responsive-card--compact .card-content {
    padding: 0.75rem;
  }
  
  .responsive-card--compact .card-title {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }
  
  .responsive-card--compact .card-text {
    font-size: 0.875rem;
    margin-bottom: 0.75rem;
  }
  
  /* Hover Effects */
  .responsive-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
  }
  
  .responsive-card:hover .card-image img {
    transform: scale(1.05);
  }
  
  /* Dark Mode Support */
  [data-theme="dark"] .card-title {
    color: var(--color-text-dark, #e5e7eb);
  }
  
  [data-theme="dark"] .card-text {
    color: var(--color-text-secondary-dark, #9ca3af);
  }
  
  [data-theme="dark"] .card-actions {
    border-color: rgba(255, 255, 255, 0.1);
  }
  
  [data-theme="dark"] .responsive-card--featured {
    border-color: var(--color-primary, #7c3aed);
    box-shadow: 0 8px 25px rgba(124, 58, 237, 0.25);
  }
  
  /* Accessibility */
  .card-button:focus {
    outline: 2px solid var(--color-primary, #7c3aed);
    outline-offset: 2px;
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .responsive-card,
    .card-image img,
    .card-button {
      transition: none;
    }
    
    .responsive-card:hover {
      transform: none;
    }
    
    .responsive-card:hover .card-image img {
      transform: none;
    }
  }
</style>
