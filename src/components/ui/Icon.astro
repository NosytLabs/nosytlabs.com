---
/**
 * Standardized Icon Component
 * Consistent sizing system with proportional scaling across all viewports
 */

export interface Props {
  name: string;
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | number;
  class?: string;
  'aria-label'?: string;
  'aria-hidden'?: boolean;
}

const { 
  name, 
  size = 'md', 
  class: className = '', 
  'aria-label': ariaLabel,
  'aria-hidden': ariaHidden = !ariaLabel
} = Astro.props;

// Standardized size mapping for consistent proportional scaling
const sizeMap = {
  xs: 12,    // 0.75rem - Small decorative icons
  sm: 16,    // 1rem - Standard inline icons
  md: 20,    // 1.25rem - Default size for most use cases
  lg: 24,    // 1.5rem - Section headers, important actions
  xl: 32,    // 2rem - Hero sections, large cards
  '2xl': 40, // 2.5rem - Feature highlights, service icons
  '3xl': 48  // 3rem - Major visual elements, hero features
};

// Convert size to numeric value - this fixes the SVG attribute errors
const numericSize = typeof size === 'number' ? size : (sizeMap[size as keyof typeof sizeMap] || 20);
const sizeClass = typeof size === 'string' ? `icon-${size}` : '';
---

<svg 
  class={`icon ${sizeClass} ${className}`}
  width={numericSize}
  height={numericSize}
  aria-label={ariaLabel}
  aria-hidden={ariaHidden}
  role={ariaLabel ? 'img' : 'presentation'}
>
  <use href={`/sprites/icons.svg#${name}`}></use>
</svg>

<style>
.icon {
  display: inline-block;
  vertical-align: middle;
  fill: currentColor;
  flex-shrink: 0;
  
  /* Performance optimizations */
  will-change: transform;
  backface-visibility: hidden;
  
  transition: transform 0.2s ease, opacity 0.2s ease;
}

/* Standardized size classes with consistent proportions */
.icon-xs { width: 0.75rem; height: 0.75rem; }
.icon-sm { width: 1rem; height: 1rem; }
.icon-md { width: 1.25rem; height: 1.25rem; }
.icon-lg { width: 1.5rem; height: 1.5rem; }
.icon-xl { width: 2rem; height: 2rem; }
.icon-2xl { width: 2.5rem; height: 2.5rem; }
.icon-3xl { width: 3rem; height: 3rem; }

/* Responsive icon scaling for better mobile experience */
@media (max-width: 640px) {
  .icon-xs { width: 0.75rem; height: 0.75rem; }
  .icon-sm { width: 0.875rem; height: 0.875rem; }
  .icon-md { width: 1rem; height: 1rem; }
  .icon-lg { width: 1.25rem; height: 1.25rem; }
  .icon-xl { width: 1.75rem; height: 1.75rem; }
  .icon-2xl { width: 2rem; height: 2rem; }
  .icon-3xl { width: 2.5rem; height: 2.5rem; }
}

@media (min-width: 641px) and (max-width: 1024px) {
  .icon-xs { width: 0.75rem; height: 0.75rem; }
  .icon-sm { width: 1rem; height: 1rem; }
  .icon-md { width: 1.125rem; height: 1.125rem; }
  .icon-lg { width: 1.375rem; height: 1.375rem; }
  .icon-xl { width: 1.875rem; height: 1.875rem; }
  .icon-2xl { width: 2.25rem; height: 2.25rem; }
  .icon-3xl { width: 2.75rem; height: 2.75rem; }
}

@media (min-width: 1025px) {
  .icon-xs { width: 0.75rem; height: 0.75rem; }
  .icon-sm { width: 1rem; height: 1rem; }
  .icon-md { width: 1.25rem; height: 1.25rem; }
  .icon-lg { width: 1.5rem; height: 1.5rem; }
  .icon-xl { width: 2rem; height: 2rem; }
  .icon-2xl { width: 2.5rem; height: 2.5rem; }
  .icon-3xl { width: 3rem; height: 3rem; }
}

/* Hover effects for interactive icons */
.icon-interactive:hover {
  transform: scale(1.1);
}

/* Focus states for accessibility */
.icon:focus {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
  border-radius: 2px;
}

/* Contextual styling */
.icon-interactive {
  cursor: pointer;
}

.icon-decorative {
  pointer-events: none;
}

/* Container alignment helpers */
.icon-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.icon-container-square {
  aspect-ratio: 1;
  border-radius: 0.5rem;
}

.icon-container-circle {
  aspect-ratio: 1;
  border-radius: 50%;
}

/* Dark mode optimizations */
@media (prefers-color-scheme: dark) {
  .icon {
    filter: brightness(1.1);
  }
}

[data-theme="dark"] .icon {
  filter: brightness(1.1);
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .icon {
    transition: none;
  }
  
  .icon-interactive:hover {
    transform: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .icon {
    filter: contrast(1.2);
  }
}
</style>