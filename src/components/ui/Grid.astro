---
export interface Props {
  container?: boolean;
  item?: boolean;
  spacing?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 8 | 10 | 12;
  xs?: number | 'auto' | true;
  sm?: number | 'auto' | true;
  md?: number | 'auto' | true;
  lg?: number | 'auto' | true;
  xl?: number | 'auto' | true;
  '2xl'?: number | 'auto' | true;
  direction?: 'row' | 'row-reverse' | 'column' | 'column-reverse';
  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse';
  justifyContent?: 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';
  alignItems?: 'start' | 'end' | 'center' | 'baseline' | 'stretch';
  alignContent?: 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly' | 'stretch';
  gap?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 8 | 10 | 12;
  rowGap?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 8 | 10 | 12;
  columnGap?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 8 | 10 | 12;
  class?: string;
}

const {
  container = false,
  item = false,
  spacing = 0,
  xs,
  sm,
  md,
  lg,
  xl,
  '2xl': xxl,
  direction = 'row',
  wrap = 'wrap',
  justifyContent,
  alignItems,
  alignContent,
  gap,
  rowGap,
  columnGap,
  class: className = '',
  ...rest
} = Astro.props;

// Base classes
const baseClasses = ['grid-component'];

// Container classes
const containerClasses = container ? [
  'flex',
  'flex-wrap',
  `-m-${spacing}` // Negative margin to offset item padding
] : [];

// Item classes
const itemClasses = item ? [
  'flex-shrink-0',
  `p-${spacing}` // Padding for spacing
] : [];

// Direction classes
const directionClasses = {
  'row': 'flex-row',
  'row-reverse': 'flex-row-reverse',
  'column': 'flex-col md:flex-row',
  'column-reverse': 'flex-col md:flex-row-reverse'
};

// Wrap classes
const wrapClasses = {
  'nowrap': 'flex-nowrap',
  'wrap': 'flex-wrap',
  'wrap-reverse': 'flex-wrap-reverse'
};

// Justify content classes
const justifyClasses = {
  'start': 'justify-start',
  'end': 'justify-end',
  'center': 'justify-center',
  'between': 'justify-between',
  'around': 'justify-around',
  'evenly': 'justify-evenly'
};

// Align items classes
const alignItemsClasses = {
  'start': 'items-start',
  'end': 'items-end',
  'center': 'items-center',
  'baseline': 'items-baseline',
  'stretch': 'items-stretch'
};

// Align content classes
const alignContentClasses = {
  'start': 'content-start',
  'end': 'content-end',
  'center': 'content-center',
  'between': 'content-between',
  'around': 'content-around',
  'evenly': 'content-evenly',
  'stretch': 'content-stretch'
};

// Gap classes
const gapClasses = {
  0: 'gap-0',
  1: 'gap-1',
  2: 'gap-2',
  3: 'gap-3',
  4: 'gap-4 md:gap-6 lg:gap-8',
  5: 'gap-5',
  6: 'gap-6',
  8: 'gap-8',
  10: 'gap-10',
  12: 'gap-12'
};

// Row gap classes
const rowGapClasses = {
  0: 'gap-y-0',
  1: 'gap-y-1',
  2: 'gap-y-2',
  3: 'gap-y-3',
  4: 'gap-y-4',
  5: 'gap-y-5',
  6: 'gap-y-6',
  8: 'gap-y-8',
  10: 'gap-y-10',
  12: 'gap-y-12'
};

// Column gap classes
const columnGapClasses = {
  0: 'gap-x-0',
  1: 'gap-x-1',
  2: 'gap-x-2',
  3: 'gap-x-3',
  4: 'gap-x-4',
  5: 'gap-x-5',
  6: 'gap-x-6',
  8: 'gap-x-8',
  10: 'gap-x-10',
  12: 'gap-x-12'
};

// Generate responsive width classes
const generateWidthClasses = (breakpoint: string, value: number | 'auto' | true | undefined) => {
  if (value === undefined) return [];
  
  const prefix = breakpoint === 'xs' ? '' : `${breakpoint}:`;
  
  if (value === true) {
    return [`${prefix}flex-1`];
  }
  
  if (value === 'auto') {
    return [`${prefix}flex-auto`];
  }
  
  if (typeof value === 'number') {
    if (value >= 1 && value <= 12) {
      const percentage = Math.round((value / 12) * 100);
      return [`${prefix}w-${percentage === 100 ? 'full' : `${percentage}/12`}`];
    }
  }
  
  return [];
};

// Responsive width classes
const responsiveClasses = [
  ...generateWidthClasses('xs', xs),
  ...generateWidthClasses('sm', sm),
  ...generateWidthClasses('md', md),
  ...generateWidthClasses('lg', lg),
  ...generateWidthClasses('xl', xl),
  ...generateWidthClasses('2xl', xxl)
];

// Layout classes
const layoutClasses = [
  container ? directionClasses[direction] : '',
  container ? wrapClasses[wrap] : '',
  justifyContent ? justifyClasses[justifyContent] : '',
  alignItems ? alignItemsClasses[alignItems] : '',
  alignContent ? alignContentClasses[alignContent] : '',
  gap !== undefined ? gapClasses[gap] : '',
  rowGap !== undefined ? rowGapClasses[rowGap] : '',
  columnGap !== undefined ? columnGapClasses[columnGap] : ''
].filter(Boolean);

// Combine all classes
const allClasses = [
  ...baseClasses,
  ...containerClasses,
  ...itemClasses,
  ...layoutClasses,
  ...responsiveClasses,
  className
].filter(Boolean).join(' ');

// Component props
const componentProps = {
  class: allClasses,
  ...rest
};
---

<div {...componentProps}>
  <slot />
</div>

<style>
  .grid-component {
    box-sizing: border-box;
  }
  
  /* Custom width utilities for precise grid system */
  .w-8\/12 { width: 66.666667%; }
  .w-16\/12 { width: 133.333333%; }
  .w-25\/12 { width: 208.333333%; }
  .w-33\/12 { width: 275%; }
  .w-41\/12 { width: 341.666667%; }
  .w-50\/12 { width: 416.666667%; }
  .w-58\/12 { width: 483.333333%; }
  .w-66\/12 { width: 550%; }
  .w-75\/12 { width: 625%; }
  .w-83\/12 { width: 691.666667%; }
  .w-91\/12 { width: 758.333333%; }
  
  /* Responsive width utilities */
  @media (min-width: 640px) {
    .sm\:w-8\/12 { width: 66.666667%; }
    .sm\:w-16\/12 { width: 133.333333%; }
    .sm\:w-25\/12 { width: 208.333333%; }
    .sm\:w-33\/12 { width: 275%; }
    .sm\:w-41\/12 { width: 341.666667%; }
    .sm\:w-50\/12 { width: 416.666667%; }
    .sm\:w-58\/12 { width: 483.333333%; }
    .sm\:w-66\/12 { width: 550%; }
    .sm\:w-75\/12 { width: 625%; }
    .sm\:w-83\/12 { width: 691.666667%; }
    .sm\:w-91\/12 { width: 758.333333%; }
  }
  
  @media (min-width: var(--breakpoint-md)) {
    .md\:w-8\/12 { width: 66.666667%; }
    .md\:w-16\/12 { width: 133.333333%; }
    .md\:w-25\/12 { width: 208.333333%; }
    .md\:w-33\/12 { width: 275%; }
    .md\:w-41\/12 { width: 341.666667%; }
    .md\:w-50\/12 { width: 416.666667%; }
    .md\:w-58\/12 { width: 483.333333%; }
    .md\:w-66\/12 { width: 550%; }
    .md\:w-75\/12 { width: 625%; }
    .md\:w-83\/12 { width: 691.666667%; }
    .md\:w-91\/12 { width: 758.333333%; }
  }
  
  @media (min-width: 1024px) {
    .lg\:w-8\/12 { width: 66.666667%; }
    .lg\:w-16\/12 { width: 133.333333%; }
    .lg\:w-25\/12 { width: 208.333333%; }
    .lg\:w-33\/12 { width: 275%; }
    .lg\:w-41\/12 { width: 341.666667%; }
    .lg\:w-50\/12 { width: 416.666667%; }
    .lg\:w-58\/12 { width: 483.333333%; }
    .lg\:w-66\/12 { width: 550%; }
    .lg\:w-75\/12 { width: 625%; }
    .lg\:w-83\/12 { width: 691.666667%; }
    .lg\:w-91\/12 { width: 758.333333%; }
  }
  
  @media (min-width: 1280px) {
    .xl\:w-8\/12 { width: 66.666667%; }
    .xl\:w-16\/12 { width: 133.333333%; }
    .xl\:w-25\/12 { width: 208.333333%; }
    .xl\:w-33\/12 { width: 275%; }
    .xl\:w-41\/12 { width: 341.666667%; }
    .xl\:w-50\/12 { width: 416.666667%; }
    .xl\:w-58\/12 { width: 483.333333%; }
    .xl\:w-66\/12 { width: 550%; }
    .xl\:w-75\/12 { width: 625%; }
    .xl\:w-83\/12 { width: 691.666667%; }
    .xl\:w-91\/12 { width: 758.333333%; }
  }
  
  @media (min-width: 1536px) {
    .\32 xl\:w-8\/12 { width: 66.666667%; }
    .\32 xl\:w-16\/12 { width: 133.333333%; }
    .\32 xl\:w-25\/12 { width: 208.333333%; }
    .\32 xl\:w-33\/12 { width: 275%; }
    .\32 xl\:w-41\/12 { width: 341.666667%; }
    .\32 xl\:w-50\/12 { width: 416.666667%; }
    .\32 xl\:w-58\/12 { width: 483.333333%; }
    .\32 xl\:w-66\/12 { width: 550%; }
    .\32 xl\:w-75\/12 { width: 625%; }
    .\32 xl\:w-83\/12 { width: 691.666667%; }
    .\32 xl\:w-91\/12 { width: 758.333333%; }
  }
  
  /* Debug mode for development */
  .grid-debug .grid-component {
    outline: 1px solid hsl(var(--error) / 0.3);
    background-color: hsl(var(--error) / 0.05);
  }
  
  .grid-debug .grid-component[class*="container"] {
    outline-color: hsl(var(--success) / 0.5);
    background-color: hsl(var(--success) / 0.05);
  }
  
  .grid-debug .grid-component[class*="item"] {
    outline-color: hsl(var(--brand-accent) / 0.5);
    background-color: hsl(var(--brand-accent) / 0.05);
  }
</style>
