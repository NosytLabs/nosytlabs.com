---
interface Props {
  title: string;
  description: string;
  features?: string[];
  price?: string;
  icon?: string;
  href?: string;
}

const {
  title,
  description,
  features = [],
  price,
  icon = 'code',
  href
} = Astro.props;

// Enforce limits
const truncatedDescription = description.length > 150 
  ? description.substring(0, 147) + '...' 
  : description;
const limitedFeatures = features.slice(0, 4);

const iconMap: Record<string, string> = {
  'web-development': 'M12 14l9-5-9-5-9 5 9 5z M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z',
  'mobile-development': 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z',
  'ai-integration': 'M9 2a1 1 0 000 2h2a1 1 0 100-2H9z M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z',
  'code': 'M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z'
};

const iconPath = iconMap[icon] || iconMap['code'];
---

<div class="card-base group focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2 h-full flex flex-col">
  <!-- Icon with gradient background -->
  <div class="flex items-center justify-center w-12 h-12 rounded-lg bg-gradient-to-br from-primary/10 to-accent/10 border border-primary/20 mb-4 group-hover:scale-110 transition-transform duration-300">
    <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
      <path d={iconPath}></path>
    </svg>
  </div>
  
  <!-- Title -->
  <h3 class="text-xl font-semibold mb-3 group-hover:text-primary transition-colors">{title}</h3>
  
  <!-- Description -->
  <p class="text-muted-foreground leading-relaxed mb-4 flex-grow">{truncatedDescription}</p>
  
  <!-- Features List -->
  {limitedFeatures.length > 0 && (
    <ul class="space-y-2 mb-6">
      {limitedFeatures.map((feature) => (
        <li class="flex items-start gap-2 text-sm">
          <svg class="w-5 h-5 text-success flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <span class="text-foreground">{feature}</span>
        </li>
      ))}
    </ul>
  )}
  
  <!-- Price -->
  {price && (
    <div class="mt-auto pt-4 border-t border-border/50">
      <div class="flex justify-between items-center">
        <span class="text-sm text-muted-foreground">Starting from</span>
        <span class="text-2xl font-bold text-primary">{price}</span>
      </div>
    </div>
  )}
  
  <!-- CTA Button -->
  {href && (
    <a 
      href={href}
      class="mt-4 w-full inline-flex items-center justify-center px-4 py-2 rounded-lg bg-primary/10 hover:bg-primary hover:text-primary-foreground border border-primary/30 hover:border-primary text-primary font-medium transition-all duration-300 group-hover:shadow-lg"
    >
      Learn More
      <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </a>
  )}
</div>
