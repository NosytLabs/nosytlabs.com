---
interface Props {
  name: string;
  company: string;
  role: string;
  content: string;
  rating?: number;
  className?: string;
}

const {
  name,
  company,
  role,
  content,
  rating = 5,
  className = "",
} = Astro.props;
---

<div class={`card-base ${className}`}>
  <!-- Star Rating -->
  <div class="flex gap-1 mb-4 text-warning">
    {[...Array(rating)].map(() => (
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
      </svg>
    ))}
  </div>

  <!-- Quote -->
  <p class="text-foreground mb-6 italic leading-relaxed">
    "{content}"
  </p>

  <!-- Author Info -->
  <div class="flex items-center gap-3 pt-4 border-t border-border">
    <div class="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center font-bold text-primary flex-shrink-0">
      {name.split(' ').map(n => n[0]).join('')}
    </div>
    <div>
      <div class="font-semibold text-foreground">{name}</div>
      <div class="text-sm text-muted-foreground">{role}, {company}</div>
    </div>
  </div>
</div>
