---
import { createInternalLink } from '@/lib/constants';
export interface Props {
  href?: string;
  text?: string;
  variant?: 'primary' | 'secondary' | 'tertiary' | 'outline' | 'ghost' | 'destructive' | 'magic' | 'gradient' | 'white';
  size?: 'sm' | 'md' | 'lg';
  icon?: string;
  class?: string;
  className?: string;
  'aria-label'?: string;
  'aria-describedby'?: string;
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
  external?: boolean;
  [key: string]: unknown;
}

const { 
  href, 
  text, 
  variant = 'primary', 
  size = 'md', 
  icon, 
  class: className,
  className: classNameProp,
  'aria-label': ariaLabel,
  'aria-describedby': ariaDescribedby,
  disabled = false,
  type = 'button',
  external = false,
  ...rest 
} = Astro.props;

// Normalize internal links to respect Astro's BASE_URL
const normalizedHref = (typeof href === 'string' && href.startsWith('/'))
  ? createInternalLink(href)
  : href;

// Use className prop if provided, otherwise use class
const finalClassName = classNameProp || className;

// Enhanced button hierarchy with three main variants
const styles = {
  variants: {
    // Primary CTA - Gradient background (primary to accent)
    primary: 'bg-gradient-to-br from-primary to-accent text-primary-foreground font-semibold shadow-[0_2px_8px_hsl(var(--primary)/0.2)] hover:shadow-[0_4px_12px_hsl(var(--primary)/0.3)] hover:-translate-y-0.5',
    // Secondary Action - Outline with border
    secondary: 'border border-border bg-transparent text-foreground hover:border-primary/50 hover:bg-primary/5',
    // Tertiary Action - Ghost with transparent background
    tertiary: 'bg-transparent text-muted-foreground hover:text-foreground hover:bg-muted',
    // Legacy variants for backward compatibility
    outline: 'border border-border bg-transparent text-foreground hover:border-primary/50 hover:bg-primary/5',
    ghost: 'bg-transparent text-muted-foreground hover:text-foreground hover:bg-muted',
    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-sm hover:shadow-lg',
    magic: 'button-magic relative overflow-hidden shadow-lg hover:shadow-xl active:shadow-md',
    gradient: 'bg-gradient-to-br from-primary to-accent text-primary-foreground font-semibold shadow-[0_2px_8px_hsl(var(--primary)/0.2)] hover:shadow-[0_4px_12px_hsl(var(--primary)/0.3)] hover:-translate-y-0.5',
    white: 'bg-white text-foreground border border-border hover:bg-muted/50 shadow-sm hover:shadow-md'
  },
  sizes: {
    // Small - Tertiary actions (0.5rem/1rem padding, 0.875rem font)
    sm: 'px-4 py-2 text-sm min-h-[36px]',
    // Medium - Standard actions (0.75rem/1.5rem padding, 1rem font)
    md: 'px-6 py-3 text-base min-h-[44px]',
    // Large - Primary CTAs (0.75rem/1.5rem padding, 1rem font)
    lg: 'px-6 py-3 text-base min-h-[44px]'
  }
} as const;

// Build final classes
const variantClass = styles.variants[variant] || styles.variants.primary;
const sizeClass = styles.sizes[size] || '';
const classes = `${sizeClass} ${variantClass} ${finalClassName || ''}`.trim();
---

<style>
  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }
  
  @keyframes gradient-x {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  
  .animate-gradient-x {
    background-size: 200% 200%;
    animation: gradient-x 3s ease infinite;
  }
</style>

<!-- Optimized Button Component -->
{normalizedHref ? (
  <a
    href={normalizedHref}
    class={`
      inline-flex items-center justify-center gap-2 rounded-lg font-medium
      transition-all duration-200 ease-out
      focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2
      disabled:opacity-50 disabled:cursor-not-allowed
      ${classes}
    `}
    {...(external && { target: '_blank', rel: 'noopener noreferrer' })}
    {...(ariaLabel && { 'aria-label': ariaLabel })}
    {...(ariaDescribedby && { 'aria-describedby': ariaDescribedby })}
    {...(disabled && { 'aria-disabled': 'true' })}
    {...rest}
  >
    {icon && <span class={`${icon} mr-2 transition-transform duration-200 group-hover:scale-110`} aria-hidden="true"></span>}
    {text}
    <slot />
  </a>
) : (
  <button
    type={type}
    class={`
      inline-flex items-center justify-center gap-2 rounded-lg font-medium
      transition-all duration-200 ease-out
      focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2
      disabled:opacity-50 disabled:cursor-not-allowed
      ${classes}
    `}
    {...(ariaLabel && { 'aria-label': ariaLabel })}
    {...(ariaDescribedby && { 'aria-describedby': ariaDescribedby })}
    disabled={disabled}
    {...rest}
  >
    {icon && <span class={`${icon} mr-2 transition-transform duration-200 group-hover:scale-110`} aria-hidden="true"></span>}
    {text}
    <slot />
  </button>
)}
