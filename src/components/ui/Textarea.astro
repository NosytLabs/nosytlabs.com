---
/**
 * Astro Textarea Component
 * 
 * A wrapper around the React Textarea component that enables seamless integration
 * in Astro files while maintaining all React Textarea functionality.
 */

import { Textarea } from './textarea';

export interface Props {
  variant?: 'default' | 'error' | 'success';
  size?: 'sm' | 'default' | 'lg' | 'xl';
  label?: string;
  placeholder?: string;
  helperText?: string;
  error?: string;
  success?: string;
  disabled?: boolean;
  required?: boolean;
  id?: string;
  name?: string;
  value?: string;
  rows?: number;
  cols?: number;
  maxLength?: number;
  showCharCount?: boolean;
  class?: string;
  // Accessibility props
  'aria-label'?: string;
  'aria-describedby'?: string;
  'aria-required'?: boolean;
  'aria-invalid'?: boolean;
  // Form props
  form?: string;
  // Event handlers (will be passed through)
  [key: string]: any;
}

const {
  variant = 'default',
  size = 'default',
  label,
  placeholder,
  helperText,
  error,
  success,
  disabled = false,
  required = false,
  id,
  name,
  value,
  rows = 4,
  cols,
  maxLength,
  showCharCount = false,
  class: className,
  'aria-label': ariaLabel,
  'aria-describedby': ariaDescribedBy,
  'aria-required': ariaRequired,
  'aria-invalid': ariaInvalid,
  form,
  ...rest
} = Astro.props;
---

<Textarea
  client:load
  variant={variant}
  size={size}
  label={label}
  placeholder={placeholder}
  helperText={helperText}
  error={error}
  success={success}
  disabled={disabled}
  required={required}
  id={id}
  name={name}
  value={value}
  rows={rows}
  cols={cols}
  maxLength={maxLength}
  showCharCount={showCharCount}
  className={className}
  aria-label={ariaLabel}
  aria-describedby={ariaDescribedBy}
  aria-required={ariaRequired}
  aria-invalid={ariaInvalid}
  form={form}
  {...rest}
>
  <slot />
  <div slot="fallback">
    <textarea class={className} disabled></textarea>
  </div>
</Textarea>