---
// PDFViewer.astro
// Component for embedding PDF documents with fallback

export interface Props {
  pdfUrl: string;
  title?: string;
  height?: string;
  width?: string;
  showControls?: boolean;
  showDownload?: boolean;
  fallbackText?: string;
}

const {
  pdfUrl,
  title = "",
  height = "500px",
  width = "100%",
  showControls = true,
  showDownload = true,
  fallbackText = "PDF document could not be displayed. Please download to view."
} = Astro.props;

// Generate a unique ID for this embed
const embedId = `pdf-embed-${Math.random().toString(36).substring(2, 9)}`;
---

<div class="pdf-viewer-container" id={embedId}>
  <!-- PDF Embed -->
  <div class="pdf-embed-wrapper" style={`height: ${height}; width: ${width};`}>
    <object
      data={pdfUrl}
      type="application/pdf"
      width="100%"
      height="100%"
      class="pdf-object"
      aria-label={title || "PDF Document"}
    >
      <!-- Fallback for browsers that don't support PDF embedding -->
      <div class="pdf-fallback">
        <div class="pdf-fallback-content">
          <svg xmlns="http://www.w3.org/2000/svg" class="pdf-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
            <polyline points="14 2 14 8 20 8"></polyline>
            <line x1="16" y1="13" x2="8" y2="13"></line>
            <line x1="16" y1="17" x2="8" y2="17"></line>
            <polyline points="10 9 9 9 8 9"></polyline>
          </svg>
          <p class="pdf-fallback-message">{fallbackText}</p>
          <a
            href={pdfUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="pdf-download-button"
            download
          >
            Download PDF
          </a>
        </div>
      </div>
    </object>
  </div>
  
  <!-- Controls (optional) -->
  {showControls && (
    <div class="pdf-controls">
      {showDownload && (
        <a
          href={pdfUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="pdf-control-button"
          download
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="pdf-control-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
            <polyline points="7 10 12 15 17 10"></polyline>
            <line x1="12" y1="15" x2="12" y2="3"></line>
          </svg>
          <span>Download</span>
        </a>
      )}
      <button
        class="pdf-control-button pdf-fullscreen-button"
        aria-label="View in fullscreen"
        data-pdf-url={pdfUrl}
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="pdf-control-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path>
        </svg>
        <span>Fullscreen</span>
      </button>
    </div>
  )}
</div>

<style>
  .pdf-viewer-container {
    display: flex;
    flex-direction: column;
    width: 100%;
    border-radius: 0.5rem;
    overflow: hidden;
    background-color: #f8f9fa;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .pdf-embed-wrapper {
    position: relative;
    width: 100%;
    background-color: #e9ecef;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    overflow: hidden;
  }

  .pdf-object {
    display: block;
    border: none;
    background-color: white;
  }

  .pdf-fallback {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fa;
    padding: 2rem;
  }

  .pdf-fallback-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    max-width: 24rem;
  }

  .pdf-icon {
    width: 4rem;
    height: 4rem;
    color: #6c757d;
    margin-bottom: 1rem;
  }

  .pdf-fallback-message {
    margin-bottom: 1.5rem;
    color: #495057;
    font-size: 1rem;
    line-height: 1.5;
  }

  .pdf-download-button {
    display: inline-block;
    background-color: #4f46e5;
    color: white;
    font-weight: 500;
    padding: 0.75rem 1.5rem;
    border-radius: 0.375rem;
    text-decoration: none;
    transition: background-color 0.2s ease;
  }

  .pdf-download-button:hover {
    background-color: #4338ca;
  }

  .pdf-controls {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
    padding: 0.75rem;
    background-color: #f8f9fa;
    border-top: 1px solid #dee2e6;
  }

  .pdf-control-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background-color: white;
    color: #4b5563;
    font-size: 0.875rem;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .pdf-control-button:hover {
    background-color: #f3f4f6;
    color: #1f2937;
    border-color: #9ca3af;
  }

  .pdf-control-icon {
    width: 1.25rem;
    height: 1.25rem;
  }

  @media (max-width: 640px) {
    .pdf-controls {
      flex-direction: column;
      align-items: stretch;
    }
    
    .pdf-control-button {
      justify-content: center;
    }
  }
</style>

<script>
  // Handle fullscreen button clicks
  document.addEventListener('DOMContentLoaded', () => {
    const fullscreenButtons = document.querySelectorAll('.pdf-fullscreen-button');
    
    fullscreenButtons.forEach(button => {
      button.addEventListener('click', () => {
        const pdfUrl = button.getAttribute('data-pdf-url');
        if (pdfUrl) {
          window.open(pdfUrl, '_blank');
        }
      });
    });
  });
</script>
