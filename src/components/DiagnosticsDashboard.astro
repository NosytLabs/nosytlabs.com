---
// Diagnostics Dashboard Component
// Provides comprehensive site health monitoring and performance insights

export interface DiagnosticData {
  systemHealth: {
    status: 'healthy' | 'warning' | 'critical';
    uptime: string;
    lastCheck: string;
    issues: string[];
  };
  performance: {
    loadTime: number;
    coreWebVitals: {
      lcp: number;
      fid: number;
      cls: number;
    };
    lighthouse: {
      performance: number;
      accessibility: number;
      bestPractices: number;
      seo: number;
    };
  };
  network: {
    status: 'online' | 'offline';
    speed: string;
    latency: number;
  };
  resources: {
    totalSize: string;
    jsSize: string;
    cssSize: string;
    imageSize: string;
    cacheHitRate: number;
  };
}

// Mock diagnostic data for demonstration
const diagnosticData: DiagnosticData = {
  systemHealth: {
    status: 'healthy',
    uptime: '99.9%',
    lastCheck: new Date().toISOString(),
    issues: []
  },
  performance: {
    loadTime: 1.2,
    coreWebVitals: {
      lcp: 2.1,
      fid: 45,
      cls: 0.05
    },
    lighthouse: {
      performance: 95,
      accessibility: 98,
      bestPractices: 92,
      seo: 100
    }
  },
  network: {
    status: 'online',
    speed: 'Fast',
    latency: 23
  },
  resources: {
    totalSize: '2.1 MB',
    jsSize: '450 KB',
    cssSize: '120 KB',
    imageSize: '1.5 MB',
    cacheHitRate: 87
  }
};
---

<div class="diagnostics-dashboard">
  <div class="dashboard-header">
    <h1>Site Diagnostics Dashboard</h1>
    <p>Real-time monitoring and performance insights</p>
  </div>

  <div class="dashboard-grid">
    <!-- System Health Card -->
    <div class="diagnostic-card">
      <div class="card-header">
        <h2>System Health</h2>
        <div class={`status-indicator status-${diagnosticData.systemHealth.status}`}>
          {diagnosticData.systemHealth.status}
        </div>
      </div>
      <div class="card-content">
        <div class="metric">
          <span class="metric-label">Uptime</span>
          <span class="metric-value">{diagnosticData.systemHealth.uptime}</span>
        </div>
        <div class="metric">
          <span class="metric-label">Last Check</span>
          <span class="metric-value">{new Date(diagnosticData.systemHealth.lastCheck).toLocaleTimeString()}</span>
        </div>
      </div>
    </div>

    <!-- Core Web Vitals Card -->
    <div class="diagnostic-card">
      <div class="card-header">
        <h2>Core Web Vitals</h2>
      </div>
      <div class="card-content">
        <div class="metric">
          <span class="metric-label">LCP (Largest Contentful Paint)</span>
          <span class="metric-value">{diagnosticData.performance.coreWebVitals.lcp}s</span>
        </div>
        <div class="metric">
          <span class="metric-label">FID (First Input Delay)</span>
          <span class="metric-value">{diagnosticData.performance.coreWebVitals.fid}ms</span>
        </div>
        <div class="metric">
          <span class="metric-label">CLS (Cumulative Layout Shift)</span>
          <span class="metric-value">{diagnosticData.performance.coreWebVitals.cls}</span>
        </div>
      </div>
    </div>

    <!-- Network Performance Card -->
    <div class="diagnostic-card">
      <div class="card-header">
        <h2>Network Performance</h2>
        <div class={`status-indicator status-${diagnosticData.network.status === 'online' ? 'healthy' : 'critical'}`}>
          {diagnosticData.network.status}
        </div>
      </div>
      <div class="card-content">
        <div class="metric">
          <span class="metric-label">Connection Speed</span>
          <span class="metric-value">{diagnosticData.network.speed}</span>
        </div>
        <div class="metric">
          <span class="metric-label">Latency</span>
          <span class="metric-value">{diagnosticData.network.latency}ms</span>
        </div>
      </div>
    </div>

    <!-- Resource Analysis Card -->
    <div class="diagnostic-card">
      <div class="card-header">
        <h2>Resource Analysis</h2>
      </div>
      <div class="card-content">
        <div class="metric">
          <span class="metric-label">Total Size</span>
          <span class="metric-value">{diagnosticData.resources.totalSize}</span>
        </div>
        <div class="metric">
          <span class="metric-label">JavaScript</span>
          <span class="metric-value">{diagnosticData.resources.jsSize}</span>
        </div>
        <div class="metric">
          <span class="metric-label">CSS</span>
          <span class="metric-value">{diagnosticData.resources.cssSize}</span>
        </div>
        <div class="metric">
          <span class="metric-label">Images</span>
          <span class="metric-value">{diagnosticData.resources.imageSize}</span>
        </div>
        <div class="metric">
          <span class="metric-label">Cache Hit Rate</span>
          <span class="metric-value">{diagnosticData.resources.cacheHitRate}%</span>
        </div>
      </div>
    </div>

    <!-- Lighthouse Scores Card -->
    <div class="diagnostic-card lighthouse-card">
      <div class="card-header">
        <h2>Lighthouse Scores</h2>
      </div>
      <div class="card-content">
        <div class="lighthouse-scores">
          <div class="lighthouse-score">
            <div class="score-circle" data-score="{diagnosticData.performance.lighthouse.performance}">
              <span class="score-value">{diagnosticData.performance.lighthouse.performance}</span>
            </div>
            <span class="score-label">Performance</span>
          </div>
          <div class="lighthouse-score">
            <div class="score-circle" data-score="{diagnosticData.performance.lighthouse.accessibility}">
              <span class="score-value">{diagnosticData.performance.lighthouse.accessibility}</span>
            </div>
            <span class="score-label">Accessibility</span>
          </div>
          <div class="lighthouse-score">
            <div class="score-circle" data-score="{diagnosticData.performance.lighthouse.bestPractices}">
              <span class="score-value">{diagnosticData.performance.lighthouse.bestPractices}</span>
            </div>
            <span class="score-label">Best Practices</span>
          </div>
          <div class="lighthouse-score">
            <div class="score-circle" data-score="{diagnosticData.performance.lighthouse.seo}">
              <span class="score-value">{diagnosticData.performance.lighthouse.seo}</span>
            </div>
            <span class="score-label">SEO</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Performance Recommendations Card -->
    <div class="diagnostic-card recommendations-card">
      <div class="card-header">
        <h2>Performance Recommendations</h2>
      </div>
      <div class="card-content">
        <div class="recommendations">
          <div class="recommendation">
            <div class="recommendation-icon">‚ö°</div>
            <div class="recommendation-content">
              <h3>Optimize Images</h3>
              <p>Consider using WebP format and lazy loading for better performance.</p>
            </div>
          </div>
          <div class="recommendation">
            <div class="recommendation-icon">üóúÔ∏è</div>
            <div class="recommendation-content">
              <h3>Enable Compression</h3>
              <p>Gzip compression can reduce file sizes by up to 70%.</p>
            </div>
          </div>
          <div class="recommendation">
            <div class="recommendation-icon">üöÄ</div>
            <div class="recommendation-content">
              <h3>Use CDN</h3>
              <p>Content Delivery Network can improve loading times globally.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .diagnostics-dashboard {
    padding: var(--spacing-xl);
    background: var(--surface-primary);
    min-height: 100vh;
  }

  .dashboard-header {
    text-align: center;
    margin-bottom: var(--spacing-2xl);
  }

  .dashboard-header h1 {
    font-size: var(--text-4xl);
    font-weight: var(--font-bold);
    color: var(--text-primary);
    margin-bottom: var(--spacing-sm);
  }

  .dashboard-header p {
    font-size: var(--text-lg);
    color: var(--text-secondary);
  }

  .dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--spacing-xl);
    max-width: 1400px;
    margin: 0 auto;
  }

  .diagnostic-card {
    background: var(--surface-elevated);
    border: 1px solid var(--border-primary);
    border-radius: var(--radius-xl);
    padding: var(--spacing-xl);
    box-shadow: var(--shadow-lg);
    transition: all var(--transition-base);
  }

  .diagnostic-card:hover {
    box-shadow: var(--shadow-xl);
    transform: translateY(-2px);
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-lg);
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--border-primary);
  }

  .card-header h2 {
    font-size: var(--text-xl);
    font-weight: var(--font-semibold);
    color: var(--text-primary);
  }

  .status-indicator {
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--radius-md);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    text-transform: capitalize;
  }

  .status-healthy {
    background: var(--success-bg);
    color: var(--success);
  }

  .status-warning {
    background: var(--warning-bg);
    color: var(--warning);
  }

  .status-critical {
    background: var(--error-bg);
    color: var(--error);
  }

  .card-content {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }

  .metric {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-sm) 0;
  }

  .metric-label {
    font-size: var(--text-sm);
    color: var(--text-secondary);
    font-weight: var(--font-medium);
  }

  .metric-value {
    font-size: var(--text-base);
    color: var(--text-primary);
    font-weight: var(--font-semibold);
  }

  .lighthouse-scores {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-lg);
  }

  .lighthouse-score {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .score-circle {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: conic-gradient(var(--success) 0deg, var(--success) calc(var(--score, 0) * 3.6deg), var(--border-primary) calc(var(--score, 0) * 3.6deg), var(--border-primary) 360deg);
    position: relative;
  }

  .score-circle::before {
    content: '';
    position: absolute;
    width: 45px;
    height: 45px;
    border-radius: 50%;
    background: var(--surface-elevated);
  }

  .score-value {
    font-size: var(--text-lg);
    font-weight: var(--font-bold);
    color: var(--text-primary);
    z-index: 1;
  }

  .score-label {
    font-size: var(--text-sm);
    color: var(--text-secondary);
    text-align: center;
  }

  .recommendations {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
  }

  .recommendation {
    display: flex;
    gap: var(--spacing-md);
    align-items: flex-start;
  }

  .recommendation-icon {
    font-size: var(--text-2xl);
    flex-shrink: 0;
  }

  .recommendation-content h3 {
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    color: var(--text-primary);
    margin-bottom: var(--spacing-xs);
  }

  .recommendation-content p {
    font-size: var(--text-sm);
    color: var(--text-secondary);
    line-height: var(--leading-relaxed);
  }

  .lighthouse-card {
    grid-column: span 2;
  }

  .recommendations-card {
    grid-column: span 2;
  }

  @media (max-width: 768px) {
    .dashboard-grid {
      grid-template-columns: 1fr;
    }

    .lighthouse-card,
    .recommendations-card {
      grid-column: span 1;
    }

    .lighthouse-scores {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 480px) {
    .diagnostics-dashboard {
      padding: var(--spacing-lg);
    }

    .lighthouse-scores {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  // Initialize diagnostic dashboard functionality
  document.addEventListener('DOMContentLoaded', function() {
    // Animate score circles
    const scoreCircles = document.querySelectorAll('.score-circle');
    scoreCircles.forEach(circle => {
      const score = circle.getAttribute('data-score');
      if (score) {
        circle.style.setProperty('--score', score);
      }
    });

    // Auto-refresh data every 30 seconds
    setInterval(() => {
      // In a real implementation, this would fetch fresh data
      console.log('Refreshing diagnostic data...');
    }, 30000);

    // Add real-time performance monitoring
    if ('PerformanceObserver' in window) {
      const observer = new PerformanceObserver((list) => {
        for (const entry of list.getEntries()) {
          console.log(`Performance metric: ${entry.name} - ${entry.duration}ms`);
        }
      });
      
      observer.observe({ entryTypes: ['navigation', 'paint', 'measure'] });
    }
  });
</script>