/**
 * INTERACTIONS JavaScript Bundle - Auto-generated
 * Priority: high
 * Files: 2
 */

/* === public\scripts\enhanced-effects.js === */
/** * Enhanced Interactive Effects for NosytLabs * Modern animations and micro-interactions */ class EnhancedEffects{constructor(){this.isInitialized = false;this.observers = new Map();this.rafId = null;this.mousePosition ={x: 0, y: 0 };this.init();} init(){if (this.isInitialized) return;document.addEventListener('DOMContentLoaded', () =>{this.initScrollReveal();this.initMagneticElements();this.initParallaxElements();this.initEnhancedButtons();this.initTextEffects();this.initCardEffects();this.initLiquidMorphing();this.initQuantumParticles();this.initNeuralNetwork();this.trackMousePosition();this.isInitialized = true;console.log('âœ¨ Enhanced effects initialized');});} trackMousePosition(){document.addEventListener('mousemove', (e) =>{this.mousePosition.x = e.clientX;this.mousePosition.y = e.clientY;});} initScrollReveal(){const revealElements = document.querySelectorAll('.text-reveal, .stagger-reveal');if (revealElements.length === 0) return;const revealObserver = new IntersectionObserver((entries) =>{entries.forEach(entry =>{if (entry.isIntersecting){entry.target.classList.add('revealed');if (entry.target.classList.contains('stagger-reveal')){const siblings = Array.from(entry.target.parentElement.children);const index = siblings.indexOf(entry.target);entry.target.style.animationDelay = `${index * 0.1}s`;} } });},{threshold: 0.1, rootMargin: '0px 0px -50px 0px' });revealElements.forEach(el => revealObserver.observe(el));this.observers.set('reveal', revealObserver);} initMagneticElements(){const magneticElements = document.querySelectorAll('.magnetic-hover');magneticElements.forEach(element =>{element.addEventListener('mouseenter', (e) =>{this.startMagneticEffect(element);});element.addEventListener('mouseleave', (e) =>{this.stopMagneticEffect(element);});});} startMagneticEffect(element){const rect = element.getBoundingClientRect();const centerX = rect.left + rect.width / 2;const centerY = rect.top + rect.height / 2;const updateMagnetic = () =>{const deltaX = (this.mousePosition.x - centerX) * 0.1;const deltaY = (this.mousePosition.y - centerY) * 0.1;element.style.setProperty('--mouse-x', `${deltaX}px`);element.style.setProperty('--mouse-y', `${deltaY}px`);if (element.dataset.magnetic === 'active'){this.rafId = requestAnimationFrame(updateMagnetic);} };element.dataset.magnetic = 'active';updateMagnetic();} stopMagneticEffect(element){element.dataset.magnetic = 'inactive';element.style.setProperty('--mouse-x', '0px');element.style.setProperty('--mouse-y', '0px');if (this.rafId){cancelAnimationFrame(this.rafId);this.rafId = null;} } initParallaxElements(){const parallaxElements = document.querySelectorAll('.parallax-element');if (parallaxElements.length === 0) return;const parallaxObserver = new IntersectionObserver((entries) =>{entries.forEach(entry =>{if (entry.isIntersecting){this.startParallax(entry.target);} else{this.stopParallax(entry.target);} });});parallaxElements.forEach(el => parallaxObserver.observe(el));this.observers.set('parallax', parallaxObserver);} startParallax(element){const speed = parseFloat(element.dataset.speed || '0.5');const updateParallax = () =>{const scrolled = window.pageYOffset;const rate = scrolled * speed;element.style.transform = `translateY(${rate}px)`;if (element.dataset.parallax === 'active'){requestAnimationFrame(updateParallax);} };element.dataset.parallax = 'active';updateParallax();} stopParallax(element){element.dataset.parallax = 'inactive';} initEnhancedButtons(){const enhancedButtons = document.querySelectorAll('.btn-enhanced, .liquid-button');enhancedButtons.forEach(button =>{button.addEventListener('click', (e) =>{this.createRippleEffect(button, e);});});} createRippleEffect(element, event){const rect = element.getBoundingClientRect();const size = Math.max(rect.width, rect.height);const x = event.clientX - rect.left - size / 2;const y = event.clientY - rect.top - size / 2;const ripple = document.createElement('div');ripple.style.cssText = ` position: absolute;width: ${size}px;height: ${size}px;left: ${x}px;top: ${y}px;background: rgba(255, 255, 255, 0.3);border-radius: 50%;transform: scale(0);animation: ripple 0.6s ease-out;pointer-events: none;`;element.style.position = 'relative';element.style.overflow = 'hidden';element.appendChild(ripple);setTimeout(() =>{ripple.remove();}, 600);} initTextEffects(){const glitchTexts = document.querySelectorAll('.glitch-text');glitchTexts.forEach(text =>{text.dataset.text = text.textContent;});const neonTexts = document.querySelectorAll('.neon-text');neonTexts.forEach((text, index) =>{text.style.animationDelay = `${index * 0.2}s`;});} initCardEffects(){const enhancedCards = document.querySelectorAll('.card-enhanced');enhancedCards.forEach(card =>{card.addEventListener('mouseenter', (e) =>{this.startCardTilt(card, e);});card.addEventListener('mousemove', (e) =>{this.updateCardTilt(card, e);});card.addEventListener('mouseleave', (e) =>{this.stopCardTilt(card);});});} startCardTilt(card, event){card.dataset.tilt = 'active';} updateCardTilt(card, event){if (card.dataset.tilt !== 'active') return;const rect = card.getBoundingClientRect();const centerX = rect.left + rect.width / 2;const centerY = rect.top + rect.height / 2;const deltaX = (event.clientX - centerX) / (rect.width / 2);const deltaY = (event.clientY - centerY) / (rect.height / 2);const rotateX = deltaY * -10;const rotateY = deltaX * 10;card.style.transform = ` perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateY(-10px) `;} stopCardTilt(card){card.dataset.tilt = 'inactive';card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) translateY(0px)';} initLiquidMorphing(){const liquidButtons = document.querySelectorAll('.btn-liquid');liquidButtons.forEach(button =>{const blob = document.createElement('div');blob.className = 'liquid-blob';blob.style.cssText = ` position: absolute;width: 100px;height: 100px;background: radial-gradient(circle, rgba(124,58,237,0.3) 0%, transparent 70%);border-radius: 50%;pointer-events: none;transform: translate(-50px, -50px) scale(0);transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);z-index: -1;`;button.style.position = 'relative';button.appendChild(blob);button.addEventListener('mousemove', (e) =>{const rect = button.getBoundingClientRect();const x = e.clientX - rect.left;const y = e.clientY - rect.top;blob.style.transform = `translate(${x - 50}px, ${y - 50}px) scale(1.2)`;});button.addEventListener('mouseleave', () =>{blob.style.transform = 'translate(-50px, -50px) scale(0)';});});} initQuantumParticles(){const quantumContainers = document.querySelectorAll('.quantum-particles');quantumContainers.forEach(container =>{this.createQuantumField(container);});} createQuantumField(container){const particleCount = 50;for (let i = 0;i < particleCount;i++){const particle = document.createElement('div');particle.className = 'quantum-particle';particle.style.cssText = ` position: absolute;width: 2px;height: 2px;background: #7c3aed;border-radius: 50%;opacity: 0;animation: quantumFloat ${3 + Math.random() * 4}s infinite ease-in-out;animation-delay: ${Math.random() * 2}s;left: ${Math.random() * 100}%;top: ${Math.random() * 100}%;`;container.appendChild(particle);} } initNeuralNetwork(){const networkContainers = document.querySelectorAll('.neural-network');networkContainers.forEach(container =>{this.createNeuralConnections(container);});} createNeuralConnections(container){const svg = document.createElementNS('http: svg.style.cssText = ` position: absolute;top: 0;left: 0;width: 100%;height: 100%;pointer-events: none;z-index: 1;`;for (let i = 0;i < 10;i++){const path = document.createElementNS('http: const startX = Math.random() * 100;const startY = Math.random() * 100;const endX = Math.random() * 100;const endY = Math.random() * 100;path.setAttribute('d', `M${startX},${startY} Q${(startX + endX) / 2},${Math.random() * 100} ${endX},${endY}`);path.setAttribute('stroke', '#7c3aed');path.setAttribute('stroke-width', '1');path.setAttribute('fill', 'none');path.setAttribute('opacity', '0.3');path.style.animation = `neuralPulse ${2 + Math.random() * 3}s infinite ease-in-out`;path.style.animationDelay = `${Math.random() * 2}s`;svg.appendChild(path);} container.appendChild(svg);} destroy(){this.observers.forEach(observer => observer.disconnect());this.observers.clear();if (this.rafId){cancelAnimationFrame(this.rafId);} this.isInitialized = false;} } const style = document.createElement('style');style.textContent = ` @keyframes ripple{to{transform: scale(2);opacity: 0;} } @keyframes quantumFloat{0%, 100%{opacity: 0;transform: translateY(0px) scale(0.5);} 50%{opacity: 1;transform: translateY(-20px) scale(1);} } @keyframes neuralPulse{0%, 100%{opacity: 0.1;stroke-width: 1;} 50%{opacity: 0.8;stroke-width: 2;} } @keyframes liquidMorph{0%, 100%{border-radius: 50% 50% 50% 50%;} 25%{border-radius: 60% 40% 60% 40%;} 50%{border-radius: 40% 60% 40% 60%;} 75%{border-radius: 50% 50% 40% 60%;} } .liquid-blob{animation: liquidMorph 4s ease-in-out infinite;} .quantum-particles{position: relative;overflow: hidden;} .neural-network{position: relative;overflow: hidden;} `;document.head.appendChild(style);window.enhancedEffects = new EnhancedEffects();if (typeof module !== 'undefined' && module.exports){module.exports = EnhancedEffects;}

/* === public\scripts\animations.js === */
/** * Enhanced animations for NosytLabs website * Handles scroll-triggered animations and parallax effects */ (function(){'use strict';function initScrollAnimations(){if (!('IntersectionObserver' in window)){NosytUtils.dom.queryAll('.reveal-on-scroll').forEach(el =>{el.classList.add('revealed');});return;} const observer = new IntersectionObserver((entries) =>{entries.forEach(entry =>{if (entry.isIntersecting){entry.target.classList.add('revealed');observer.unobserve(entry.target);} });},{threshold: 0.15, rootMargin: '0px 0px -50px 0px' });try{const revealElements = NosytUtils.dom.queryAll('.reveal-on-scroll');revealElements.forEach(el =>{if (el && observer){observer.observe(el);} });} catch (error){console.warn('Failed to initialize reveal animations:', error);} } function initModernBackgrounds(){const modernBgElements = NosytUtils.dom.queryAll('.bg-grid-pattern');if (modernBgElements.length === 0) return;const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;if (prefersReducedMotion) return;modernBgElements.forEach(element =>{element.style.animation = 'pulse 10s ease-in-out infinite';});} function initStaggeredAnimations(){NosytUtils.dom.queryAll('.text-reveal, .fade-in-scale, .slide-up-fade').forEach((el, index) =>{const container = el.closest('.staggered-container');if (container){const delay = 0.1 * (index % 5);el.style.setProperty('--animation-delay', `${delay}s`);} });} function initHoverEffects(){const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;if (prefersReducedMotion) return;const interactiveElements = NosytUtils.dom.queryAll('a, button, input, textarea, select, .card, .interactive');interactiveElements.forEach(el =>{if (el.classList.contains('hover-effect-applied')) return;el.classList.add('hover-effect-applied');if (el.tagName === 'A' || el.tagName === 'BUTTON'){el.addEventListener('mouseenter', () =>{el.style.transition = 'transform 0.3s ease, box-shadow 0.3s ease';el.style.transform = 'translateY(-2px)';el.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.1)';});el.addEventListener('mouseleave', () =>{el.style.transform = 'translateY(0)';el.style.boxShadow = '';});} else if (el.classList.contains('card')){el.addEventListener('mouseenter', () =>{el.style.transition = 'transform 0.3s ease, box-shadow 0.3s ease';el.style.transform = 'translateY(-5px)';el.style.boxShadow = '0 8px 16px rgba(0, 0, 0, 0.1)';});el.addEventListener('mouseleave', () =>{el.style.transform = 'translateY(0)';el.style.boxShadow = '';});} });interactiveElements.forEach(el =>{el.addEventListener('focus', () =>{el.classList.add('focus-visible');});el.addEventListener('blur', () =>{el.classList.remove('focus-visible');});});} function initMagneticButtons(){const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;if (prefersReducedMotion) return;const magneticButtons = NosytUtils.dom.queryAll('.magnetic-button');magneticButtons.forEach(button =>{button.addEventListener('mousemove', (e) =>{const rect = button.getBoundingClientRect();const x = e.clientX - rect.left - rect.width / 2;const y = e.clientY - rect.top - rect.height / 2;button.style.transform = `translate(${x * 0.2}px, ${y * 0.2}px)`;});button.addEventListener('mouseleave', () =>{button.style.transform = 'translate(0, 0)';});});} function initWin95Animations(){const minimizeButtons = NosytUtils.dom.queryAll('.win95-minimize-button');const maximizeButtons = NosytUtils.dom.queryAll('.win95-maximize-button');const closeButtons = NosytUtils.dom.queryAll('.win95-close-button');minimizeButtons.forEach(button =>{button.addEventListener('click', (e) =>{const window = button.closest('.win95-window');if (window){window.classList.add('win95-minimize');setTimeout(() =>{window.style.display = 'none';window.classList.remove('win95-minimize');}, 300);} });});maximizeButtons.forEach(button =>{button.addEventListener('click', (e) =>{const window = button.closest('.win95-window');if (window){window.classList.toggle('win95-maximized');if (window.classList.contains('win95-maximized')){window.classList.add('win95-maximize');setTimeout(() =>{window.classList.remove('win95-maximize');}, 300);} } });});closeButtons.forEach(button =>{button.addEventListener('click', (e) =>{const window = button.closest('.win95-window');if (window){window.classList.add('win95-minimize');setTimeout(() =>{window.style.display = 'none';window.classList.remove('win95-minimize');}, 300);} });});} function initParticleEffects(){const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;if (prefersReducedMotion) return;const particleContainers = NosytUtils.dom.queryAll('.particle-container');particleContainers.forEach(container =>{const containerRect = container.getBoundingClientRect();const particleCount = Math.floor(containerRect.width * containerRect.height / 10000);for (let i = 0;i < particleCount;i++){const particle = document.createElement('div');particle.className = 'particle';const size = Math.random() * 4 + 2;particle.style.width = `${size}px`;particle.style.height = `${size}px`;const posX = Math.random() * 100;const posY = Math.random() * 100;particle.style.left = `${posX}%`;particle.style.top = `${posY}%`;particle.style.opacity = Math.random() * 0.5 + 0.1;const duration = Math.random() * 20 + 10;particle.style.animation = `float ${duration}s ease-in-out infinite`;particle.style.animationDelay = `${Math.random() * 10}s`;container.appendChild(particle);} });} function initPageTransitions(){if (!document.startViewTransition) return;NosytUtils.dom.queryAll('a[href^="/"]:not([target])').forEach(link =>{link.addEventListener('click', (e) =>{const href = link.getAttribute('href');if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) return;e.preventDefault();document.body.classList.add('page-transition-out');setTimeout(() =>{window.location.href = href;}, 500);});});window.addEventListener('pageshow', () =>{document.body.classList.add('page-transition-in');setTimeout(() =>{document.body.classList.remove('page-transition-in');}, 500);});} function initTouchInteractions(){const cards = NosytUtils.dom.queryAll('.expandable-card, .flippable');cards.forEach(card =>{let touchStartX = 0;let touchEndX = 0;let touchStartY = 0;let touchEndY = 0;card.addEventListener('touchstart', (e) =>{touchStartX = e.changedTouches[0].screenX;touchStartY = e.changedTouches[0].screenY;});card.addEventListener('touchend', (e) =>{touchEndX = e.changedTouches[0].screenX;touchEndY = e.changedTouches[0].screenY;const horizontalDistance = Math.abs(touchEndX - touchStartX);const verticalDistance = Math.abs(touchEndY - touchStartY);if (horizontalDistance > verticalDistance && horizontalDistance > 50){if (touchEndX < touchStartX && card.classList.contains('flippable')){card.classList.add('flipped');} else if (touchEndX > touchStartX && card.classList.contains('flipped')){card.classList.remove('flipped');} } });});cards.forEach(card =>{let lastTap = 0;card.addEventListener('touchend', (e) =>{const currentTime = new Date().getTime();const tapLength = currentTime - lastTap;if (tapLength < 500 && tapLength > 0){if (card.classList.contains('expandable')){if (e.target.tagName === 'A' || e.target.tagName === 'BUTTON' || e.target.closest('a') || e.target.closest('button')){return;} card.classList.toggle('expanded');const overlay = document.querySelector('.card-overlay');if (overlay){overlay.classList.toggle('active');} if (card.classList.contains('expanded')){document.body.style.overflow = 'hidden';} else{document.body.style.overflow = '';} } } lastTap = currentTime;});});} document.addEventListener('DOMContentLoaded', function(){initScrollAnimations();initModernBackgrounds();initStaggeredAnimations();initHoverEffects();initMagneticButtons();initWin95Animations();initParticleEffects();initPageTransitions();initTouchInteractions();enhanceAccessibility();NosytUtils.dom.queryAll('nav a').forEach(link =>{link.classList.add('nav-link');if (link.getAttribute('href') === window.location.pathname){link.classList.add('active');link.setAttribute('aria-current', 'page');} });NosytUtils.dom.queryAll('.btn-primary, .cta-button').forEach(button =>{button.classList.add('magnetic-button');});});function enhanceAccessibility(){if (!document.querySelector('.skip-link')){const skipLink = document.createElement('a');skipLink.href = '#main-content';skipLink.className = 'skip-link';skipLink.textContent = 'Skip to main content';document.body.insertBefore(skipLink, document.body.firstChild);skipLink.style.position = 'absolute';skipLink.style.top = '-40px';skipLink.style.left = '0';skipLink.style.padding = '8px 16px';skipLink.style.background = 'var(--nosyt-orange-main, #ff6b00)';skipLink.style.color = 'white';skipLink.style.zIndex = '9999';skipLink.style.transition = 'top 0.3s ease';skipLink.addEventListener('focus', () =>{skipLink.style.top = '0';});skipLink.addEventListener('blur', () =>{skipLink.style.top = '-40px';});} const mainElement = document.querySelector('main');if (mainElement && !document.getElementById('main-content')){mainElement.id = 'main-content';mainElement.setAttribute('tabindex', '-1');} const navElement = document.querySelector('nav');if (navElement && !navElement.hasAttribute('aria-label')){navElement.setAttribute('aria-label', 'Main navigation');} const footerNavs = NosytUtils.dom.queryAll('footer nav, footer div[role="navigation"]');footerNavs.forEach((nav, index) =>{if (!nav.hasAttribute('aria-label')){nav.setAttribute('aria-label', `Footer navigation ${index + 1}`);} });document.head.insertAdjacentHTML('beforeend', ` <style> .focus-visible{outline: 2px solid var(--nosyt-orange-main, #ff6b00) !important;outline-offset: 2px !important;} @media (prefers-reduced-motion: reduce){*{animation-duration: 0.001s !important;transition-duration: 0.001s !important;} } </style> `);} window.addEventListener('resize', function(){initModernBackgrounds();initParticleEffects();});})();

