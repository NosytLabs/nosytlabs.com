---
import type { GetStaticPaths } from 'astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { blogPosts, getAllBlogTagsWithMetadata, getBlogPostsByTag } from '../../../config/blog';
import { generateCanonicalUrl, generateBreadcrumbs, generateBlogPath } from '../../../utils/pathResolvers';

export const getStaticPaths: GetStaticPaths = () => {
  const tags = getAllBlogTagsWithMetadata();
  return tags.map(tag => {
    return {
      params: { tag: tag.slug },
      props: {
        tag: tag.name,
        tagSlug: tag.slug,
        posts: getBlogPostsByTag(tag.name)
      }
    };
  });
};

interface Props {
  tag: string;
  tagSlug: string;
  posts: typeof blogPosts;
}

const { tag, tagSlug, posts } = Astro.props;
const breadcrumbs = generateBreadcrumbs(`/blog/tag/${tagSlug}`);
const canonicalUrl = generateCanonicalUrl(`/blog/tag/${tagSlug}`);
---

<BaseLayout
  title={`${tag} Articles | NosytLabs Blog`}
  description={`Discover articles tagged with ${tag.toLowerCase()}. Expert insights and in-depth content from NosytLabs covering ${tag.toLowerCase()} topics.`}
>
  <!-- Breadcrumbs -->
  <nav class="container mx-auto px-4 py-4" aria-label="Breadcrumb">
    <ol class="flex items-center space-x-2 text-sm text-gray-600">
      {breadcrumbs.map((crumb, index) => (
        <li class="flex items-center">
          {index > 0 && <span class="mx-2 text-gray-400">/</span>}
          {index === breadcrumbs.length - 1 ? (
            <span class="text-gray-900 font-medium">{crumb.label}</span>
          ) : (
            <a href={crumb.href} class="hover:text-blue-600 transition-colors">
              {crumb.label}
            </a>
          )}
        </li>
      ))}
    </ol>
  </nav>

  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-orange-600 via-orange-700 to-orange-800 text-white py-20">
    <div class="absolute inset-0 bg-gradient-to-r from-orange-900/90 to-blue-900/20"></div>
    <div class="container mx-auto px-4 text-center relative z-10">
      <div class="flex items-center justify-center mb-6">
        <svg class="h-10 w-10 text-blue-300 mr-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
        </svg>
        <h1 class="text-4xl lg:text-6xl font-bold">
          #{tag}
        </h1>
      </div>
      <p class="text-xl text-orange-100 max-w-3xl mx-auto mb-8">
        Exploring topics related to {tag.toLowerCase()}. 
        {posts.length} article{posts.length !== 1 ? 's' : ''} tagged with this topic.
      </p>
      <div class="flex items-center justify-center">
        <span class="bg-blue-500 text-white px-4 py-2 rounded-full font-semibold">
          {posts.length} Posts
        </span>
      </div>
    </div>
    <div class="absolute bottom-0 left-0 right-0 h-24 bg-gradient-to-t from-white to-transparent"></div>
  </section>

  <!-- Blog Posts Grid -->
  <section class="py-16">
    <div class="container mx-auto px-4">
      {posts.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {posts.map((post) => {
            const estimatedReadTime = Math.ceil(post.content.replace(/<[^>]*>/g, '').split(' ').length / 200);
            const postPath = generateBlogPath(post.slug);
            
            return (
              <article class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-lg transition-all duration-300 group">
                <div class="p-6">
                  <!-- Post Meta -->
                  <div class="flex items-center text-sm text-gray-500 mb-3">
                    <Calendar className="h-4 w-4 mr-1" />
                    <time datetime={post.publishDate.toISOString()}>
                      {post.publishDate.toLocaleDateString('en-US', { 
                        year: 'numeric', 
                        month: 'long', 
                        day: 'numeric' 
                      })}
                    </time>
                    <span class="mx-2">â€¢</span>
                    <Clock className="h-4 w-4 mr-1" />
                    <span>{estimatedReadTime} min read</span>
                  </div>

                  <!-- Post Title -->
                  <h2 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-green-600 transition-colors">
                    <a href={postPath} class="hover:underline">
                      {post.title}
                    </a>
                  </h2>

                  <!-- Post Excerpt -->
                  <p class="text-gray-600 mb-4 line-clamp-3">
                    {post.excerpt}
                  </p>

                  <!-- Post Category -->
                  <div class="mb-4">
                    <span class="bg-blue-100 text-blue-700 px-2 py-1 rounded-md text-xs font-medium">
                      {post.category}
                    </span>
                  </div>

                  <!-- Post Tags -->
                  {post.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2 mb-4">
                      {post.tags.slice(0, 3).map((postTag) => (
                        <span class={`px-2 py-1 rounded-md text-xs ${
                          postTag === tag 
                            ? 'bg-green-100 text-green-800 font-medium ring-2 ring-green-200' 
                            : 'bg-gray-100 text-gray-700'
                        }`}>
                          #{postTag}
                        </span>
                      ))}
                      {post.tags.length > 3 && (
                        <span class="text-gray-500 text-xs">
                          +{post.tags.length - 3} more
                        </span>
                      )}
                    </div>
                  )}

                  <!-- Author & Read More -->
                  <div class="flex items-center justify-between">
                    <div class="flex items-center text-sm text-gray-500">
                      <User className="h-4 w-4 mr-1" />
                      <span>{post.author}</span>
                    </div>
                    <a 
                      href={postPath}
                      class="inline-flex items-center text-green-600 hover:text-green-700 text-sm font-medium transition-colors"
                    >
                      Read More
                      <ArrowRight className="h-4 w-4 ml-1" />
                    </a>
                  </div>
                </div>
              </article>
            );
          })}
        </div>
      ) : (
        <div class="text-center py-16">
          <TagIcon className="h-16 w-16 text-gray-300 mx-auto mb-4" />
          <h3 class="text-xl font-semibold text-gray-900 mb-2">No Articles Found</h3>
          <p class="text-gray-600 mb-6">
            We haven't published any articles with the "{tag}" tag yet.
          </p>
          <a 
            href="/blog" 
            class="inline-flex items-center bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors"
          >
            Explore All Articles
            <ArrowRight className="h-4 w-4 ml-2" />
          </a>
        </div>
      )}
    </div>
  </section>

  <!-- Related Tags -->
  <section class="bg-gray-50 py-16">
    <div class="container mx-auto px-4">
      <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">
        Explore Related Tags
      </h2>
      <div class="flex flex-wrap justify-center gap-3">
        {getAllBlogTagsWithMetadata()
          .filter(t => t.name !== tag)
          .slice(0, 12)
          .map((t) => (
            <a 
              href={`/blog/tag/${t.slug}`}
              class="bg-white px-3 py-2 rounded-lg shadow-sm hover:shadow-md transition-all duration-300 border border-gray-100 hover:border-green-300 group"
            >
              <span class="text-gray-700 group-hover:text-green-600 text-sm">
                #{t.name}
              </span>
              <span class="text-gray-400 ml-2 text-xs">
                ({t.count})
              </span>
            </a>
          ))
        }
      </div>
      <div class="text-center mt-8">
        <a 
          href="/blog"
          class="inline-flex items-center text-green-600 hover:text-green-700 font-medium"
        >
          View All Articles
          <ArrowRight className="h-4 w-4 ml-2" />
        </a>
      </div>
    </div>
  </section>

  <!-- Tag Cloud Section -->
  <section class="py-16">
    <div class="container mx-auto px-4">
      <h2 class="text-2xl font-bold text-gray-900 mb-8 text-center">
        Popular Tags
      </h2>
      <div class="flex flex-wrap justify-center gap-2 max-w-4xl mx-auto">
        {getAllBlogTagsWithMetadata()
          .sort((a, b) => b.count - a.count)
          .slice(0, 20)
          .map((t) => {
            const isCurrentTag = t.name === tag;
            const fontSize = Math.min(Math.max(t.count / 2 + 0.75, 0.75), 1.5);
            
            return (
              <a 
                href={`/blog/tag/${t.slug}`}
                class={`inline-block px-3 py-1 rounded-md transition-all duration-300 hover:scale-105 ${
                  isCurrentTag 
                    ? 'bg-green-600 text-white shadow-lg' 
                    : 'bg-gray-100 text-gray-700 hover:bg-green-100 hover:text-green-700'
                }`}
                style={`font-size: ${fontSize}rem;`}
              >
                #{t.name}
                <span class="ml-1 text-xs opacity-75">
                  ({t.count})
                </span>
              </a>
            );
          })
        }
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>